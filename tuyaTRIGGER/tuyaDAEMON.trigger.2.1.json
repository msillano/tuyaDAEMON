[{"id":"66ca1554.e4c85c","type":"subflow","name":"red trigger","info":"Build a REDTRG msg for tuya_bridge device.\n\nREDTRG values are in range 2000-3000 (convention)\n\nNote: it uses dp 102 (for  [Switch MS-104]). \nChange the code if your tuya-bridge device uses a different dp.","category":"","in":[{"x":60,"y":80,"wires":[{"id":"f0932848.b39158"}]}],"out":[{"x":360,"y":80,"wires":[{"id":"f0932848.b39158","port":0}]}],"env":[{"name":"TRGnumber","type":"str","value":"800"}],"color":"#A6BBCF","inputLabels":["any msg"],"outputLabels":["continue"],"icon":"font-awesome/fa-arrow-right"},{"id":"f0932848.b39158","type":"function","z":"66ca1554.e4c85c","name":"send  X TRIGGER","func":"const triggerDP = 7;  // tuya-bridge countdown\n// normal use: no msg.payload.data.dps[triggerDP]\n// ack use:   msg.payload.data.dps[triggerDP] > 800\n if ((msg.payload.data != undefined) && (msg.payload.data.dps != undefined) && (msg.payload.data.dps[triggerDP] < 800))\n    return null;\nvar n = env.get(\"TRGnumber\");\nvar trig = {\n       \"payload\": {\n          \"dps\":triggerDP, \n          \"set\": parseInt(n)       \n          }\n}\n\nreturn trig ;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"tsstart\", null);\nflow.set(\"pingstat\",{\n      total:1,\n      test: 0,\n      sum:0,\n      min: 100000000000,\n      max:0\n});\n","finalize":"","x":210,"y":80,"wires":[[]]},{"id":"ee953c15.ada29","type":"subflow","name":"static retry","info":"Handles tuya device status changes.\r\n\r\nProcesses the status of a real device , if the connection status changes:\r\n   - Creates a log msg (deviceId, \"_connected\", true/false) for standard processing\r\n \r\nIMPORTANT: set the ** deviceID ** parameter with the correct ID value.","category":"","in":[{"x":80,"y":80,"wires":[{"id":"6160136.f5f99ec"}]}],"out":[{"x":440,"y":80,"wires":[{"id":"6160136.f5f99ec","port":0}]}],"env":[{"name":"deviceId","type":"str","value":""}],"color":"#DDAA99","inputLabels":["in staus"],"outputLabels":["to log"],"icon":"font-awesome/fa-rss-square"},{"id":"6160136.f5f99ec","type":"function","z":"ee953c15.ada29","name":"connected message - static","func":"// to set global.tuyasyatus.xxxx._connected \n// creates a response for the dp \"_connected\"\n// store value and filter events\n\nvar CONN = \"_connected\";  //  tuyadaemon internal define\n// see also tuyaDAEMON.\"connection check\" function\n// local function\nfunction _sendReal(idevice,  value){\n// builds a fake OUT message \nvar newMsg = { \"payload\":{\n      \"deviceId\": idevice,\n      \"data\": {\n          \"dps\":{\n            [CONN]:value\n          }}}};\nreturn newMsg;  \n}\n\n// user set parameter device id\nvar deviceId = env.get(\"deviceId\");\n\nvar nowconnected;\nif((msg.payload !== undefined)&&(msg.payload.state !== undefined)){\n   nowconnected =  (msg.payload.state == \"CONNECTED\" || msg.payload.state == \"node-red:common.status.connected\" );        // can change\n}\nif((msg.status !== undefined)&&(msg.status.text !== undefined)){\n   nowconnected =  (msg.status.text == \"CONNECTED\" || msg.status.text == \"node-red:common.status.connected\" );        // can change\n}\nif (nowconnected == undefined) return null;\n// filering \nlet old = flow.get(deviceId+\"_con\");\n// node.warn([\"STATUS \",msg, nowconnected, old]);\n\nif (old === nowconnected) return null;\nflow.set(deviceId+\"_con\", nowconnected);\n\nreturn(_sendReal(deviceId, nowconnected));\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// set the default status _connected to null in tuyastatus\n// creates tuyastatus entry to null.\nvar alldevices = global.get(\"alldevices\");\nif (alldevices === undefined) return null;\nvar deviceId = env.get(\"deviceId\");\n// only for REAL devices\nvar d = alldevices.real.find(device => device.id === deviceId);\nif (d === undefined) return null;\n//\nvar tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus === undefined)\n        tuyastatus = {};\n    var dev = (d.name?d.name:d.id);\n    if (tuyastatus[dev] === undefined) {\n        tuyastatus[dev] = {_connected:null};\n        global.set(\"tuyastatus\", tuyastatus);\n    }\n    ","finalize":"","x":260,"y":80,"wires":[[]]},{"id":"638c6657.ce65c8","type":"tab","label":"tuyaDAEMON.triggers","disabled":false,"info":"**addon for tuyaDAEMON flow**\n\nThis flow enables **tuyaDAEMON TRIGGERS** handling and extends tuyaDAEMON capabilities to get a very strict integration of tuya-cloud with node-red.\n\nsee: https://github.com/msillano/tuyaDAEMON/tree/main/tuyaTRIGGER"},{"id":"798c4138.06176","type":"link out","z":"638c6657.ce65c8","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":955,"y":220,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"ebf1518e.eb3e2","type":"comment","z":"638c6657.ce65c8","name":"tuyaDAEMON.TRIGGER","info":"## TRIGGER tuyaDEAMON module\n\n_A real device WiFI, having  a big unused numerical parameter, say a 'counter', writable for both **Tuya** and **node-red**, is all the required hardware to implement a robust bilateral event communication (**TRIGGER**)._\n\nsee   https://github.com/msillano/tuyaDAEMON/blob/main/tuyaTRIGGER/README.md","x":230,"y":140,"wires":[]},{"id":"69321d9a.30b7d4","type":"link in","z":"638c6657.ce65c8","name":"tuya_bridge_IN","links":["305e7686.63b0fa","46ee1dd3.444b64","5024d2e0.b05cec","808817eb.3be488","83ab4822.a4d028","a3dfd8c8.7dac98","28352cf0.53f614"],"x":240,"y":220,"wires":[["c81edba3.cbcd58","2710cd5f.1eb562"]],"icon":"node-red/arrow-in.svg","l":true},{"id":"5024d2e0.b05cec","type":"link out","z":"638c6657.ce65c8","name":"tuya bridge IN","links":["69321d9a.30b7d4"],"x":1515,"y":100,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"bfddb028.1da3","type":"debug","z":"638c6657.ce65c8","name":"*trace: msg OUT from tuya_bridge","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":400,"y":320,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg FROM the 'tuya_bridge' device.\n- Normal use: disabled"},{"id":"2710cd5f.1eb562","type":"debug","z":"638c6657.ce65c8","name":"*trace: msg IN for tuya_bridge","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":410,"y":280,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg TO the 'tuya_bridge' device.\n- Normal use: disabled"},{"id":"8b585752.c9b818","type":"switch","z":"638c6657.ce65c8","name":"TUYATRGXXX","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"btwn","v":"1001","vt":"num","v2":"4999","v2t":"num"},{"t":"lt","v":"1000","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1080,"y":160,"wires":[["aba38dbb.f8b33","9efb8156.f33d4"],["6da77dc2.b387a4"]],"info":"selects all TRIGGERS from tuya cloud (values: 801-1999), to more prosesses\nselect test pig values (0-799) (optional)\n\n"},{"id":"63e6d5d.0a5da2c","type":"link out","z":"638c6657.ce65c8","name":"to core.more_devices_IN","links":["c90b7eb2.07595"],"x":1035,"y":280,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"fd3a31f5.8912d","type":"subflow:ee953c15.ada29","z":"638c6657.ce65c8","name":"","env":[{"name":"deviceId","value":"bf8c4fd0c03067079cplb4","type":"str"},{"name":"deviceID","value":"bfa355aa196ae5975cy6ii","type":"str"}],"x":870,"y":280,"wires":[["63e6d5d.0a5da2c"]]},{"id":"c81edba3.cbcd58","type":"delay","z":"638c6657.ce65c8","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"50","nbRateUnits":"10","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":460,"y":220,"wires":[["bd44880d.8cdda8"]],"info":"limit throughput, but allows smooth operations and less connection problems"},{"id":"9efb8156.f33d4","type":"link out","z":"638c6657.ce65c8","name":"triggers_OUT","links":["3246c6c8.f9ed9a","42656e5c.9cc55","7724fe64.ce399","ae124920.c94578","d3e4089a.6570c8","251c1ce0.01ec64","b855dd13.84c18"],"x":1420,"y":160,"wires":[],"icon":"node-red/arrow-in.svg","l":true},{"id":"aba38dbb.f8b33","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"send ACK","env":[{"name":"TRGnumber","value":"0","type":"str"}],"x":1400,"y":100,"wires":[["5024d2e0.b05cec"]]},{"id":"30ac034a.029d3c","type":"change","z":"638c6657.ce65c8","name":"dp convert","rules":[{"t":"set","p":"payload.tuyatrigger","pt":"msg","to":"payload.data.dps[\"7\"]","tot":"msg"},{"t":"set","p":"payload.data","pt":"msg","to":"{}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":870,"y":160,"wires":[["8b585752.c9b818"]]},{"id":"6da77dc2.b387a4","type":"link out","z":"638c6657.ce65c8","name":"to system.ping_test","links":["c23760b2.45d3a"],"x":1355,"y":220,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"cf1237ea.b909e8","type":"comment","z":"638c6657.ce65c8","name":"Debug pad trace","info":"**Disable unwonted trace messages on debug pad.**\n\n - Disable unwonted trace nodes.\n  \n ","x":460,"y":380,"wires":[]},{"id":"bd44880d.8cdda8","type":"tuya-smart-device","z":"638c6657.ce65c8","deviceName":"*tuya_bridge","disableAutoStart":false,"deviceId":"bf8c4fd0c03067079cplb4","deviceKey":"b2feff3e0cac7db7","deviceIp":"","retryTimeout":"3012","findTimeout":"2800","tuyaVersion":"3.1","eventMode":"event-both","x":680,"y":220,"wires":[["798c4138.06176","bfddb028.1da3","30ac034a.029d3c"],["fd3a31f5.8912d"]],"info":"CUSTOMIZATION\n\n- About TRIGGERS and devices [see here](https://github.com/msillano/tuyaDAEMON/tree/main/tuyaTRIGGER#implementation) \n\nSetup for a new tuya_bridge device: any device as a different 'countdown' dp, so you must update the cconst 'triggerDP':\n\n- the node trigger.'dp convert'\n- the sub-flow 'red-trigger'\n- the code for 'case \"_doTrigger\":' in _system.'sistem cmd selector 2' node."},{"id":"481011f1.6ca57","type":"comment","z":"638c6657.ce65c8","name":"test   tuya_bridge  device","info":"Only for test\n\nsee notes on *nodes","x":200,"y":420,"wires":[]},{"id":"e01f44d1.0cc8e8","type":"inject","z":"638c6657.ce65c8","name":"*test  SET: tuya_bridge switch  ON [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"ON\"}","payloadType":"json","x":280,"y":520,"wires":[["fed740ad.b1ac2"]],"info":"NOTE:\nOn the 'tuya_bridge'.switch, in 'global.alldevices', is added a TEST SHARE, fired if switch is \"ON\":\n\nIt is OK if it sends 2 TUYA TRIGGERS:  \n  2 X [\"RX: 'HAL@home'/'_doTrigger' \",5000],\nand the 2 TRIGGER5000 produces ( using tuya-cloud automation):\n  2 x [\" RX: 'switch module #1'/'switch'\", \"ON\"] \n  \nFOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"fed740ad.b1ac2","type":"link out","z":"638c6657.ce65c8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":585,"y":480,"wires":[]},{"id":"8c305f26.6477a","type":"inject","z":"638c6657.ce65c8","name":"test SET: tuya_bridge 'on reset' [101] HOLD","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\",\"value\":\"memory\"}","payloadType":"json","x":310,"y":600,"wires":[["fed740ad.b1ac2"]]},{"id":"2f840ebb.96ccb2","type":"inject","z":"638c6657.ce65c8","name":"test: GET tuya_bridge 'on reset' [101]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\"}","payloadType":"json","x":290,"y":640,"wires":[["fed740ad.b1ac2"]]},{"id":"850aee4d.f8d11","type":"inject","z":"638c6657.ce65c8","name":"test  SET: tuya_bridge switch  OFF [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"OFF\"}","payloadType":"json","x":280,"y":560,"wires":[["fed740ad.b1ac2"]]},{"id":"822eca51.bed0b8","type":"inject","z":"638c6657.ce65c8","name":"test GET: tuya_bridge switch ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\"}","payloadType":"json","x":260,"y":480,"wires":[["fed740ad.b1ac2"]]},{"id":"6355076.43a97f8","type":"inject","z":"638c6657.ce65c8","name":"*test  REDTRG5000","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":740,"wires":[["753b383f.f776b8"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"b76d70b8.6deed","type":"inject","z":"638c6657.ce65c8","name":"*test  REDTRG5020","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":780,"wires":[["dde0250f.b12798"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"dde0250f.b12798","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"*trigger5020","env":[{"name":"TRGnumber","value":"5020","type":"str"}],"x":430,"y":780,"wires":[["28352cf0.53f614"]]},{"id":"753b383f.f776b8","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"*trigger5000","env":[{"name":"TRGnumber","value":"5000","type":"str"}],"x":430,"y":740,"wires":[["28352cf0.53f614"]]},{"id":"28352cf0.53f614","type":"link out","z":"638c6657.ce65c8","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":595,"y":740,"wires":[]},{"id":"3c0b3b17.e0a324","type":"comment","z":"638c6657.ce65c8","name":"test REDTRIGGER  ( to Tuya-cloud)","info":"only for test\nThe triggers 5000 and 5020 do a simple task\non Tuya-clod: ON/OFF a switch.\nThis is used in many test.\n\nRequired automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`\n\n\n","x":260,"y":700,"wires":[]}]