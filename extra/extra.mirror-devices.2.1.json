[{"id":"66ca1554.e4c85c","type":"subflow","name":"red trigger","info":"Build a REDTRG msg for tuya_bridge device.\n\nREDTRG values are in range 2000-3000 (convention)\n\nNote: it uses dp 102 (for  [Switch MS-104]). \nChange the code if your tuya-bridge device uses a different dp.","category":"","in":[{"x":60,"y":80,"wires":[{"id":"f0932848.b39158"}]}],"out":[{"x":360,"y":80,"wires":[{"id":"f0932848.b39158","port":0}]}],"env":[{"name":"TRGnumber","type":"str","value":"800"}],"color":"#A6BBCF","inputLabels":["any msg"],"outputLabels":["continue"],"icon":"font-awesome/fa-arrow-right"},{"id":"f0932848.b39158","type":"function","z":"66ca1554.e4c85c","name":"send  X TRIGGER","func":"const triggerDP = 7;  // tuya-bridge countdown\n// normal use: no msg.payload.data.dps[triggerDP]\n// ack use:   msg.payload.data.dps[triggerDP] > 800\n if ((msg.payload.data != undefined) && (msg.payload.data.dps != undefined) && (msg.payload.data.dps[triggerDP] < 800))\n    return null;\nvar n = env.get(\"TRGnumber\");\nvar trig = {\n       \"payload\": {\n          \"dps\":triggerDP, \n          \"set\": parseInt(n)       \n          }\n}\n\nreturn trig ;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"tsstart\", null);\nflow.set(\"pingstat\",{\n      total:1,\n      test: 0,\n      sum:0,\n      min: 100000000000,\n      max:0\n});\n","finalize":"","x":210,"y":80,"wires":[[]]},{"id":"81d3b584.14c888","type":"subflow","name":"do logging","info":"This node simulate data received from a tuya device. I.e. the output must go to \"to logging\" input.\nUsed to build an update message for 'mirror' devices.\n\nUsed to process tuyaTRIGGERS.\n\n- `deviceID`: the 'mirror' device ID or CID\n- `fakeDP`: the data point id. Convention: user defined, equal to related tuyaTRIGGER, number (1000-2000). \n- `value`: the new value. If the value starts with '@', then it is eval()ued: exemple '@msg.payoad.set' => eval('msg.payoad.set'))\n\nnote: The 'mirror' device MUST exist in the `fake` branch of **alldevices**.\n\n","category":"","in":[{"x":120,"y":80,"wires":[{"id":"6d1b2b8f.c5e554"}]}],"out":[{"x":460,"y":80,"wires":[{"id":"6d1b2b8f.c5e554","port":0}]}],"env":[{"name":"deviceID","type":"str","value":""},{"name":"propertyDP","type":"str","value":""},{"name":"value","type":"str","value":""}],"color":"#87A980","icon":"node-red/debug.svg"},{"id":"6d1b2b8f.c5e554","type":"function","z":"81d3b584.14c888","name":"do mirror msg","func":"// local function\n// note: the value param can also be a @variable:\n//e.g. \"@msg.payload.set\" => eval(msg.payload.set) \n\n    // builds a fake OUT message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": env.get(\"deviceID\"),\n            \"data\": {\n                \"dps\": {}\n                //          \"dps\":[dpname = value]\n            }\n        }\n    };\n    \n    var xvalue = env.get(\"value\").toString().trim();\n    if (xvalue.startsWith('@')){\n        xvalue = eval(xvalue.substring(1));\n    }\n    var dpname = env.get(\"propertyDP\").toString().trim();\n    if (dpname.startsWith('@')){\n        dpname = eval(dpname.substring(1));\n    }\n  \n    newMsg.payload.data.dps[dpname.toString()] = xvalue;\n    return newMsg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":300,"y":80,"wires":[[]]},{"id":"4bebbdfa.41af64","type":"tab","label":"extra.mirror-devices","disabled":false,"info":"This flow contains \n\n - some TRIGGER examples\n - all mirror devices on the system"},{"id":"7724fe64.ce399","type":"link in","z":"4bebbdfa.41af64","name":" triggers IN","links":["9efb8156.f33d4"],"x":255,"y":740,"wires":[["9bff7a92.229d98"]]},{"id":"9bff7a92.229d98","type":"switch","z":"4bebbdfa.41af64","name":"smoke detector","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1800","vt":"str"},{"t":"eq","v":"1810","vt":"str"},{"t":"eq","v":"1820","vt":"str"},{"t":"eq","v":"1830","vt":"str"},{"t":"eq","v":"1840","vt":"str"},{"t":"eq","v":"1850","vt":"str"}],"checkall":"false","repair":false,"outputs":6,"x":420,"y":740,"wires":[["dfbd21ba.05302"],["41bd356c.fc27fc"],["f0d9e484.2247c8"],["50659a72.879d14"],["9c0ddbf6.c9b378"],["cb9729f6.064aa8"]],"info":"for my device\ndp = 102    // countdown"},{"id":"dfbd21ba.05302","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1800: alarm ON","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"value","value":"ON","type":"str"},{"name":"fakeDP","value":"1800","type":"num"}],"x":780,"y":620,"wires":[["54d03d6e.945994"]]},{"id":"41bd356c.fc27fc","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1810: alarm OFF","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1800","type":"num"},{"name":"value","value":"OFF","type":"str"}],"x":770,"y":660,"wires":[["54d03d6e.945994"]]},{"id":"f0d9e484.2247c8","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1820: battery LOW","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1820","type":"num"},{"name":"value","value":"LOW","type":"str"}],"x":770,"y":700,"wires":[["54d03d6e.945994"]]},{"id":"54d03d6e.945994","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":975,"y":740,"wires":[]},{"id":"d6618ecb.a3d0b","type":"comment","z":"4bebbdfa.41af64","name":"converts TUYATRG to device changes","info":"Switch node to select incoming TRIGGER from Tuya (status update)\nThe selected TUYATRG are converted to device/property/value and sended to tuyaDAEMON ('to logging' link) for standard processing","x":390,"y":660,"wires":[]},{"id":"71493ceb.b6f104","type":"function","z":"4bebbdfa.41af64","name":"pick and execute","func":"// Implementation of GET/SET/SCHEMA/MULTIPLE  commands\n// for any 'fake' device\n//    1) the msg.to IS the device ID\n//    2) the msg.infodp IS the dp ID\n//    3) the msg.payload.device IS the device name (if exist, or ID) used by tuyastatus\n//    4) the msg.payload.property IS the dp name (if exist) used by tuyastatus\n// smoke detector accepts only SET, absorb all msg.\n// --------------- locals\n// mapping msg to outputs\nconst DEVID = \"317080408caab521a5d3\";\n\n\n// test: idDev GET command?\nfunction _isGetCommand( msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n\n//  set (and create, if required) global.tuyastatus structure from msg\nfunction _setGlobalValue(msx) {\n    var tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus == undefined)\n        tuyastatus = {};\n    if (tuyastatus[msx.payload.device] == undefined)\n        tuyastatus[msx.payload.device] = {};\n    tuyastatus[msx.payload.device][msx.payload.property] = msx.payload.value;\n    global.set(\"tuyastatus\", tuyastatus);\n}\n\n// ------------- main\n// select and execute all commands for 'smoke detector'\n// accepts only SET. final: absorb all bad msg + error.\n//\n\nif (_isSetCommand(msg)) { // test: is SET\n    // -----------  get obj-dev and obj-dp\n        switch (msg.infodp) {\n        case \"1840\":\n            // -----------  select by value - tolerant, accepts 'OFF','NO', 0, \"0\", \"\", [],[0],[[]], null, undefined :  see https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons\n            //  language en/it\n            if ((msg.payload.value == null) || (msg.payload.value == false) || (msg.payload.value.toUpperCase() === \"OFF\") || (msg.payload.value.toUpperCase() === \"NO\"))\n                return ([null, msg]); // output#2\n            //  else is ON\n            return ([msg]); // output#1\n        }\n    //\n}\n\n// default: warning, bad command\nif (msg.to === DEVID) {\n    node.warn([\"The command '\" + msg.payload.property + \"=\" + msg.payload.value + \"' is unknown for smoke detector device.'\" + msg.payload.device + \"'(1)\", oDev]);\n}\n// total 3 outputs\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":430,"y":920,"wires":[["6c452e2f.f77e"],["51abfb8.0f92a04"]]},{"id":"369ab28b.348ebe","type":"link in","z":"4bebbdfa.41af64","name":"commands IN","links":["18817677.061b9a"],"x":255,"y":920,"wires":[["71493ceb.b6f104"]]},{"id":"6c452e2f.f77e","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"5800 SET silence ON","env":[{"name":"TRGnumber","value":"5800","type":"str"}],"x":780,"y":880,"wires":[["83ab4822.a4d028"]]},{"id":"83ab4822.a4d028","type":"link out","z":"4bebbdfa.41af64","name":"to send","links":["69321d9a.30b7d4"],"x":975,"y":920,"wires":[]},{"id":"51abfb8.0f92a04","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"5810 SET silence OFF","env":[{"name":"TRGnumber","value":"2810","type":"str"}],"x":780,"y":920,"wires":[["83ab4822.a4d028"]]},{"id":"67189163.f24ea","type":"comment","z":"4bebbdfa.41af64","name":"converts SET requests to REDTRG (for Tuya)","info":"For 'mirror' and 'fake' devices:\nThis custom flow decodes user command relatives to a device:\n\nBased on device(/propery(/value)) this flow can:\n  - do local processing\n  - send REDTRG to Tuya-cloud\n  - produce a WARNING","x":410,"y":860,"wires":[]},{"id":"f1dc63d6.6e4b5","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE smoke detector","info":"\nsee https://github.com/msillano/tuyaDAEMON/wiki/mirror-device-'Smoke_Detector':-case-study","x":240,"y":600,"wires":[]},{"id":"50659a72.879d14","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1830: battery OK","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1820","type":"num"},{"name":"value","value":"OK","type":"str"}],"x":770,"y":740,"wires":[["54d03d6e.945994"]]},{"id":"f3a399b4.d43028","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'Door_Sensor'","info":"mirror device 'door sensor' input messages\n\nsee https://github.com/msillano/tuyaDAEMON/blob/main/devices/Door_Sensor/device_Door_Sensor.pdf","x":230,"y":1020,"wires":[]},{"id":"8d12f398.d07e","type":"switch","z":"4bebbdfa.41af64","name":"main door","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1030","vt":"str"},{"t":"eq","v":"1040","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":400,"y":1080,"wires":[["a873b4f2.725588"],["e5ca8ffd.7b59d"]],"info":"for my device\ndp = 102    // countdown"},{"id":"e5ca8ffd.7b59d","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1040: inject door open ON","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1030","type":"str"},{"name":"value","value":"true","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1100,"wires":[["7b505949.7ba1e8"]]},{"id":"a873b4f2.725588","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1030: inject door open OFF","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1030","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1060,"wires":[["7b505949.7ba1e8"]]},{"id":"d3e4089a.6570c8","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1080,"wires":[["8d12f398.d07e"]]},{"id":"7b505949.7ba1e8","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1080,"wires":[]},{"id":"598a86b4.d36608","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'PIR_Sensor'","info":"mirror device 'PIR sensor': input messages\n\nsee: https://github.com/msillano/tuyaDAEMON/blob/main/devices/PIR_motion/device_PIR_motion.pdf","x":230,"y":1160,"wires":[]},{"id":"1724d873.b02078","type":"switch","z":"4bebbdfa.41af64","name":"PIR living","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1010","vt":"str"},{"t":"eq","v":"1020","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":400,"y":1220,"wires":[["9703837e.8a885"],["70807d28.e60d84"]],"info":"for my device\ndp = 102    // countdown"},{"id":"3246c6c8.f9ed9a","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1220,"wires":[["1724d873.b02078"]]},{"id":"bbd1da58.dba9c8","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1220,"wires":[]},{"id":"9703837e.8a885","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1010: inject PIR alarm OFF","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1010","type":"str"}],"x":760,"y":1200,"wires":[["bbd1da58.dba9c8"]]},{"id":"70807d28.e60d84","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1020: inject PIR alarm ON","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"fakeDP","value":"1010","type":"num"},{"name":"value","value":"true","type":"bool"}],"x":770,"y":1240,"wires":[["bbd1da58.dba9c8"]]},{"id":"9c0ddbf6.c9b378","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1840: silence ON","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1840","type":"num"},{"name":"value","value":"ON","type":"str"}],"x":770,"y":780,"wires":[["54d03d6e.945994"]]},{"id":"cb9729f6.064aa8","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1850: silence OFF","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1840","type":"num"},{"name":"value","value":"OFF","type":"str"}],"x":770,"y":820,"wires":[["54d03d6e.945994"]]},{"id":"6032a270.4f2c6c","type":"link in","z":"4bebbdfa.41af64","name":"*REDTRG5000","links":[],"x":420,"y":160,"wires":[["7199a556.460d4c"]],"l":true},{"id":"a6aefdcd.f125b","type":"inject","z":"4bebbdfa.41af64","name":"*test  REDTRG5000","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":200,"wires":[["7199a556.460d4c"]]},{"id":"22aa17c9.49abf8","type":"link in","z":"4bebbdfa.41af64","name":"*REDTRG5020","links":[],"x":420,"y":240,"wires":[["6f68f3f4.61256c"]],"l":true},{"id":"b42ae860.a855e8","type":"inject","z":"4bebbdfa.41af64","name":"*test  REDTRG5020","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":280,"wires":[["6f68f3f4.61256c"]]},{"id":"6f68f3f4.61256c","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"*trigger5020","env":[{"name":"TRGnumber","value":"5020","type":"str"}],"x":810,"y":240,"wires":[["a3dfd8c8.7dac98"]]},{"id":"7199a556.460d4c","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"*trigger5000","env":[{"name":"TRGnumber","value":"5000","type":"str"}],"x":810,"y":200,"wires":[["a3dfd8c8.7dac98"]]},{"id":"a3dfd8c8.7dac98","type":"link out","z":"4bebbdfa.41af64","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":955,"y":200,"wires":[]},{"id":"22565a24.03e246","type":"comment","z":"4bebbdfa.41af64","name":"node_red TRIGGERS  examples","info":"A node-red trigger (REDTRGXXXX) is used to fire _smarlife_ automations.\n\nconvention: reserved values for REDTRG: 2000-2999\n\nexamples: REDTRG2010,  REDTRG2020","x":230,"y":100,"wires":[]},{"id":"8e2917e2.4c7568","type":"function","z":"4bebbdfa.41af64","name":"event selector","func":"// NOTE \n// obsolete\n// from Ver.2.0 this function is better implemented using 'share' option\n\n// msg (real)\n//  _msgid: \"3042f3fd.8497fc\"\n//  _event: \"node:2ec83963.a7d146\"\n//  from:  \"bfa355aa196ae5975cy6ii\" // id\n//  payload: object\n//     deviceName: \"*tuya_bridge\" \n//     data: object\n//        t: 1609234903\n//        dps: object\n//           102: 1020\n//\n//msg (virtual)\n//   _msgid: \"d0b26a44.e81738\"\n//   from: \"bfb073b1b789b5994cro7p\"  // cid\n//   payload: object\n//      deviceName: \"Zigbee Gateway\" // gateway\n//      data: object\n//        cid: \"00158d00056a1c45\"\n//        t: 1609235292\n//        dps: object\n//           103: 19\n\n// select messages to fire your EVNTRIGGERXXX.\n// the condition can be as complex  as required \n//  works with messages from any device: real, virtual, mirror, system\n//\n\n// filter example: \n// Trigger on temperature > 20 °C  (from a virtual device)\n if(msg.from == \"00158d00056a1c45\")  // from device\n       if (msg.payload.data.dps[103] >=  200)          // test on undecoded value\n         return[{payload:\"go\"}];                 // in output#1\n// filter example: \n// Trigger on PIR on (from mirror device)\n if(msg.from == \"733710408caab5e79887\")    // the device\n       if (msg.payload.data.dps[1010] === true)        // test on value\n           return[null, {payload:\"go\"}];         // in output#2\n\n//  more....\nreturn null;","outputs":2,"noerr":0,"initialize":"","finalize":"","x":420,"y":420,"wires":[["7c8df992.97a758"],["93689da9.046aa"]]},{"id":"3baeae11.41ef52","type":"link in","z":"4bebbdfa.41af64","name":"IN all msg from devices","links":["81a9b329.092b1"],"x":255,"y":420,"wires":[["8e2917e2.4c7568"]],"icon":"font-awesome/fa-expand"},{"id":"7c8df992.97a758","type":"link out","z":"4bebbdfa.41af64","name":"EVNTRIGGER00A","links":[],"x":790,"y":400,"wires":[],"l":true},{"id":"93689da9.046aa","type":"link out","z":"4bebbdfa.41af64","name":"EVNTRIGGER00B","links":[],"x":790,"y":440,"wires":[],"l":true},{"id":"dc658867.24d188","type":"comment","z":"4bebbdfa.41af64","name":"asynchronous event TRIGGER exit","info":"TRIGGER buid from tuyaTRIGGER flow and not by tuya-cloud.\n\nBased on local events and conditions, used as accelerators by some user flows.","x":820,"y":360,"wires":[]},{"id":"403e1d37.762004","type":"comment","z":"4bebbdfa.41af64","name":"TRIGGER examples and my MIRROR DEVICES (to be costomized)","info":"","x":310,"y":40,"wires":[]},{"id":"55cd4cfe.1c5ed4","type":"comment","z":"4bebbdfa.41af64","name":"event TRIGGERS  examples","info":"A node-red trigger (REDTRGXXXX) is used to fire _smarlife_ automations.\n\nconvention: reserved values for REDTRG: 2000-2999\n\nexamples: REDTRG2010,  REDTRG2020","x":220,"y":340,"wires":[]},{"id":"bb4ca213.f2782","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR devices: TUYA TRIGGERS examples","info":"","x":240,"y":520,"wires":[]},{"id":"b1371d44.97bf2","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1280,"wires":[["bbd1da58.dba9c8"]]},{"id":"23901296.83a0ae","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1280,"wires":[["b1371d44.97bf2"]]},{"id":"7b7f8ad.12fd374","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1140,"wires":[["7b505949.7ba1e8"]]},{"id":"99db9a3e.c2c4a8","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1140,"wires":[["7b7f8ad.12fd374"]]},{"id":"989058f8.a71f98","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":580,"wires":[["54d03d6e.945994"]]},{"id":"676a993c.b2a4a8","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":535,"y":580,"wires":[["989058f8.a71f98"]]},{"id":"24e2d22a.b7839e","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'Leak detector #3'","info":"mirror device 'door sensor' input messages\n\n","x":240,"y":1320,"wires":[]},{"id":"ae8e87ec.c69238","type":"switch","z":"4bebbdfa.41af64","name":"leak alarm","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1150","vt":"str"},{"t":"eq","v":"1160","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":410,"y":1380,"wires":[["6a31b3f.846784c"],["3768557a.d122ea"]],"info":"for my device\ndp = 102    // countdown"},{"id":"3768557a.d122ea","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1160: inject Leak alarm ON","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1150","type":"str"},{"name":"value","value":"true","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1400,"wires":[["bca73204.e6afc"]]},{"id":"6a31b3f.846784c","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1150: inject leak OFF","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1150","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":780,"y":1360,"wires":[["bca73204.e6afc"]]},{"id":"b855dd13.84c18","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1380,"wires":[["ae8e87ec.c69238"]]},{"id":"bca73204.e6afc","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1380,"wires":[]},{"id":"a5b2e785.7c0848","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1440,"wires":[["bca73204.e6afc"]]},{"id":"1b76f6cb.66b489","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1440,"wires":[["a5b2e785.7c0848"]]}]