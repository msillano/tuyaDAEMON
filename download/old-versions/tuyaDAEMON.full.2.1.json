[{"id":"173260fb.d021ff","type":"tab","label":"tuyaDAEMON.core","disabled":false,"info":"The **tuyaDAEMON CORE** handles all _tuya-nodered_ basic communications, giving you a (quasi) complete bidirectional integration with tuya cloud.\n\nsee: https://github.com/msillano/tuyaDAEMON/blob/main/tuyaDAEMON/README.md"},{"id":"89f87d49.41b81","type":"tab","label":"tuyaDAEMOM.system","disabled":false,"info":"From ver. 2.0 '_sistem' is implemented as a 'fake SW device.\n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/custom-device-_system"},{"id":"638c6657.ce65c8","type":"tab","label":"tuyaDAEMON.triggers","disabled":false,"info":"**addon for tuyaDAEMON flow**\n\nThis flow enables **tuyaDAEMON TRIGGERS** handling and extends tuyaDAEMON capabilities to get a very strict integration of tuya-cloud with node-red.\n\nsee: https://github.com/msillano/tuyaDAEMON/tree/main/tuyaTRIGGER"},{"id":"64074ca.02860b4","type":"tab","label":"extra.MQTT","disabled":false,"info":""},{"id":"4bebbdfa.41af64","type":"tab","label":"extra.mirror-devices","disabled":false,"info":"This flow contains \n\n - some TRIGGER examples\n - all mirror devices on the system"},{"id":"d02ad611.d94bc8","type":"tab","label":"extra.test","disabled":false,"info":"1) test for unknown encoded data.\n\n2) Collection of tests, to verify tuyaDEAMON integrity and to use as msg examples.\n\n"},{"id":"ee008879.f5adc8","type":"tab","label":"custom.PM detector","disabled":false,"info":"**custom device PM detector\n\nFlow to use a USB-serial PM detector with tuyaDAEMON. \n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/custom-device-'PM-detector':-case-study"},{"id":"66e0cde4.b696f4","type":"tab","label":"custom.watering_sys","disabled":false,"info":"This is a OO derived device to watering terraces.\nBase devices:\n- Smart_breaker (S3077)\n- Smart_switch01 (MOES QS-WIFI-S03)\n- Temperature_Humidity_Sensor (WSDCGQ11LM)\n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/derived-device-'watering_sys':-case-study"},{"id":"ee953c15.ada29","type":"subflow","name":"static retry","info":"Handles tuya device status changes.\r\n\r\nProcesses the status of a real device , if the connection status changes:\r\n   - Creates a log msg (deviceId, \"_connected\", true/false) for standard processing\r\n \r\nIMPORTANT: set the ** deviceID ** parameter with the correct ID value.","category":"","in":[{"x":80,"y":80,"wires":[{"id":"6160136.f5f99ec"}]}],"out":[{"x":440,"y":80,"wires":[{"id":"6160136.f5f99ec","port":0}]}],"env":[{"name":"deviceId","type":"str","value":""}],"color":"#DDAA99","inputLabels":["in staus"],"outputLabels":["to log"],"icon":"font-awesome/fa-rss-square"},{"id":"66ca1554.e4c85c","type":"subflow","name":"red trigger","info":"Build a REDTRG msg for tuya_bridge device.\n\nREDTRG values are in range 2000-3000 (convention)\n\nNote: it uses dp 102 (for  [Switch MS-104]). \nChange the code if your tuya-bridge device uses a different dp.","category":"","in":[{"x":60,"y":80,"wires":[{"id":"f0932848.b39158"}]}],"out":[{"x":360,"y":80,"wires":[{"id":"f0932848.b39158","port":0}]}],"env":[{"name":"TRGnumber","type":"str","value":"800"}],"color":"#A6BBCF","inputLabels":["any msg"],"outputLabels":["continue"],"icon":"font-awesome/fa-arrow-right"},{"id":"81d3b584.14c888","type":"subflow","name":"do logging","info":"This node simulate data received from a tuya device. I.e. the output must go to \"to logging\" input.\nUsed to build an update message for 'mirror' devices.\n\nUsed to process tuyaTRIGGERS.\n\n- `deviceID`: the 'mirror' device ID or CID\n- `fakeDP`: the data point id. Convention: user defined, equal to related tuyaTRIGGER, number (1000-2000). \n- `value`: the new value. If the value starts with '@', then it is eval()ued: exemple '@msg.payoad.set' => eval('msg.payoad.set'))\n\nnote: The 'mirror' device MUST exist in the `fake` branch of **alldevices**.\n\n","category":"","in":[{"x":120,"y":80,"wires":[{"id":"6d1b2b8f.c5e554"}]}],"out":[{"x":460,"y":80,"wires":[{"id":"6d1b2b8f.c5e554","port":0}]}],"env":[{"name":"deviceID","type":"str","value":""},{"name":"propertyDP","type":"str","value":""},{"name":"value","type":"str","value":""}],"color":"#87A980","icon":"node-red/debug.svg"},{"id":"f30e8140.1bed9","type":"subflow","name":"do command","info":"This node creates a command for a tuya device. I.e. the output must go to \"IN command\" or \"fast IN\" inputs.\n\nUsed to process tuyaTRIGGERS.\n\nParameters:\n- `device`: the target device\n- `property`: the data point name or id. \n- `value`: the new value.  If the value starts with '@',  it is eval()ued: exemple '@msg.payoad.set' => eval('msg.payoad.set').\n\n- The values `msg.payload.device`, `msg.payload.property` and `msg.payload.value` replaces the parameters.\n\n","category":"","in":[{"x":120,"y":60,"wires":[{"id":"cf230930.f37938"}]}],"out":[{"x":540,"y":60,"wires":[{"id":"cf230930.f37938","port":0}]}],"env":[{"name":"device","type":"str","value":""},{"name":"property","type":"str","value":""},{"name":"value","type":"str","value":""}],"color":"#DDAA99"},{"id":"15c9daba.b55285","type":"subflow","name":"dynamic retry","info":"## device connection dynamic retry\n\nDynamically optimize the timeout of Tuya connection attempts. For `smart-tuya-device-node` 4.0.2.\n\n- If the device is _connected_, the retry timeout is \"MinTimeout\".\n- if the device is _disconnected_, the retry timeout grows randomly to \"MaxTimeout\".\n\nUser parameters:\n- deviceId: Tuya ID of the device (same value as `smart-tuya-device-node`)\n- MinTimeout: the timeout of fast attempts, in sec.\n- MaxTimeout: the timeout of slow attempts, in sec.\n\n\n- Inputs: status msg from status-node \n\n- Output 1: `out msg`, for the  '_connected'  capability \n- Output 1: `to low_lev_msg`, to control the device.\n\nNotes:\n\nSet in `smart-tuya-device-node`:\n  - \"Interval to retry connection\" = 1000 (default, 1 sec).\n  - \"Connection search interval\" = any (not used).\n\nWith these default settings, the minimum retry interval is approximately 10 seconds (affected by many factors).\nIf the device is disconnected, the interval increases in random increments to approximately sec. 60 in 9/10 minutes. \n","category":"","in":[{"x":40,"y":40,"wires":[{"id":"a7c39c7.4e2dd6"}]}],"out":[{"x":500,"y":20,"wires":[{"id":"a7c39c7.4e2dd6","port":0}]},{"x":500,"y":80,"wires":[{"id":"a7c39c7.4e2dd6","port":1}]}],"env":[{"name":"deviceId","type":"str","value":"here tuya id"},{"name":"MinTimeout","type":"num","value":"1"},{"name":"MaxTimeout","type":"str","value":"60"}],"color":"#DDAA99","inputLabels":["from status"],"outputLabels":["out msg","to low_lev_msg"],"icon":"font-awesome/fa-rss-square"},{"id":"e1c6cc8a.2f92a","type":"subflow","name":"REFRESH","info":"","category":"","in":[{"x":160,"y":120,"wires":[{"id":"c306cbee.682538"}]}],"out":[{"x":740,"y":120,"wires":[{"id":"c306cbee.682538","port":1},{"id":"9eb78521.a29748","port":0}]},{"x":600,"y":160,"wires":[{"id":"c306cbee.682538","port":2}]}],"env":[{"name":"deviceID","type":"str","value":""},{"name":"Max time","type":"num","value":"60"}],"color":"#DDAA99","inputLabels":["msg"],"outputLabels":["loop","device "],"icon":"node-red/swap.svg"},{"id":"3332031a.de38fc","type":"subflow","name":"MQTT/ozone/1","info":"","category":"","in":[{"x":120,"y":120,"wires":[{"id":"9ae04f2.4bac6b"},{"id":"c8e74e64.7eafe"}]}],"out":[{"x":1020,"y":120,"wires":[{"id":"80d3499e.df2d58","port":0},{"id":"7a13d179.a10ed","port":0},{"id":"938228d2.f21868","port":0},{"id":"9ae04f2.4bac6b","port":0}]},{"x":1020,"y":340,"wires":[{"id":"8329893d.2679a8","port":0}]}],"env":[{"name":"deviceID","type":"str","value":"sonoff001"}],"color":"#DDAA99","status":{"x":1020,"y":400,"wires":[{"id":"8329893d.2679a8","port":1}]}},{"id":"7e3077c8.ff8e88","type":"MySQLdatabase","name":"PC server","host":"localhost","port":"3306","db":"tuyathome","tz":"","charset":"UTF8"},{"id":"45a4b402.6f7e4c","type":"serial-port","serialport":"COM19","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","waitfor":"{","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"}","bin":"false","out":"char","addchar":"\\n","responsetimeout":"10000"},{"id":"4f653c47.2c3564","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#2a8e93","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#2a8e93","edited":true},"page-titlebar-backgroundColor":{"value":"#2a8e93","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#41c2c9","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#2a8e93","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"58c9bd26.dba2c4","type":"ui_tab","name":"Watering","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"8a16e2fd.a07e2","type":"ui_group","name":"Time 1","tab":"58c9bd26.dba2c4","order":3,"disp":true,"width":"3","collapse":true},{"id":"e04eed03.d3291","type":"ui_group","name":"Time 2","tab":"58c9bd26.dba2c4","order":4,"disp":true,"width":"3","collapse":true},{"id":"31f79248.17674e","type":"ui_group","name":"Time 3","tab":"58c9bd26.dba2c4","order":5,"disp":true,"width":"3","collapse":true},{"id":"2e287b5a.1b1814","type":"ui_group","name":"Immediate control","tab":"58c9bd26.dba2c4","order":1,"disp":true,"width":"9","collapse":true},{"id":"194a6329.0b062d","type":"ui_group","name":"week program","tab":"58c9bd26.dba2c4","order":2,"disp":true,"width":"9","collapse":true},{"id":"93f8bfd.d0c854","type":"MySQLdatabase","d":true,"name":"ANDROID","host":"192.168.1.19","port":"3306","db":"tuyathome","tz":"","charset":"UTF8"},{"id":"2e55898d.e8af66","type":"mqtt-broker","name":"PDM Ozone timer#1","broker":"192.168.1.18","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"337e95bb.d94d9a","type":"mqtt-broker","name":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"6160136.f5f99ec","type":"function","z":"ee953c15.ada29","name":"connected message - static","func":"// to set global.tuyasyatus.xxxx._connected \n// creates a response for the dp \"_connected\"\n// store value and filter events\n\nvar CONN = \"_connected\";  //  tuyadaemon internal define\n// see also tuyaDAEMON.\"connection check\" function\n// local function\nfunction _sendReal(idevice,  value){\n// builds a fake OUT message \nvar newMsg = { \"payload\":{\n      \"deviceId\": idevice,\n      \"data\": {\n          \"dps\":{\n            [CONN]:value\n          }}}};\nreturn newMsg;  \n}\n\n// user set parameter device id\nvar deviceId = env.get(\"deviceId\");\n\nvar nowconnected;\nif((msg.payload !== undefined)&&(msg.payload.state !== undefined)){\n   nowconnected =  (msg.payload.state == \"CONNECTED\" || msg.payload.state == \"node-red:common.status.connected\" );        // can change\n}\nif((msg.status !== undefined)&&(msg.status.text !== undefined)){\n   nowconnected =  (msg.status.text == \"CONNECTED\" || msg.status.text == \"node-red:common.status.connected\" );        // can change\n}\nif (nowconnected == undefined) return null;\n// filering \nlet old = flow.get(deviceId+\"_con\");\n// node.warn([\"STATUS \",msg, nowconnected, old]);\n\nif (old === nowconnected) return null;\nflow.set(deviceId+\"_con\", nowconnected);\n\nreturn(_sendReal(deviceId, nowconnected));\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// set the default status _connected to null in tuyastatus\n// creates tuyastatus entry to null.\nvar alldevices = global.get(\"alldevices\");\nif (alldevices === undefined) return null;\nvar deviceId = env.get(\"deviceId\");\n// only for REAL devices\nvar d = alldevices.real.find(device => device.id === deviceId);\nif (d === undefined) return null;\n//\nvar tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus === undefined)\n        tuyastatus = {};\n    var dev = (d.name?d.name:d.id);\n    if (tuyastatus[dev] === undefined) {\n        tuyastatus[dev] = {_connected:null};\n        global.set(\"tuyastatus\", tuyastatus);\n    }\n    ","finalize":"","x":260,"y":80,"wires":[[]]},{"id":"f0932848.b39158","type":"function","z":"66ca1554.e4c85c","name":"send  X TRIGGER","func":"const triggerDP = 7;  // tuya-bridge countdown\n// normal use: no msg.payload.data.dps[triggerDP]\n// ack use:   msg.payload.data.dps[triggerDP] > 800\n if ((msg.payload.data != undefined) && (msg.payload.data.dps != undefined) && (msg.payload.data.dps[triggerDP] < 800))\n    return null;\nvar n = env.get(\"TRGnumber\");\nvar trig = {\n       \"payload\": {\n          \"dps\":triggerDP, \n          \"set\": parseInt(n)       \n          }\n}\n\nreturn trig ;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"tsstart\", null);\nflow.set(\"pingstat\",{\n      total:1,\n      test: 0,\n      sum:0,\n      min: 100000000000,\n      max:0\n});\n","finalize":"","x":210,"y":80,"wires":[[]]},{"id":"6d1b2b8f.c5e554","type":"function","z":"81d3b584.14c888","name":"do mirror msg","func":"// local function\n// note: the value param can also be a @variable:\n//e.g. \"@msg.payload.set\" => eval(msg.payload.set) \n\n    // builds a fake OUT message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": env.get(\"deviceID\"),\n            \"data\": {\n                \"dps\": {}\n                //          \"dps\":[dpname = value]\n            }\n        }\n    };\n    \n    var xvalue = env.get(\"value\").toString().trim();\n    if (xvalue.startsWith('@')){\n        xvalue = eval(xvalue.substring(1));\n    }\n    var dpname = env.get(\"propertyDP\").toString().trim();\n    if (dpname.startsWith('@')){\n        dpname = eval(dpname.substring(1));\n    }\n  \n    newMsg.payload.data.dps[dpname.toString()] = xvalue;\n    return newMsg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":300,"y":80,"wires":[[]]},{"id":"a878b58e.e4ea08","type":"function","z":"173260fb.d021ff","name":"*OUT data process","func":"// sends any message to DB (sql in msg.topic), updates tuyastatus\n// version 1.1 (use of _callJSONMethod)\n//-------------------------------------------\n// Data codification is function of the device and dps.\n\nvar datadecode = {\n    // to format values from device messages to standard form\n    // add new functions to array as required\n    BYTESMALLFLOAT: function (value) {\n        // exanple: C3H = 195 => 19.5  (°C: units as from device setup)\n        // required by thermostat, meter\n        return (Number(value) / 10.0);\n    },\n    INTE2FLOAT: function (value) {\n        // for now, only DECODE\n        // required by  meter\n        return (Number(value) / 100.0);\n    },\n\n\n    BOOLEANONOFF: function (value) {\n        // transform (false, 0, \"\")/true, to 'OFF'/'ON'\n        // en: can be localized for internationalization\n        return (!value ? \"OFF\" : (value == 1 ? \"ON\" : value));\n    },\n    BOOLEANOPENCLOSE: function (value) {\n        // transform (false, 0, \"\")/true, to 'OPEN'/'CLOSE'\n        // en: can be localized for internationalization\n        return (!value ? \"CLOSE\" : (value == 1 ? \"OPEN\" : value));\n    },\n\n    ENUMONOFFHOLD: function (value) {\n        // transform 0/1/2 to OFF/ON/HOLD\n        // changed to use same strings as many switches\n        // en: can be localized for internationalization off|on|memory\n        return (value == 0 ? \"off\" : (value == 1 ? \"on\" : (value == 2 ? \"memory\" : value)));\n    },\n\n    STRUCTARGETTEMP: function (value) {\n        // transform from base64(Uint8Array[17]) to object:\n        //   {\"count\":4,\n        //    \"changes\":[{\"time\":\"00:00\",\"temp\":15.5},\n        //              {\"time\":\"07:00\",\"temp\":20},\n        //              {\"time\":\"16:30\",\"temp\":21},\n        //              {\"time\":\"21:00\",\"temp\":16.5}]}\n        // required by thermostat\n        function minTohm(min) { // local function\n            h = (~~(min / 60));\n            m = min % 60;\n            return (h > 9 ? h : '0' + h) + \":\" + (m > 9 ? m : '0' + m);\n        }\n\n        b = Buffer.from(value, \"base64\");\n        var n = b.readUInt8(0);\n        var result = {\n            count: n,\n            changes: []\n        };\n        for (var i = 0; i < n; i++) {\n            result.changes[i] = {\n                time: minTohm(b.readUInt16BE(i * 4 + 1)),\n                temp: b.readUInt16BE(i * 4 + 3) / 10\n            };\n        }\n        //     return (JSON.stringify(result));\n        return (result);\n    }, // ends function\n\n    ARRAY8INT: function (value) {\n        // transform  base64(Uint8Array[X]) to UInt8[]\n        // X=24 =>  [16,16,15,15,14,14,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\"\n        // required by thermostat\n        b = Buffer.from(value, \"base64\");\n        return (\"[\" + new Uint8Array(b).toString() + \"]\");\n    },\n\n    STRUCTTIMEHMS: function (value) {\n        // tentative, on work\n        // transform  base64(Uint16Array[3]) to \"HH:MM:SS\" ??\n        // required by thermostat ??\n        b = Buffer.from(value, \"base64\");\n        const uint16arr = new Uint16Array(\n                b.buffer,\n                b.byteOffset,\n                b.length / Uint16Array.BYTES_PER_ELEMENT);\n        return ((Uint16Array[0] > 9 ? Uint16Array[0] : \"0\" + Uint16Array[0]) + \":\" +\n            (Uint16Array[1] > 9 ? Uint16Array[1] : \"0\" + Uint16Array[1]) + \":\" +\n            (Uint16Array[2] > 9 ? Uint16Array[2] : \"0\" + Uint16Array[2]));\n    },\n\n    STRUCTCOLOUR: function (value) {\n        //  Transforms  RRGGBB0000FFFF to objec\n        //      {   \"hex\":\"RRGGBBHHHHSSVV\" }\n        //  or: {   \"r\": RR,\n        //          \"g\": GG,\n        //          \"b\": BB\n        //          \"h\":HHHH,\n        //          \"s\": SS,\n        //          \"v\": VV  }\n        // 100% = 0x64\n        // required by humidifier led\n        b = Buffer.from(value, 'hex');\n        var result = {\n            hex: value,\n        };\n        result[\"r\"] = b.readUInt8(0);\n        result[\"g\"] = b.readUInt8(1);\n        result[\"b\"] = b.readUInt8(2);\n        result[\"h\"] = b.readUInt16BE(3)\n            result[\"s\"] = b.readUInt8(5);\n        result[\"v\"] = b.readUInt8(6);\n        return (result);\n    },\n    ENUMHIGHGOODLOW: function (value) {\n        // transform 0/1/2 to LOW/GOOD/HIGH\n        // en: can be localized for internationalization\n        return (value == 0 ? \"LOW\" : (value == 1 ? \"GOOD\" : (value == 2 ? \"HIGH\" : value)));\n    },\n    RECMODE: function (value) {\n        // transforms string '1'/'2' to  'continuous'/'events'\n        // it|en: can be localized for internationalization\n        return (value == 2 ? \"continuous\" : (value == 1 ? \"events\" : value));\n    },\n    STRUCTINCH: function (value) {\n        b = Buffer.from(value, \"base64\");\n        var result = {\n            inching: (b.readUInt8(0) !== 0),\n            delay: b.readUInt16BE(1)\n        };\n        return (result);\n    },\n    STRUCTRAND: function (value) {\n        function minTohm(min) { // local function\n            h = (~~(min / 60));\n            m = min % 60;\n            return (h > 9 ? h : '0' + h) + \":\" + (m > 9 ? m : '0' + m);\n        }\n        function daystring(val) {\n            var res = \"\";\n            week = \"DLMMGVS\"; // en: SMTWTFS\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                res += (val & mask) ? week.charAt(i) : '-';\n                mask = mask << 1;\n            }\n            return (res);\n        }\n        if (value.length < 5)\n            return (value);\n        b = Buffer.from(value, \"base64\");\n        var randdef = [];\n        for (var i = 0; i < b.length / 6; i++) {\n            var o = {\n                active: (b.readUInt8(i * 6 + 0) !== 0),\n                days: daystring(b.readUInt8(i * 6 + 1)),\n                start: minTohm(b.readUInt16BE(i * 6 + 2)),\n                end: minTohm(b.readUInt16BE(i * 6 + 4))\n            };\n            randdef[randdef.length] = o;\n        }\n        return randdef;\n    },\n    STRUCTREPEAT: function (value) {\n        function minTohm(min) { // local function\n            h = (~~(min / 60));\n            m = min % 60;\n            return (h > 9 ? h : '0' + h) + \":\" + (m > 9 ? m : '0' + m);\n        }\n        function daystring(val) {\n            days = \"\";\n            week = \"DLMMGVS\"; // en: SMTWTFS\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                days += (val & mask) ? week.charAt(i) : '-';\n                mask = mask << 1;\n            }\n            return (days);\n        }\n        if (value.length < 5)\n            return (value);\n        b = Buffer.from(value, \"base64\");\n        var result = [];\n        for (var i = 0; i < b.length / 10; i++) {\n            var o = {\n                active: (b.readUInt8(i * 10 + 0) !==  0),\n                days: daystring(b.readUInt8(i * 10 + 1)),\n                start: minTohm(b.readUInt16BE(i * 10 + 2)),\n                end: minTohm(b.readUInt16BE(i * 10 + 4)),\n                on: minTohm(b.readUInt16BE(i * 10 + 6)),\n                off: minTohm(b.readUInt16BE(i * 10 + 8))\n            };\n            result[result.length] = o;\n        }\n        return (result);\n    },\n\n    SDSPACES: function (value) {\n        // transform <total>|<used>|<free> to object.\n        // en: can be localized for internationalization\n        var sizes = value.split(\"|\");\n        var result = {\n            total: new Intl.NumberFormat().format(Number(sizes[0])),\n            used: new Intl.NumberFormat().format(Number(sizes[1])),\n            free: new Intl.NumberFormat().format(Number(sizes[2])),\n        }\n        return (result);\n    }\n};\n// ----------------------------------------------------\n//input: device OUT msg (real)\n//  _msgid: \"1234f3fd.8477fc\"\n//  _event: \"node:1233963.a7d146\"\n//  payload: object\n//     remote_from: <name>   // optional from remote\n//     deviceId: \"123455aa196ae5******\"\n//     deviceName: \"*tuya_bridge\" (tuya name optional, not used)\n//     data: object\n//        t: 1609234903\n//        dps: object\n//           102: 1020\n//\n//input: device OUT msg (virtual)\n//   _msgid: \"d0b26a44.e81738\"\n//   payload: object\n//      remote_from: <name>   // optional from remote\n//      deviceId: \"123473b1b786b59*******\"\n//      deviceName: \"Zigbee Gateway\"\n//      data: object\n//        cid: \"12358d00086a1c45\"\n//        t: 1609235292\n//        dps: object\n//           103: 19\n//\n// output0: info message:\n//            warmsg.payload: [<remote-name>\": RX: '\" + <device-name> + \"'/'\" + <property-name> + \"' \", <data-expandible>] // for debug pad\n//            warmsg.info={                                 // for internal use, REST, etc.\n//                         device: <device-name>,\n//                         property: <property-name>,\n//                         value: <processed-data>,\n//                         };\n//            remote_from: <name>   // optional from remote\n//            infodp : <dp>\n//            from: <deviceID>\n// output1: msg, input message + msg.topic: the sql for DB\n//\n// -------------------------------------------------- do not change\n\n\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // to use the stored JSON method library in global alldevices\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore the ⚠ node-red warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// -------------------------------------------- private functions\nvar alld = global.get(\"alldevices\");\nconst PSEUDODP = alld.__pseudodp;\nvar oDev = null;\nvar _dataname = \"\";\n\n// updates the global \"tuyastatus\" and warmsg\nfunction _addToStatus(remote, dnx, _datanx, dx, tx) {\n    var tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus === undefined)\n        tuyastatus = {};\n    if (tuyastatus[dnx] === undefined)\n        tuyastatus[dnx] = {};\n    tuyastatus[dnx][_datanx] = dx;\n    tuyastatus[dnx]._t = tx;\n    global.set(\"tuyastatus\", tuyastatus);\n    // info message\n    let sstr = \"RX: '\";\n    if (typeof(remote) === \"string\")\n        sstr = remote+\": RX: '\";\n    warmsg = {\n        payload: [sstr + dnx + \"'/'\" + _datanx + \"' \", dx]\n    };\n}\n\n// clean data (object, array) using JSON.stringify, to get a string for DB\nfunction formatData(data) {\n    var clean = JSON.stringify(data);\n    if (clean[0] === '\"')\n        clean = clean.substring(1).slice(0, -1);\n    //    return clean.replace(/'/g, '&#39;');  // sigle quotes are dangerous in sql\n    //    return clean.replace(/'/g, '\\\\x27');\n    return clean.replace(/'/g, \"\\\\'\");\n}\n\n// For DB output, string\nfunction formatName(data) {\n    if (data == null)\n        return 'NULL';\n    //    return data.replace(/'/g, '&#39;');  // sigle quotes are dangerous in sql\n    //    return data.replace(/'/g, '\\\\x27');\n    return data.replace(/'/g, \"\\\\'\");\n}\n\n// true if device is a real device (virtual := cid exists)\nfunction _isreal(mx) {\n    return (mx.payload.data.cid === undefined);\n}\n\n// returns deviceId (real) or cid (virtual), never fails\nfunction _getID(mx) {\n    return ( mx.payload.data.cid || mx.payload.deviceId);\n}\n\n// returns data.t or now(), formatted for mySQL, never fails\nfunction _mySQLdatetime(mx) {\n    //datetime format for mySQL: '2020-12-18 20:45:02'\n    // using 'sv' for date format and local timezone\n    if (mx.payload.data.t === undefined)\n        return (new Date().toLocaleString('sv'));\n    return (new Date(Number(mx.payload.data.t) * 1000).toLocaleString('sv'));\n}\n\n// returns val, processed by correct dpprocess[] function, if required, and sets  _dataname\nfunction _processData(odev, oPx, mx, adpn, val) {\n    _dataname = \"\";\n\n    if (oPx === undefined) {\n        // tuyadaeamon internal defined fields for all real devices - standard process optional, no warning\n        if ( ! PSEUDODP.includes(adpn.toUpperCase())) // extra pseudo-DPs\n            node.warn(\"WARNING [OUT data]: In alldevices missed the '\" + oDev.name + \"':dps[\" + adpn + \"] definition.\");\n        _dataname = adpn;\n        return (val);\n    }\n    _dataname = (oPx.name === undefined) ? adpn : oPx.name;\n\n    if ((oPx.typefield === undefined) || (oPx.typefield === 'NONE'))\n        return (val); // no process\n    if (datadecode[oPx.typefield] === undefined) {\n        node.warn(\"ERROR [OUT data]:Not found \" + oPx.typefield + \" encode function() for '\" + _dataname + \"': data unchanged.\");\n        return (val);\n    }\n    try {\n        return datadecode[oPx.typefield](val);\n    } catch (error) {\n        node.warn([\"ERROR [OUT data]:in \" + oPx.typefield + \" decode function on value (\" + (typeof(val) === \"string\")?val:JSON.stringify(val) + \"): \" + error,oPx]);\n        return (val);\n    }\n\n}\n\n// get the device object from alldevices, if it don't exist return undefined + warn\nfunction _getODevice(all, mx) {\n    var o;\n    if (_isreal(mx)) {\n        o = _callJSONMethod(all, \"__getODev\", msg.payload.deviceId, \"real\");\n        if (o === undefined) {\n            o = _callJSONMethod(all, \"__getODev\", msg.payload.deviceId, \"fake\");\n        }\n        if (o === undefined) {\n            node.warn(\"ERROR [OUT data]: ADD to alldevices the real/fake deviceId: \" + mx.payload.deviceId + \" (\" + mx.payload.deviceName + \")\");\n        }\n    } else {\n        o = _callJSONMethod(all, \"__getODev\", mx.payload.data.cid, \"virtual\");\n        if (o === undefined) {\n            node.warn(\"ERROR [OUT data]: ADD to alldevices the virtual cid: \" + mx.payload.data.cid + \" [gateway: \" + mx.payload.deviceId + \"]\");\n        }\n    }\n    return (o);\n}\n\n\n// ---------------------  main\n// sends any message to DB (in msg.topic), updates tuyastatus\nvar warmsg = null; // info debug (1)\nmsg.topic = \"\"; // sql query (2)\n\nvar myId = \"unique\";\nvar map = global.get(\"remotemap\");\nif ((map !== undefined) &&  (map.itself !== undefined))  myId = map.itself;\nif (msg.payload.remote !== undefined) myId = msg.payload.remote;\n\noDev = _getODevice(alld, msg);\nif (oDev === undefined)\n    return ([null]);    //error sended,  abort\nvar dname = _callJSONMethod(alld, \"__getDevName\", oDev);\nmsg[\"from\"] =  _getID(msg);\n\n// now processes dp=value couples\nif (msg.payload.data.dps !== undefined) {\n    try {\n//          node.warn([\"in outproc \", msg]);\n       \n    Object.entries(msg.payload.data.dps).forEach(([key, value]) => {\n        warmsg = null;\n        if ((value !== undefined) && (value !== null)) {\n            var oPthis = _callJSONMethod(alld, \"__getODps\", oDev, key);\n            var pdata = _processData(oDev, oPthis, msg, key, value);\n            msg[\"infodp\"] =  key.toString();\n            msg.topic += \" INSERT INTO `messages` (`timestamp`, `daemon`, `action`, `device-id`, `device-name`, `dps`, `dp-name`, `data`, `value`)\\n\";\n            msg.topic += \" VALUES ('\" + _mySQLdatetime(msg) + \"', '\" + myId + \"' , 'RX', '\" + _getID(msg) + \"', '\" + formatName(dname) +\n            \"','\" + key + \"', '\" + formatName(_dataname) + \"', '\" + formatData(value) + \"', '\" + formatData(pdata) + \"') ;\\n\";\n            if (_dataname !== undefined) {\n                // timestamp as seconds\n                var tx = msg.payload.data.dps.t;\n                if (tx === undefined)\n                    tx = Math.floor(Date.now() / 1000);\n                _addToStatus(msg.payload.remote_from, dname, _dataname, pdata, tx);\n                //more data for fast post processing\n                if(msg.payload.remote_from !== undefined)\n                   warmsg['remote_from'] = msg.payload.remote_from;\n                warmsg['from'] = oDev.cid || oDev.id;\n                warmsg['infodp'] = key.toString();         // extra  for filter...\n                warmsg['info'] = {};            //  required by REST check and by share\n                warmsg['info']['device'] = dname;\n                warmsg['info']['property'] = _dataname;\n                warmsg['info']['value'] = pdata;           // decoded\n                let thishare =  (oPthis === undefined? undefined: oPthis.share ); // auto actions\n                // share only local\n                if ((thishare !== undefined) && (msg.payload.remote_from === undefined))\n                     warmsg['share'] = thishare;\n//             node.warn([\"out outproc \", warmsg,  msg]);\n              node.send([warmsg, null]); // SQL are appended\n            }\n        }\n    });\n    } catch (error){\n         node.warn([\"Error in \" + dname + \" device message: \" + error, msg]);\n        return ([null]);\n       \n    }\n    \n} else {\n    if (typeof(msg.payload.data) === \"string\" ){\n        if (msg.payload.data == \"json obj data unvalid\") {\n            node.warn([\"ERROR [OUT data]: from device '\" + dname + \"': not JSON data but 'json obj data unvalid': operation not allowed?.\", msg]);\n        } else {\n            // maybe here it is possible to deduce the value send: see\n            var buff = Buffer.from(msg.payload.data);\n            node.warn([\"ERROR [OUT data]: from device '\" + dname + \"': not JSON data but HEX:\" + buff.toString('hex') + \"  ('\" + msg.payload.data + \"')\", msg]);\n        } }\n    else {\n       node.warn([\"ERROR [OUT data]: from device '\" + dname + \"', maybe bad format ? \", msg]);\n    }\n}\n\nif (msg.topic !== \"\") // some processed, SQL exists\n    return ([null, msg]);\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":750,"y":1240,"wires":[["2e4937fc.2ef1f8","e6b9ecd2.653e4","2caa595d.2a0106"],["70d88fb4.7fcc2"]],"info":"CUSTOMIZATION:\n\nEdit the code to add a custom decode function.\n\nmore: \n1. add the dual custom encode function to the 'format command' node\n2. add the dual custom encode function to the 'fastFormat' node\n3. add the CODENAME in the `tuyahome.lookupdecode` table."},{"id":"9fe80f7e.f3f7e","type":"link in","z":"173260fb.d021ff","name":"logging","links":["11023367.4cf45d","1547be76.90a842","2ec83963.a7d146","44351050.b577b","44804bb7.72ee84","54d03d6e.945994","5a8e972b.19e048","678390f9.125df","6f287998.d91408","798c4138.06176","7b505949.7ba1e8","83ac5d1.6b830a","9a343958.4999a8","aa6116ba.7b69c8","bbd1da58.dba9c8","bca73204.e6afc","be8e7d4f.d6577","c72cf7d0.7ff3c8","cd81b742.e8a268","e32fa2db.d0b7c","e914f703.e257b8","edf84736.d76338"],"x":190,"y":1180,"wires":[["fe1a20ab.104ce"]],"icon":"node-red/arrow-in.svg","l":true,"info":"entry point for messages from all devices (real, virtual, fake), format like this:\n````\nfunction _sendOUT(deviceid, dp,value){\n// builds a fake OUT message \nvar newMsg = { \n    \"payload\":{\n        \"remote_from\": name     // optional, if from remote\n        \"deviceId\": deviceid,  // for virtual devices => \"deviceId\": gatewayId;\n *      \"deviceName\": name     // from tuya-smart.device node, not used, optional\n        \"data\": {\n *          \"t\": Math.floor( Date.now() / 1000 );    // timestamp (sec), optional, \n *          \"cid\": deviceid;   // only for virtual devices, mandatory\n            \"dps\":{\n                [dp]: value    // encoded, more than one dp in some cases\n            }}}};\nreturn newMsg;  \n}\n````\nOutput:\n - updates the|many `global.tuyastatus[dev-name][dp-name] = value-decoded`\n - adds a|many record(s) to 'messages' DB table \n - fires 'share' if defined in core.global.alldevices\n - fire actions (see mirror.devices flow)"},{"id":"c991322e.a484e","type":"function","z":"173260fb.d021ff","name":"*format  command","func":"\n// Data codification is function of the device and dps: \n// here you can add new encode functions().\n\n// version 1.1 (use of _callJSONMethod)\nvar dataencode = {\n\n    BYTESMALLFLOAT: function (value) {\n        // transforms temperature to byte: 19.5° => 195 => C3H\n        // required by thermostat\n        var x = value;\n        if (typeof value === 'string')\n            x = Number.parseFloat(value);\n        if (Number.isNaN(x)) {\n            throw \"'value' is not a number!\";\n        }\n        return ~~(x * 10.0);\n    },\n\n    BOOLEANONOFF: function (value) {\n        // transforms 'ON'/'OFF' to boolean  true/false (very tolerant :  see https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons)\n        // it|en: can be localized for internationalization\n        if (typeof value == \"string\") \n            if ((value.toUpperCase() === \"OFF\") || (value.toUpperCase() === \"FALSE\") || (value.toUpperCase() === \"NO\"))\n               return false;\n            else\n               return true;\n        if (value == false)\n               return false;\n            else\n                return true;\n },\n\n    BOOLEANOPENCLOSE: function (value) {\n        // transforms 'OPEN'/'CLOSE' to boolean  true/false\n        // it|en: can be localized for internationalization\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"CLOSE\") || (value.toUpperCase() === \"CHIUSA\"))\n            return false;\n        return true;\n    },\n\n    ENUMONOFFHOLD: function (value) {\n        // transforms 'OFF'/'ON'/'HOLD' to string '0'/'1'/'2'\n        // it|en: can be localized for internationalization\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"OFF\") || (value.toUpperCase() === \"SPENTO\") || (value.toUpperCase() === \"NO\"))\n            return \"0\";\n        if ((value == 1) || (value.toUpperCase() === \"ON\") || (value.toUpperCase() === \"ACCESO\") || (value.toUpperCase() === \"YES\"))\n            return \"1\";\n        return \"2\";\n    },\n\n    STRUCTARGETTEMP: function (value) {\n        // transform the JSON structure:\n        //   {\"count\":4,\n        //    \"changes\":[{\"time\":\"00:00\",\"temp\":15.5},\n        //              {\"time\":\"07:00\",\"temp\":20},\n        //              {\"time\":\"16:30\",\"temp\":21},\n        //              {\"time\":\"21:00\",\"temp\":16.5}]}\n        // to  base64(Uint8Array[17])\n        // required by thermostat\n\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function mult10(value) {\n            return ~~(Number.parseFloat(value) * 10.0)\n        }\n\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        node.warn(\"in code \" + value);\n        if (o.count !== undefined) {\n            var buf = Buffer.alloc(o.count * 4 + 1);\n\n            buf.writeInt8(o.count, 0);\n            for (var i = 0; i < o.count; i++) {\n                buf.writeInt16BE(hmTomin(o.changes[i].time), i * 4 + 1);\n                buf.writeInt16BE(mult10(o.changes[i].temp), i * 4 + 3);\n            }\n            return buf.toString('base64');\n        } else {\n            throw \"'value' is not a {time,T}[4] struct\";\n        }\n    },\n\n    ARRAY8INT: function (value) {\n        // Transforms a UInt8Array, e.g.[17,16,16,16,15,15,17,18,19,19,18,18,18,18,17,16,17,18,18,0,0,0,0,0]\n        // as object or JSON string\n        // to  coded64 data => ERAQEA8PERITExISEhIREBESEgAAAAAA\n        // required by thermostat\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        if (Array.isArray(o)) {\n            b = Buffer.from(o);\n            return b.toString('base64');\n        } else {\n            throw \"'value' is not a (json) array !\";\n        }\n    },\n\n    STRUCTTIMEHMS: function (value) {\n        //  Transforms a time \"HH:MM:SS\"\n        //  in coded data base64(Uint16Array[3])\n        //  tentative, on work\n        pieces = value.split(':');\n        var buf = Buffer.alloc(6);\n        buf.writeInt16LE(parseInt(pieces[0]), 0);\n        buf.writeInt16LE(parseInt(pieces[2]), 2);\n        buf.writeInt16LE(parseInt(pieces[4]), 4);\n        return buf.toString('base64');\n    },\n\n    STRUCTCOLOUR: function (value) {\n        // accepts: JSON or object\n        // encode:\n        //      {   \"hex\":\"RRGGBBHHHHSSVV\" }\n        //  or: {   \"r\": RR,\n        //          \"g\": GG,\n        //          \"b\": BB\n        //        ( \"h\":HHHH,\n        //          \"s\": SS,\n        //          \"v\": VV )  }\n        // 100% = 0x64\n        //  required by humidifier led\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        if ((o.hex !== undefined) && (typeof o.hex === 'string') && (o.hex.length == 14))\n            return (o.hex);\n        if ((o.r === undefined) || (o.g === undefined) || (o.b === undefined)) {\n            throw \"'value' is not valid hex|rgb object!\";\n        }\n        var buf = Buffer.alloc(7);\n        buf.writeUInt8(o.r, 0);\n        buf.writeUInt8(o.g, 1);\n        buf.writeUInt8(o.b, 2);\n        if (o.h !== undefined) {\n            buf.writeUInt16BE(o.h, 3);\n            buf.writeUInt8(o.s, 5);\n            buf.writeUInt8(o.v, 6);\n        } else {\n            buf.writeUInt16BE(0, 3);\n            buf.writeUInt8(255, 5); //fixed ?\n            buf.writeUInt8(255, 6); //fixed ?\n        }\n        return buf.toString('hex');\n    },\n    ENUMHIGHGOODLOW: function (value) {\n        // transforms 'LOW'/'GOOD'/'HIGH' to string '0'/'1'/'2'\n        // it|en: can be localized for internationalization\n        // required by switch\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"LOW\") || (value.toUpperCase() === \"BASSA\"))\n            return \"0\";\n        if ((value.toUpperCase() === \"HIGH\") || (value == 2) || (value.toUpperCase() === \"ALTA\"))\n            return \"2\";\n        return \"1\";\n    },\n    RECMODE: function (value) {\n        // transforms 'continuous'/'events' to string '1'/'2'\n        // it|en: can be localized for internationalization\n        // required by switch\n        if ((value == 1) || (value.toUpperCase() === \"EVENTS\") || (value.toUpperCase() === \"EVENTI\"))\n            return \"1\";\n        return \"2\";\n    },\n    STRUCTINCH: function (value) {\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(3);\n        buf.writeUInt8((o.inching) ? 1 : 0, 0);\n        buf.writeUInt16BE(o.delay, 1);\n        return buf.toString('base64');\n    },\n\n    STRUCTRAND: function (value) {\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function dayscode(val) {\n            result = 0;\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                result |= (val.charAt(i) == '-') ? 0 : mask;\n                mask = mask << 1;\n            }\n            return (result);\n        }\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(6 * o.length);\n        for (let i = 0; i < o.length; i++) {\n            buf.writeUInt8((o[i].active) ? 1 : 0, i * 6 + 0);\n            buf.writeUInt8(dayscode(o[i].days), i * 6 + 1);\n            buf.writeUInt16BE(hmTomin(o[i].start), i * 6 + 2);\n            buf.writeUInt16BE(hmTomin(o[i].end), i * 6 + 4);\n        }\n        return buf.toString('base64');\n    },\n\n    STRUCTREPEAT: function (value) {\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function dayscode(val) {\n            result = 0;\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                result |= (val.charAt(i) == '-') ? 0 : mask;\n                mask = mask << 1;\n            }\n            return (result);\n        }\n\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(10 * o.length);\n        for (let i = 0; i < o.length; i++) {\n            buf.writeUInt8((o[i].active) ? 1 : 0, i * 10 + 0);\n            buf.writeUInt8(dayscode(o[i].days), i * 10 + 1);\n            buf.writeUInt16BE(hmTomin(o[i].start), i * 10 + 2);\n            buf.writeUInt16BE(hmTomin(o[i].end), i * 10 + 4);\n            buf.writeUInt16BE(hmTomin(o[i].on), i * 10 + 6);\n            buf.writeUInt16BE(hmTomin(o[i].off), i * 10 + 8);\n        }\n        return buf.toString('base64');\n    },\n\n    SDSPACES: function (value) {\n        node.warn(\"ERROR: SDSPACES only decode()\")\n        return (value);\n    }\n\n};\n// -------------------------------------------------- do not change\n\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// true if device is a real device (virtual == cid exists)\nfunction _isreal(odev) {\n    return (odev.cid === undefined);\n}\n\n// returns deviceId (real) or cid (virtual), never fails\nfunction _getID(odev) {\n    return (odev.cid === undefined ? odev.id : odev.cid);\n}\n\n// true if is a GET command  (GET == msg.payload.value not exists)\nfunction _isget(mx) {\n    return (mx.payload.value === undefined);\n}\n\n// true if is a SET command  (SET == msg.value  exists)\nfunction _isset(mx) {\n    return ((mx.payload.property) && (mx.payload.value !== undefined));\n}\n\n\n// returns now(), formatted for mySQL, never fails\nfunction _mySQLdatetime() {\n    //datetime format for mySQL: '2020-12-18 20:45:02'\n    // using 'sv' for date format (but local timezone)\n    return (new Date().toLocaleString('sv'));\n}\n\n// For DB output, object/string\nfunction formatData(data) {\n    if (data == null)\n        return 'NULL';\n    var clean = JSON.stringify(data);\n    if (clean[0] === '\"')\n        clean = clean.substring(1).slice(0, -1);\n    //    return clean.replace(/'/g, '&#39;');  // sigle quotes are dangerous in sql\n    //    return clean.replace(/'/g, '\\\\x27');\n    return clean.replace(/'/g, \"\\\\'\");\n}\n\n// For DB output, string\nfunction formatName(data) {\n    if (data == null)\n        return 'NULL';\n    //    return data.replace(/'/g, '&#39;');  // sigle quotes are dangerous in sql\n    //    return data.replace(/'/g, '\\\\x27');\n    return data.toString().replace(/'/g, \"\\\\'\");\n}\n\nfunction _getHome() {\n    let netmap = global.get(\"remotemap\");\n    return (netmap.itself);\n}\n\n// ==============================  main function\n\nvar req = {};\nvar warn = null;\nvar query = {};\n//\n//---------------------- some assert\n\nif ((!msg.payload)) {\n    node.warn([\"ASSERT fail: msg.payload must exist.\", msg]);\n    return [null];\n}\n\nif ((msg.payload.property !== undefined) && (typeof(msg.payload.property) !== \"string\")) {\n    node.warn([\"ASSERT fail: msg.payload.property, if it exists, must be a string.\", msg]);\n    return [null];\n}\n\n// fake remote\nif (msg.payload.remote && (msg.payload.remote === _getHome())) {\n    delete msg.payload.remote;\n}\n\n// extra, local list, using REST\nif (!(msg.payload.remote) && !(msg.payload.device) && !(msg.payload.property) && !(msg.payload.value)){\n     msg.payload.remote = _getHome();\n }\n \n\nif ((!msg.payload.remote) && (!msg.payload.device)) {\n    node.warn([\"ASSERT fail: msg.payload.device must exist in local.\", msg]);\n    return [null];\n}\n\n// ---------------- expand messages for remote\n\nif (msg.payload.remote) {\n    let dx = msg.payload;\n    msg.payload = {};\n    msg.payload.value = dx;\n    msg.payload.device = \"_system\";\n    msg.payload.property = \"_proxy\";\n    \n//    node.warn([\"remote post \",msg]) ;\n}\n// -----------------------  struff: msg normalization\n    var alld = global.get(\"alldevices\");\n    const PSEUDODP = alld.__pseudodp;\n    var o = _callJSONMethod(alld, \"__getODev\", msg.payload.device);\n    var p = _callJSONMethod(alld, \"__getODps\", o, msg.payload.property);\n    msg   = _callJSONMethod(alld, \"__normalize\", msg, o, p, PSEUDODP);\n    if (msg.error){\n        node.warn(msg.error);\n        return([null]);\n    }\n    if (msg.warning){\n        node.warn(msg.warning);\n        delete msg.warning;\n    }\n//   node.warn([\"std cmd normalized \",msg]) ;\n\n// -------------- encoding data on place (so also fake can use encode functions)\nvar uVal = null;\nif (msg.payload.value){\n    uVal = msg.payload.value;     // for DB\n    if(req.infodp !== \"multiple\") {   // multiple value MUST be encoded!\n        msg.payload.value  = _callJSONMethod(alld, \"__encodeValue\", msg.payload.value, p, dataencode);\n        if ( msg.payload.value && msg.payload.value.error){\n            node.warn(msg.payload.value.error);\n            return[null];\n            }\n        }        \n}\n// -------------- checks:\nvar myId = \"unique\";\nvar map = global.get(\"remotemap\");\nif ((map !== undefined) && (map.itself !== undefined))\n    myId = map.itself;\n\n// ------------   test: device connected ?\nvar cnx = _callJSONMethod(alld, \"__getConnectName\", o);\nvar dnx = _callJSONMethod(alld, \"__getDevName\", o);\n\nif (cnx !== undefined) {\n//  property in PSEUDODP: can be used on disconnected devices  \n    if ((msg.payload.property !== undefined) && (msg.infodp) && ! PSEUDODP.includes(msg.infodp.toUpperCase())) {\n        var tuyastatus = global.get(\"tuyastatus\")\n            if ((typeof tuyastatus[cnx] !== 'undefined') &&\n                (typeof tuyastatus[cnx][\"_connected\"] !== 'undefined') &&\n                (tuyastatus[cnx][\"_connected\"] === false)) {\n                node.warn(\"WARNING: Operation not performed: '\" + cnx + \"' is not connected.\");\n                return ([null]);\n                }\n        }\n} else {\n    node.warn(\"ERROR: add to 'alldevices' the gateway '\" + o.gateway + \"' (used by '\" + dnx + \"')\");\n    return [null];\n}\n// ----  update structures\nreq[\"payload\"] = {};\nreq[\"to\"]   = msg.to;\nreq[\"infodp\"] = msg.infodp;\nquery[\"to\"] = msg.to;\nquery[\"infodp\"] = msg.infodp;\n\n// -------------- set default device capabilities\nvar cap;\nif (typeof o.capability !== 'undefined')\n    cap = Array.from(o.capability);\nif ((cap === undefined) || (cap.length < 1))\n    cap = [\"ALL\"]; // the default is ALL\n    \nif (p == undefined)  {\n   p = {\n       dp :  msg.infondo,\n       };\n    }  \n    \nvar capp =  \"RW\";\nif (typeof( p.capability)  === \"string\")\n    capp =  p.capability;\n\n// =============================== SKIP dp:  no capabilities, no trace, separate output\nif (capp === \"SKIP\") {\n    // creates response\n    var outMsg = {\n        \"from\": msg.toDev,\n        \"payload\": {\n            \"deviceId\": msg.toDev,\n            \"data\": {\n                \"t\": Math.floor(Date.now() / 1000),\n                \"dps\": {\n                    [p.dp]: msg.payload.value\n                }\n            }\n        }\n    };\n if (o.cid !== undefined)   \n       outMsg.payload.data.cid = o.cid;\n    return [null, null, null, null, outMsg];\n} \n\n//====================== fake devices: test device capabilities, warn message and DB update only, separate output\nif (alld.fake.includes(o)) {\n    query.topic = \" INSERT INTO `messages` (`timestamp`, `daemon`, `action`, `device-id`, `device-name`, `dps`, `dp-name`, `data`, `value`) \";\n    query.topic += \" VALUES ('\" + _mySQLdatetime() + \"', '\" + myId + \"' ,'TX', '\" + _getID(o) + \"', '\" + formatName(msg.payload.device) + \"','\" + msg.infodp + \"', '\" + formatName(msg.payload.property) + \"', \" + (_isset(msg) ? \"'\" + formatData(msg.payload.value) + \"'\" : \"NULL\") + \", \" + (_isset(msg) ? \"'\" + formatData(uVal) + \"'\" : \"NULL\") + \" );\";\n    // the warning message\n          warn = {\n                payload: null,\n                to     : null,\n                infodp : null\n              };\n    // special process for remote commands (_system/_proxy):\n    if ((msg.to === \"_system\") && ( msg.infodp === \"_proxy\") && (msg.payload.value.device == undefined)){  // is LIST\n                  warn = {payload : msg.payload.value.remote+\": TX: GET device LIST\",\n                          to: '_system',      // dummy\n                          infodp: \"LIST\" };  // dummy, to not do error\n         node.send([null, null, warn, null]); \n       } else\n    if ((msg.to === \"_system\") && ( msg.infodp === \"_proxy\")){  // no LIST\n        //  normalize remote msg\n        let ro = _callJSONMethod(alld, \"__getODev\", msg.payload.value.device);\n        let rp = _callJSONMethod(alld, \"__getODps\", ro, msg.payload.value.property);\n       let rmsg = _callJSONMethod(alld, \"__normalize\", {payload: msg.payload.value}, ro, rp, PSEUDODP);\n      if (rmsg.error){\n            node.warn(rmsg.error);\n            return([null]);\n        }\n        if (rmsg.warning){\n            node.warn(rmsg.warning);\n            delete rmsg.warning;\n        }\n        \n        warn.to     =  rmsg.to;\n        warn.infodp =  rmsg.infodp;\n      // ----------------- info for remote\n      if  (_isset(rmsg)){ \n         if (  rmsg.infodp && ( rmsg.infodp.toUpperCase() === \"MULTIPLE\")) {\n       //           warn.payload = [msg.payload.value.remote+\": TX: SET MULTIPLE '\" + rmsg.payload.device + \"'/'\" + rmsg.payload.property  + \"'\", rmsg.payload.value];\n                node.warn(\"ERROR: remote MULTIPLE commands not allowed.\",msg);\n                return [null];\n            } else {  // is SET\n                  warn.payload = [msg.payload.value.remote+\": TX: SET '\" + rmsg.payload.device + \"'/'\" + rmsg.payload.property  + \"'\", rmsg.payload.value];\n            }\n        } else {\n             if ( rmsg.infodp && (rmsg.infodp.toUpperCase() === \"SCHEMA\")) { // is get schema\n                  warn.payload =  [msg.payload.value.remote+\": TX: GET SCHEMA '\" + rmsg.payload.device, msg];\n             } else { // is GET\n                  warn.payload =  msg.payload.value.remote+\": TX: GET '\" + rmsg.payload.device+ \"'/'\" + rmsg.payload.property  + \"'\";\n                  }\n         }\n         \n        node.send([null, null, warn, null]); \n     } // ends _system/proxy\n     \n     \n     // continue,  is local\n        warn.to     =  msg.to;\n        warn.infodp =  msg.infodp;\n\n    if (_isset(msg)) {\n        if ( msg.infodp.toUpperCase() === \"MULTIPLE\") {\n            if (!(cap.includes(\"MULTIPLE\") || cap.includes(\"ALL\"))) {\n                node.warn(\"ERROR: MULTIPLE commands not allowed by the fake '\" + msg.payload.device + \"'\");\n                return [null];\n            }\n            warn.payload = [\"TX: SET MULTIPLE: fake '\" + msg.payload.device + \"'\", msg.payload.value];\n        } else {\n            if (!(cap.includes(\"SET\") || cap.includes(\"ALL\"))) {\n                node.warn(\"ERROR: SET commands not allowed by the fake  '\" + msg.payload.device + \"'\");\n                return [null];\n            }\n              warn.payload =[\"TX: SET fake '\" + msg.payload.device + \"'/'\" + msg.payload.property + \"'\", msg.payload.value];\n        }\n    } else { // a GET\n        if (msg.infodp.toUpperCase() === \"SCHEMA\") { // is get schema\n            if (!(cap.includes(\"SCHEMA\") || cap.includes(\"ALL\"))) {\n                node.warn(\"ERROR: SCHEMA commands not allowed by  '\" + msg.payload.device + \"'\");\n                return [null];\n            }\n            warn.payload = \"TX: GET SCHEMA: fake '\" + msg.payload.device + \"'\";\n        } else {\n            if (!(cap.includes(\"GET\") || cap.includes(\"ALL\"))) {\n                node.warn(\"ERROR: GET commands not allowed by the fake '\" + msg.payload.device + \"'\");\n                return [null];\n            }\n             warn.payload = \"TX: GET fake '\" + msg.payload.device + \"'/'\" + msg.payload.property + \"'\";\n        }\n      \n    } // ends GET\n    // outputs: tuya/fake/info/db/skip\n    return [null, msg, warn, query];\n} //--------------------------- end fake\n\n//====================================== general request\n\nreq[\"toDev\"]   = msg.toDev;\nreq.topic = \"msg for \" + msg.payload.device;\n\nif (cap.includes(\"NONE\")) {\n    node.warn(\"ERROR: GET/SET operations not allowed '\" + msg.payload.device + \"' is not accessible by user.\");\n    return [null];\n}\n\n// TEST for REFRESH\nif(( req.infodp  === \"_refresh\") ||( req.infodp  === \"_fastRate\")) {  // pseudoDP for REFRESH\n       if (!(cap.includes(\"REFRESH\") || cap.includes(\"ALL\"))) {\n           node.warn(\"ERROR: REFRESH not allowed by the '\" + msg.payload.device + \"'\");\n           return [null];\n       }\n}\n// ----------------------- SCHEMA + GET\nif (_isget(msg)) {\n    req.payload.operation = \"GET\";\n    if (msg.infodp === \"schema\") // is get schema\n        if (cap.includes(\"SCHEMA\") || cap.includes(\"ALL\")) {\n            req.payload.schema = true;\n            query.topic = \" INSERT INTO `messages` (`timestamp`, `daemon`, `action`, `device-id`, `device-name`, `dps`, `dp-name` )\";\n            query.topic += \" VALUES ('\" + _mySQLdatetime() + \"','\" + myId + \"', 'TX', '\" + msg.to + \"', '\" + formatName(msg.payload.device) + \"','SCHEMA','SCHEMA') ;\";\n            query[\"payload\"] = {\n                deviceId: msg.to\n            };\n            return ([req, null, {\n                        payload: \"TX: SCHEMA from '\" + msg.payload.device + \"'\",\n                        to: msg.to,\n                        infodp: msg.infodp\n                    }, query]);\n        } else {\n            node.warn(\"ERROR: SCHEMA not allowed by the '\" + msg.payload.device + \"'\");\n            return [null, null, null, null];\n        } // SCHEMA ends\n    //\n    if (!(cap.includes(\"GET\") || cap.includes(\"ALL\"))) {\n        node.warn(\"ERROR: GET commands not allowed by the '\" + msg.payload.device + \"'\");\n        return [null, null, null, null];\n    } \n   req.payload.dps =   msg.infodp;\n} // ----------------- GET ready\n\nif (_isset(msg)) {   //-------------------- MULTIPLE + SET\n    if (msg.infodp.toUpperCase()  === \"MULTIPLE\")\n        if (cap.includes(\"MULTIPLE\") || cap.includes(\"ALL\")) {\n            req.payload.multiple = true;\n            try {\n                if (typeof(msg.payload.value) === 'string')\n                    req.payload.data = JSON.parse(msg.payload.value);\n                else\n                    req.payload.data = msg.payload.value;\n            } catch (error) {\n                node.warn(\"ERROR: MULTIPLE bad value (\" + msg.payload.device + \") \" + error);\n            }\n            //\n            query.topic = \" INSERT INTO `messages` (`timestamp`, `daemon`, `action`,`device-id`, `device-name`, `dps`, `dp-name`, `data`)\";\n            query.topic += \" VALUES ('\" + _mySQLdatetime() + \"', '\" + myId + \"', 'TX', '\" + _getID(o) + \"', '\" + formatName(msg.payload.device) + \"','MULTIPLE','MULTIPLE', '\" + formatData(msg.payload.value) + \"') ;\";\n            query[\"payload\"] = {\n                deviceId: msg.to\n            };\n            return ([req, null, {\n                        payload: [\"TX MULTIPLE: to '\" + msg.payload.device + \"': \", msg.payload.value],\n                        to: req.to,\n                        infodp: req.infodp\n                    }, query]);\n        } else {\n            node.warn(\"ERROR: MULTIPLE SET not allowed by the '\" + msg.payload.device + \"'\");\n            return [null, null, null, null];\n        } // ------ MULTIPLE ends\n    //\n    if (!(cap.includes(\"SET\") || cap.includes(\"ALL\"))) {\n        node.warn(\"ERROR: SET commands not allowed by the '\" + msg.payload.device + \"'\");\n        return [null, null, null, null];\n    }\n\nreq.payload.dps = msg.infodp.toString(); // dps always string: \"101\" or \"_connected\"\nreq.payload.set = msg.payload.value;\n}  //  --------------------  SET ends\n\n//\nswitch (capp) {\n    //  \"RW,WW,GW,RO,WO,TRG,PUSH,SKIP,UNK,NULL\",\ncase \"UNK\":\ncase \"RW\":  // ok, nothing to do\n     break;\ncase \"PUSH\":\n    node.warn(\"ERROR: Can not SET/GET the 'PUSH' DP '\" + msg.payload.device + '\".\"' + msg.payload.property + \"'\");\n    return [null, null, null, null];\ncase \"RO\":\n    if (_isset(msg)) {\n        node.warn(\"ERROR: Can not SET the Read Only DP '\" + msg.payload.device + '\".\"' + msg.payload.property + \"'\");\n        return [null, null, null, null];\n    }\n    break;\ncase \"WO\":\n    if (_isget(msg)) {\n        node.warn(\"ERROR: Can not GET the 'WO' DP '\" + msg.payload.device + '\".\"' + msg.payload.property + \"'\");\n        return [null, null, null, null];\n        }\n    if (msg.payload.value === null) {\n            node.warn(\"ERROR: Can not use 'SET:null' for 'WO' DP '\" + msg.payload.device + '\".\"' + msg.payload.property + \"'\");\n            return [null, null, null, null];\n        }\n    break;\ncase \"GW\":\n    if (_isset(msg)) {\n        node.warn(\"ERROR: Can not SET the 'GW' DP '\" + msg.payload.device + '\".\"' + msg.payload.property + \"'\");\n        return [null, null, null, null];\n    }\n    // transforms GET in SET:null\n    delete req.payload.operation;\n    req.payload.set = null;\n    break;\ncase \"WW\":\n    if (_isget(msg)) {\n      // transforms GET in SET:null\n      delete req.payload.operation;\n      req.payload.set = null;\n    }\n    break;\ncase \"TRG\":\n    node.warn(\"ERROR: '\" + msg.payload.device + '\".\"' + msg.payload.property + \"' has 'TRG' capability\");\n    return [null, null, null, null];\ncase \"SKIP\":\n  return [null, null, null, null];\ndefault:  \n    node.warn(\"ERROR: unknown capability for '\" + msg.payload.device + '\".\"' + msg.payload.property );\n    return [null, null, null, null];\n}\n\n// outputs: tuya/fake/info/db\n// builds the DB  log\nquery.topic = \" INSERT INTO `messages` (`timestamp`, `daemon`, `action`, `device-id`, `device-name`, `dps`, `dp-name`, `data`, `value`) \";\nquery.topic += \" VALUES ('\" + _mySQLdatetime() + \"','\" + myId + \"', 'TX', '\" + _getID(o) + \"', '\" + formatName(msg.payload.device) + \"','\" + req.payload.dps + \"', '\" + formatName(msg.payload.property) + \"', \" + (_isset(msg) ? \"'\" + formatData(req.payload.set) + \"'\" : \"NULL\") + \", \" + (_isset(msg) ? \"'\" + formatData(uVal) + \"'\" : \"NULL\") + \" );\";\n\n// the warning message\nif (_isset(msg))\n    warn = {\n        payload: [\"TX SET: device '\" + msg.payload.device + \"'/'\" + msg.payload.property + \"'\", msg.payload.value],\n        to: msg.to,\n        infodp: msg.infodp\n    };\nelse\n    warn = {\n        payload: \"TX GET: device '\" + msg.payload.device + \"'/'\" + msg.payload.property + \"'\",\n        to: msg.to,\n        infodp: msg.infodp\n    };\nreturn ([req, null, warn, query]);\n","outputs":5,"noerr":0,"initialize":"","finalize":"","x":450,"y":880,"wires":[["4b771bf3.b8cef4"],["18817677.061b9a","7d976f84.81d9a"],["8792104e.e64d4"],["70d88fb4.7fcc2"],["fe1a20ab.104ce"]],"outputLabels":["tuya","fake","info","DB","skip"],"info":"CUSTOMIZATION:\n\nEdit the code to add a custom encode function.\n\nmore: \n2. add the same custom encode function to the 'FastFormat' node\n1. add the dual custom decode function to the 'OUT data process' node\n3. add the CODENAME in the `tuyahome.lookupdecode` table."},{"id":"2ec83963.a7d146","type":"link out","z":"173260fb.d021ff","name":"to logging","links":["9fe80f7e.f3f7e"],"x":1475,"y":360,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"d4a32280.a4dc8","type":"switch","z":"173260fb.d021ff","name":"*device selector","property":"toDev","propertyType":"msg","rules":[{"t":"eq","v":"bf8c4fd0c03067079cplb4","vt":"str"},{"t":"eq","v":"bfb073b1b789b5994cro7p","vt":"str"},{"t":"eq","v":"56685573d8bfc05082e6","vt":"str"},{"t":"eq","v":"56685573d8bfc0508488","vt":"str"},{"t":"eq","v":"56685573d8bfc0508837","vt":"str"},{"t":"eq","v":"554301602cf4325eae00","vt":"str"},{"t":"eq","v":"bf0b2ef30ffb476aa8ngzw","vt":"str"},{"t":"eq","v":"08435372600194fe37c8","vt":"str"},{"t":"eq","v":"bfbe31dc672657857cxsi0","vt":"str"},{"t":"eq","v":"bfa355aa196ae5975cy6ii","vt":"str"},{"t":"eq","v":"bfa9c64e128b39eddcgwyt","vt":"str"},{"t":"eq","v":"bfa1bdeb107d379fbckkwv","vt":"str"},{"t":"eq","v":"42027807d8bfc0c5831e","vt":"str"},{"t":"eq","v":"3613666124a1600db127","vt":"str"},{"t":"eq","v":"486441603c6105ca6f51","vt":"str"},{"t":"eq","v":"bf94066e80ba060a04vmxi","vt":"str"},{"t":"eq","v":"sonoff001","vt":"str"}],"checkall":"true","repair":false,"outputs":17,"x":740,"y":380,"wires":[["305e7686.63b0fa"],["dfd320c0.b4f74"],["5c8eb6e4.500348"],["e543af34.b2468"],["ba1d97f9.86c698"],["5a17a058.f17be"],["b7a9fedf.ac7dd"],["fdc6a9ae.1533a8"],["61c5fb6c.c4fad4"],["3db19556.7e04fa"],["a9d13fa.6649ec"],["cb5af4dc.7cb258"],["12896b89.d95c84"],["436ff47.238370c"],["2b66a27e.d6726e"],["3d5897cf.378f68"],["c4463434.4fd7b8"]],"info":"CUSTOMIZATION:\n\n- For a new device\n    - Add one output\n    - Add a new rule on msg.toDev, using the deviceID\n\nsee: [Howto: add a new device to tuyaDAEMON](https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON)"},{"id":"8a1da02d.424ae","type":"link in","z":"173260fb.d021ff","name":"std_cmd","links":["12227f5e.ddb0d1","1782306c.d003c","1e5c8c33.f6d8a4","270607f1.95ddd8","2abb8b42.fb0014","2e0b9f99.da3a5","2ebe64d5.26754c","3332c2d3.f540ae","37cf409a.4d0b5","4399bd03.cfe4e4","58c718a1.bbd748","6ebd4962.eb72d8","78b729bf.554958","7ab2060b.16fd58","7c949bb.9267764","7d098f27.1bff7","881bf4dd.364008","92960929.5eae58","9e7acf3.31b0c3","a838f77b.9166c8","aa325e28.91322","b4d2d9e.ab5fb28","b741480f.454488","beb91b.bdf6e6e8","c2eda0a.64cd86","c6eec3b9.38b0b","d05feec8.64e4e","de64614.cd6d8a","f302b04b.6478b","fb2a9b8.38c9068","fc6aa253.9d063","fed740ad.b1ac2","f260f4ac.978c98","dbaa0d27.77ed5","aa615c60.56ca4"],"x":200,"y":880,"wires":[["c991322e.a484e"]],"l":true,"info":"Main entry point for commands to devices.\n\nFor a great incapsulation, application flows can use only `usr-device-name`, `usr-property-name` and `usr-decoded-data`, as defined in [global.alldevices.](https://github.com/msillano/tuyaDAEMON/wiki/tuyaDAEMOM-global.alldevices) \n\n`msg.payload` for **SET** command (set device status or triggers an action)\n````\n{  \"remote\"  : undefined|`SVRxxx`,        //  remote tuyaDEAMON ID, optional: see global.remotemap. \n   \"device\"  : `dev-usr`|`cid`|`id`,      //  device-name.\n   \"property\": `dp-usr`|`pseudoDP`|`dp`,  //  propery-name \n   \"value\"   : `any`   }                  //  uncoded value (see alldevice: 'type' and 'typefiel')\n````\n\n`msg.payload` for **GET** command (asks the device or get it from **global.tuyastatus** ):\n````\n{  \"remote\"  : undefined|`SVRxxx`,        //  remote tuyaDEAMON ID, optional: see global.remotemap. \n   \"device\"  : `dev-usr`|`cid`|`id`,      //  device-name.\n   \"property\": `dp-usr`|`pseudoDP`|`dp`}  //  propery-name \n````\n`msg.payload` for **GET schema** command (asks the device or get it from **global.tuyastatus** ):\n````\n{  \"remote\"  : undefined|`SVRxxx`,    //  remote tuyaDEAMON ID, optional: see global.remotemap. \n   \"device\"  : `dev-usr`|`cid`|`id` } //  device-name.\n````\n`msg.payload` for **device LIST** from remote tuyaDAEMON:\n````\n{  \"remote\"  : `SVRxxx`,              //  remote tuyaDEAMON ID: see global.remotemap. \n````\n\n`msg.payload` for **SET multiple** command (_deprecated because uses dps index and coded data_):\n````\n{  \"remote\"  : undefined|`SVRxxx`,       //  remote tuyaDEAMON ID, optional: see global.remotemap. \n   \"device\"  : `dev-usr`|`cid`|`id`,     //  device-name.\n   \"property\": `MULTIPLE`,               //  pseudoOP\n   \"value\"   : {dp1:val1, dp2:val2...}}  //  coded values \n````\n\n\n**Commands handling**\n- Others entry points: 'Fast_cmds' (no logTX, std msg), 'Fake_cmds_IN' (no logTX, normalized msg), 'low_level_in' (no logTX, device msg), 'share_in' (no logTX, share msg).\n- See [pseudoDP](https://github.com/msillano/tuyaDAEMON/wiki/ver.-2.0--milestones#pseudodp) \n- In general, **tuyaDEAMON CORE** send ALL commands for real and virtual devices.\n- The commands for a _fake devices_ are available, in normalized form, from the 'Fake cmds' node, so they can be processed by related **node-red** flows.\n\n\n"},{"id":"cff32cc3.68b48","type":"comment","z":"173260fb.d021ff","name":"OUT msg process","info":"_tuyaDAEMON process chain for messages coming from all device._\n\nInput: msg from any `smart-tuya-device` node or internally generated.\n\nOuput: \n  - the global.tuyastatus object is updated.\n  - a log of every received data is stored in the 'messages' DB table.\n  - info, trace and warning messages are output on the debug pad.\n  \nThe user can control the info and trace messages and select the stored records.","x":210,"y":1120,"wires":[]},{"id":"305e7686.63b0fa","type":"link out","z":"173260fb.d021ff","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":1075,"y":100,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"bc933c53.b4bd9","type":"debug","z":"173260fb.d021ff","d":true,"name":"*trace: msg OUT from all devices","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1380,"y":1000,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg sended from all devices.\n- Normal use: disabled"},{"id":"b25c688d.705df8","type":"link in","z":"173260fb.d021ff","name":"low_level_IN","links":["3a1df4f8.435cec","756a073a.e295b8"],"x":250,"y":600,"wires":[["4b771bf3.b8cef4"]],"l":true,"info":"Low level entry point, payload is send directly to `tuya-smart-device` node, no log\nFor test, extensions etc.\n\nIN device messages (commands):\n \n SET single\n ````\n      {\n      \"toDev\":\"60a823fffe****\",  // tuyaDAEMON extrension: deviceID/gatewayID\n      \"payload\": {\n      // virtual devices, add cid:    \"devId\": \"60a453fffe*****\",\n          \"dps\":103,\n          \"set\":220  // BOOLEAN, INT/ENUM, STRING      \n          }\n      }\n````\n SET multiple\n````\n      {\n      \"toDev\":\"60a823fff*****\",  // tuyaDAEMON extrension: deviceID/gatewayID\n      \"payload\": {\n      // virtual devices, add cid:    \"devId\": \"60a453fffe******\" and to = gatewayID\n          \"multiple\":true,\n          \"data\": {\n             103:220  // dps:value \n             }\n          }\n      }\n````\n\n GET single\n````\n      {\n      \"toDev\":\"60a823fff******\",  // tuyaDAEMON extrension: deviceID/gatewayID\n      \"payload\": {\n    // virtual devices, add cid:    \"devId\": \"60a453fffe*******\",\n          \"operation\":\"GET\",\n          \"dps\":103\n          }\n      }\n````\nGET schema\n````\n      {\n      \"to\":\"60a823fff******\",  // tuyaDAEMON extrension: deviceID/gatewayID\n      \"payload\": {\n    // virtual devices, add cid:    \"devId\": \"60a453fff******\",\n          \"operation\":\"GET\",\n          \"schema\"=true\n          }\n      }\n````\n \n"},{"id":"e25f8186.a5e4d","type":"comment","z":"173260fb.d021ff","name":"global (alldevices, remotemap)","info":"","x":250,"y":960,"wires":[]},{"id":"798c4138.06176","type":"link out","z":"638c6657.ce65c8","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":955,"y":220,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"ebf1518e.eb3e2","type":"comment","z":"638c6657.ce65c8","name":"tuyaDAEMON.TRIGGER","info":"## TRIGGER tuyaDEAMON module\n\n_A real device WiFI, having  a big unused numerical parameter, say a 'counter', writable for both **Tuya** and **node-red**, is all the required hardware to implement a robust bilateral event communication (**TRIGGER**)._\n\nsee   https://github.com/msillano/tuyaDAEMON/blob/main/tuyaTRIGGER/README.md","x":230,"y":140,"wires":[]},{"id":"69321d9a.30b7d4","type":"link in","z":"638c6657.ce65c8","name":"tuya_bridge_IN","links":["305e7686.63b0fa","46ee1dd3.444b64","5024d2e0.b05cec","808817eb.3be488","83ab4822.a4d028","a3dfd8c8.7dac98","28352cf0.53f614"],"x":240,"y":220,"wires":[["c81edba3.cbcd58","2710cd5f.1eb562"]],"icon":"node-red/arrow-in.svg","l":true},{"id":"5024d2e0.b05cec","type":"link out","z":"638c6657.ce65c8","name":"tuya bridge IN","links":["69321d9a.30b7d4"],"x":1515,"y":100,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"bfddb028.1da3","type":"debug","z":"638c6657.ce65c8","name":"*trace: msg OUT from tuya_bridge","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":400,"y":320,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg FROM the 'tuya_bridge' device.\n- Normal use: disabled"},{"id":"2710cd5f.1eb562","type":"debug","z":"638c6657.ce65c8","name":"*trace: msg IN for tuya_bridge","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":410,"y":280,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg TO the 'tuya_bridge' device.\n- Normal use: disabled"},{"id":"8b585752.c9b818","type":"switch","z":"638c6657.ce65c8","name":"TUYATRGXXX","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"btwn","v":"1001","vt":"num","v2":"4999","v2t":"num"},{"t":"lt","v":"1000","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1080,"y":160,"wires":[["aba38dbb.f8b33","9efb8156.f33d4"],["6da77dc2.b387a4"]],"info":"selects all TRIGGERS from tuya cloud (values: 801-1999), to more prosesses\nselect test pig values (0-799) (optional)\n\n"},{"id":"63e6d5d.0a5da2c","type":"link out","z":"638c6657.ce65c8","name":"to core.more_devices_IN","links":["c90b7eb2.07595"],"x":1035,"y":280,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"5426b54d.99298c","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"*static retry","env":[{"name":"deviceId","value":"bfb073b1b789b5994cro7p","type":"str"},{"name":"deviceID","value":"bfb073b1b789b5994cro7p","type":"str"}],"x":1590,"y":140,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set property: deviceID (same value as `smart-tuya-device-node`)\n \nsee: [Howto: add a new device to tuyaDAEMON](https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON)"},{"id":"c6d3a5bb.1fa638","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"56685573d8bfc05082e6","type":"str"},{"name":"deviceID","value":"56685573d8bfc05082e6","type":"str"}],"x":1590,"y":180,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"71d6faf9.5c3504","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"554301602cf4325eae00","type":"str"},{"name":"deviceID","value":"554301602cf4325eae00","type":"str"}],"x":1590,"y":300,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"fd3a31f5.8912d","type":"subflow:ee953c15.ada29","z":"638c6657.ce65c8","name":"","env":[{"name":"deviceId","value":"bf8c4fd0c03067079cplb4","type":"str"},{"name":"deviceID","value":"bfa355aa196ae5975cy6ii","type":"str"}],"x":870,"y":280,"wires":[["63e6d5d.0a5da2c"]]},{"id":"4854987c.2fea88","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"56685573d8bfc0508488","type":"str"}],"x":1590,"y":220,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"d62f5a18.fe10b8","type":"debug","z":"173260fb.d021ff","name":"info","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1470,"y":1100,"wires":[]},{"id":"154e84b8.8c7b0b","type":"comment","z":"173260fb.d021ff","name":"Debug pad trace","info":"COSTOMIZATION:\n\n - Disable unwonted trace nodes.\n \n  \n - To filter only some info messages, modify the the code in function node: _'info messages filter'_ \n\n - To reduce the records sended to DB, edit the code in function nodes: _'* DB mux-filter'\n \n - Warn/ERROR messages are alway sended.\n \n \n \n","x":1340,"y":880,"wires":[]},{"id":"4170e71.70b8518","type":"file","z":"173260fb.d021ff","name":"*save path","filename":"D:\\xampp\\htdocs\\tuyadaemontoolkit\\devicedata\\alldevice.json","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":390,"y":1000,"wires":[[]]},{"id":"7a540832.656648","type":"inject","z":"173260fb.d021ff","name":"SAVE ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"$globalContext(\"alldevices\")\t","payloadType":"jsonata","x":210,"y":1000,"wires":[["4170e71.70b8518"]]},{"id":"81a9b329.092b1","type":"link out","z":"173260fb.d021ff","name":"low_level_OUT","links":["3baeae11.41ef52","5ba61f43.db9b9","52af620f.a7e1cc","fcc442c5.729a3","e11a7cec.3edf2"],"x":740,"y":1180,"wires":[],"l":true,"info":"Low level output, all messages as sended by devices.\n\nThe messages are unprocessed, directly from `tuya-smart-device` node. \n\n_Used by_:  `tuyaTRIGGERS.'event trigger'` node\n\n_See also_: `'to logging'` input link node for the OUT msg structure.\n\nOUT msg structures:\n\nexample: msg (real)\n ````\n        {\n        _msgid: \"12342f3fd.8697fc\"\n        _event: \"node:12343963.a7d846\"\n        payload: object\n           deviceId: \"123455aa196ae5975cy6ii\"\n           deviceName: \"*tuya_bridge\" \n           data: object\n              t: 1609234903  // timestamp, in seconds.\n              dps: object\n                 102: 1020   // array of dp:value\n        }\n```` \n\nexample msg: (virtual)\n````\n        {\n        _msgid: \"12346a44.e81238\"\n        payload: object\n           deviceId: \"123473b1b789b4994cro7p\"\n           deviceName: \"Zigbee Gateway\"\n           data: object\n              cid: \"12348d00856a1c15\"\n              t: 1609235292\n              dps: object\n                 102: 1020   // array of dp:value\n        }             \n````\n"},{"id":"f9a629eb.f4f498","type":"comment","z":"173260fb.d021ff","name":"tuyaDAEMON CORE v. 2.1","info":"\nsee [github documentation](https://github.com/msillano/tuyaDAEMON)","x":310,"y":260,"wires":[]},{"id":"81103bac.696bc8","type":"function","z":"173260fb.d021ff","name":"all: filter&update ","func":"// this node processes \"_connected\" event:\n//   - filters duplicated msgs\n//   - updates the global.tuyastatus\n//   - sends message to logging. \n//  note: logging processes for dp '_connected' is special: \n//    the 'dp' '_connected' it is not required in alldevices.\n//  You can add to some devices the dp='_connected' \n//    for special processing, e.g. 'share'.\n\n// stuff to access data\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\nvar alld = global.get(\"alldevices\");\nif (alld === undefined) return null;\n\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined) return null;\n\n// local functions:\nvar CONN = \"_connected\";\n// access key\nvar oDev =     _callJSONMethod(alld, \"__getODev\", msg.payload.deviceId, \"real\");\nif (oDev === undefined) return null;\nvar dname =    _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrCon =   _callJSONMethod(alld, \"__getDpsName\", oDev, CONN);\n// testing:\nif( tuyastatus[dname] === undefined) tuyastatus[dname] = {};\nvar xdev = tuyastatus[dname];\nvar oldconnected = xdev[usrCon];\nvar nowconnected = msg.payload.data.dps._connected;\nif (nowconnected !== oldconnected) {\n        xdev[usrCon] = nowconnected;\n        global.set(\"tuyastatus\", tuyastatus);\n        return (msg);\n    }\nreturn (null);\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1940,"y":360,"wires":[["edf84736.d76338"]]},{"id":"2caa595d.2a0106","type":"function","z":"173260fb.d021ff","name":"*Info events filter","func":"// kills unwanted tuyaDEAMON info messages & MQTT\n// Simple case based only on device ID\n// You can add more tests, based on single data point dp (in msg.infodp)\nif((typeof(msg.to) !== \"string\") && (typeof(msg.from) !== \"string\") )\n         node.warn([\"ASSERT fail: in msg the to/from (string) must exist.\", msg]) ;   \nif(typeof(msg.infodp) !== \"string\")\n         node.warn([\"ASSERT fail: in msg the msg.infodp (string) must exist.\" , msg]) ;   \n\n\n// ==================== for EVENTS msg FROM devices\nswitch (msg.from){    \n    case \"bfa1bdeb107d379fbckkwv\":                 // watering switch   \n    case \"bfa9c64e128b39eddcgwyt\":                 // watering timer   \n       return null;     // killed\n    case \"bf8c4fd0c03067079cplb4\":                 // tuya bridge trigger\n         if (msg.infodp === \"7\") return(null);\n         break;\n   case \"_system\":\n        if (msg.infodp === \"_proxy\") return(null);   //  internal use: REMOTE commands \n        if (msg.infodp === \"_toLogging\") return(null);   //  internal use: REST remote echo\n        if (msg.infodp === \"_zeroTask\") return(null);   // fast benchmarks\n        break;\n\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1210,"y":1140,"wires":[["d62f5a18.fe10b8","9fe75b23.a05408"]],"info":"CUSTOMIZATION:\n\nFilter to reduce info messages on Debug pad.\n\n- On installation and test:\n  Best don't filer any message.\n- On production:\n  Better to filter not useful events.\n\n_________________________________\n  \nSee the example filter:\n \nTest can be done on \n       msg.from:            RX info, the deviceId\n       msg.to:              TX info, the deviceId\n       msg.infodp:          the dpId          \n  \n   "},{"id":"c90b7eb2.07595","type":"link in","z":"173260fb.d021ff","name":"more_devices_IN","links":["4fb32195.592ef","63e6d5d.0a5da2c"],"x":1655,"y":100,"wires":[["81103bac.696bc8"]],"icon":"node-red/arrow-in.svg"},{"id":"18817677.061b9a","type":"link out","z":"173260fb.d021ff","name":"fake_cmds ","links":["369ab28b.348ebe","580c2cc4.3ac424","b5aba5f4.6a3778","bf4e83f7.f5f21"],"x":730,"y":780,"wires":[],"icon":"node-red/arrow-in.svg","l":true,"info":"OUTPUT for commands to fake devices, unprocessed by tuyaDAEMON CORE.\nMessages are `normalizated` to speedup next elaborations:\n\nused to update `global.tuyastatus`:\n-   `msg.payload.device   = usr-dev-name|msg.to`\n-   `msg.payload.property = undef|usr-dp-name|msg.infodp`\n-   `msg.payload.value    = undef|any`  \n\nused as keys:\n-   `msg.to     = cid|deviceId`  (mandatory)\n-   `msg.infodp = dp|pseudoDP` (mandatory)\n-   `msg.toDev  = gatewayId|deviceId` (not in fake devices)\n\nrules:\n- pseudoDP are defined in `global.alldevices__pseododp` array.\n- SET: `value` = defined\n- GET: `value` = undefined\n- SCHEMA: `infodp`='schema', `property`=undefined, `value`=undefined\n\nrare in _fake devices_:\n- MULTIPLE: `infodp`='multiple', `property`='multiple', `value` = coded, sent 'as is' to device.\n\n"},{"id":"70d88fb4.7fcc2","type":"function","z":"173260fb.d021ff","name":"*DB mux-filter","func":"// CUSTOMIZATION\n\n// to filter and route data to 0..n DB\n// Example using 2 DB:  'local' and 'android'.\n// Any DB uses 2 nodes: 'log' (debug, DB: for usr DB commands) and 'no-log' (for std commands)\n// So 4 outputs:\n// 1: local, no-log\n// 2: local, log\n// 3: android, no-log\n// 4: android, log\n\n// Last selector: here ONLY messages for DB or error.\nif((typeof(msg.to) !== \"string\") && (typeof(msg.from) !== \"string\") )\n         node.warn([\"ASSERT fail: in DB msg to/from (string) must exist.\", msg]) ;   \nif(typeof(msg.infodp) !== \"string\")\n         node.warn([\"ASSERT fail: in DB msg.infodp (string) must exist.\" , msg]) ;   \nif(typeof(msg.topic) !== \"string\")\n         node.warn([\"ASSERT fail: in DB msg.topic (sql string) must exist.\" , msg]) ;   \n\n// ==================== for TX msg TO devices\nswitch (msg.to){    \n    case \"bfa1bdeb107d379fbckkwv\":     // watering switch: no record, only watering_sys   \n    case \"bfa9c64e128b39eddcgwyt\":     // watering timer : no record, only watering_sys  \n        return[null];    // killed\n\n    case \"_system\":                       \n       if (msg.infodp === \"_proxy\") return(null);   //  internal use: REMOTE commands\n       if (msg.infodp === \"_toLogging\") return([null]);   //  internal use REST remote echo\n       if (msg.infodp === \"_zeroTask\") \n                 return([null]);          // fast benchmarks, killed\n\n// HERE CUSTOM DB messages, to DB-log nodes:\n        if (msg.infodp === \"_sqlDBlocal\")\n                 return [null, msg];              // local, log\n        if (msg.infodp === \"_sqlDBandroid\") \n                 return [null, null, null, msg];  // android, log\n        break;\n}\n\n// ====================  for RX msg FROM devices\nswitch (msg.from){    \n   case \"bfa1bdeb107d379fbckkwv\":     // watering switch, only watering_sys   \n   case \"bfa9c64e128b39eddcgwyt\":     // watering timer, only watering_sys   \n       return[null];        // killed\n\n   case \"_system\":\n        if (msg.infodp === \"_exec\") \n             return([null]);          // can give problems with out data\n        break;\n\n   case \"_system\":\n        if (msg.infodp === \"_toLogging\") return([null]);   //  internal use REST remote echo\n        if (msg.infodp === \"_proxy\") return(null);   //  internal use: REMOTE commands\n        if (msg.infodp === \"_zeroTask\") \n             return([null]);          // fast benchmarks, killed\n        break;\n}\n\nreturn [msg];  // defaut: local, no-log","outputs":4,"noerr":0,"initialize":"","finalize":"","x":1200,"y":1280,"wires":[["74205825.bd5e98"],["1a711832.f93bb8"],["4ada67ea.91c738"],["46a8112c.cdbcf"]],"info":"CUSTOMIZATION:\n\nFilter to choose the DB server.\n_________________________________\n  \nSee the example filter:\n \nTest can be done on \n       msg.from:            RX info, the deviceId\n       msg.to:              TX info, the deviceId\n\n   "},{"id":"edf84736.d76338","type":"link out","z":"173260fb.d021ff","name":"to system.conn_ev_IN","links":["5ff0742e.cec73c","9fe80f7e.f3f7e"],"x":2055,"y":360,"wires":[],"icon":"node-red/arrow-in.svg","info":"TRIGGER internal/external.\n\nFired at any change of devices connection status.\nThis event is logged and fires an update of AC/LAN/AC properties in _system"},{"id":"c81edba3.cbcd58","type":"delay","z":"638c6657.ce65c8","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"50","nbRateUnits":"10","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":460,"y":220,"wires":[["bd44880d.8cdda8"]],"info":"limit throughput, but allows smooth operations and less connection problems"},{"id":"fe1a20ab.104ce","type":"delay","z":"173260fb.d021ff","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1000","nbRateUnits":"10","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":470,"y":1180,"wires":[["81a9b329.092b1","d943c0e6.b7946","bc933c53.b4bd9"]]},{"id":"5777b120.3dc3e","type":"delay","z":"173260fb.d021ff","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"30","nbRateUnits":"10","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":460,"y":380,"wires":[["d4a32280.a4dc8","946d7931.c2a828"]]},{"id":"9efb8156.f33d4","type":"link out","z":"638c6657.ce65c8","name":"triggers_OUT","links":["3246c6c8.f9ed9a","42656e5c.9cc55","7724fe64.ce399","ae124920.c94578","d3e4089a.6570c8","251c1ce0.01ec64","b855dd13.84c18"],"x":1420,"y":160,"wires":[],"icon":"node-red/arrow-in.svg","l":true},{"id":"7724fe64.ce399","type":"link in","z":"4bebbdfa.41af64","name":" triggers IN","links":["9efb8156.f33d4"],"x":255,"y":740,"wires":[["9bff7a92.229d98"]]},{"id":"9bff7a92.229d98","type":"switch","z":"4bebbdfa.41af64","name":"smoke detector","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1800","vt":"str"},{"t":"eq","v":"1810","vt":"str"},{"t":"eq","v":"1820","vt":"str"},{"t":"eq","v":"1830","vt":"str"},{"t":"eq","v":"1840","vt":"str"},{"t":"eq","v":"1850","vt":"str"}],"checkall":"false","repair":false,"outputs":6,"x":420,"y":740,"wires":[["dfbd21ba.05302"],["41bd356c.fc27fc"],["f0d9e484.2247c8"],["50659a72.879d14"],["9c0ddbf6.c9b378"],["cb9729f6.064aa8"]],"info":"for my device\ndp = 102    // countdown"},{"id":"dfbd21ba.05302","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1800: alarm ON","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"value","value":"ON","type":"str"},{"name":"fakeDP","value":"1800","type":"num"}],"x":780,"y":620,"wires":[["54d03d6e.945994"]]},{"id":"41bd356c.fc27fc","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1810: alarm OFF","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1800","type":"num"},{"name":"value","value":"OFF","type":"str"}],"x":770,"y":660,"wires":[["54d03d6e.945994"]]},{"id":"f0d9e484.2247c8","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1820: battery LOW","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1820","type":"num"},{"name":"value","value":"LOW","type":"str"}],"x":770,"y":700,"wires":[["54d03d6e.945994"]]},{"id":"54d03d6e.945994","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":975,"y":740,"wires":[]},{"id":"d6618ecb.a3d0b","type":"comment","z":"4bebbdfa.41af64","name":"converts TUYATRG to device changes","info":"Switch node to select incoming TRIGGER from Tuya (status update)\nThe selected TUYATRG are converted to device/property/value and sended to tuyaDAEMON ('to logging' link) for standard processing","x":390,"y":660,"wires":[]},{"id":"71493ceb.b6f104","type":"function","z":"4bebbdfa.41af64","name":"pick and execute","func":"// Implementation of GET/SET/SCHEMA/MULTIPLE  commands\n// for any 'fake' device\n//    1) the msg.to IS the device ID\n//    2) the msg.infodp IS the dp ID\n//    3) the msg.payload.device IS the device name (if exist, or ID) used by tuyastatus\n//    4) the msg.payload.property IS the dp name (if exist) used by tuyastatus\n// smoke detector accepts only SET, absorb all msg.\n// --------------- locals\n// mapping msg to outputs\nconst DEVID = \"317080408caab521a5d3\";\n\n\n// test: idDev GET command?\nfunction _isGetCommand( msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n\n//  set (and create, if required) global.tuyastatus structure from msg\nfunction _setGlobalValue(msx) {\n    var tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus == undefined)\n        tuyastatus = {};\n    if (tuyastatus[msx.payload.device] == undefined)\n        tuyastatus[msx.payload.device] = {};\n    tuyastatus[msx.payload.device][msx.payload.property] = msx.payload.value;\n    global.set(\"tuyastatus\", tuyastatus);\n}\n\n// ------------- main\n// select and execute all commands for 'smoke detector'\n// accepts only SET. final: absorb all bad msg + error.\n//\n\nif (_isSetCommand(msg)) { // test: is SET\n    // -----------  get obj-dev and obj-dp\n        switch (msg.infodp) {\n        case \"1840\":\n            // -----------  select by value - tolerant, accepts 'OFF','NO', 0, \"0\", \"\", [],[0],[[]], null, undefined :  see https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons\n            //  language en/it\n            if ((msg.payload.value == null) || (msg.payload.value == false) || (msg.payload.value.toUpperCase() === \"OFF\") || (msg.payload.value.toUpperCase() === \"NO\"))\n                return ([null, msg]); // output#2\n            //  else is ON\n            return ([msg]); // output#1\n        }\n    //\n}\n\n// default: warning, bad command\nif (msg.to === DEVID) {\n    node.warn([\"The command '\" + msg.payload.property + \"=\" + msg.payload.value + \"' is unknown for smoke detector device.'\" + msg.payload.device + \"'(1)\", oDev]);\n}\n// total 3 outputs\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":430,"y":920,"wires":[["6c452e2f.f77e"],["51abfb8.0f92a04"]]},{"id":"369ab28b.348ebe","type":"link in","z":"4bebbdfa.41af64","name":"commands IN","links":["18817677.061b9a"],"x":255,"y":920,"wires":[["71493ceb.b6f104"]]},{"id":"6c452e2f.f77e","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"5800 SET silence ON","env":[{"name":"TRGnumber","value":"5800","type":"str"}],"x":780,"y":880,"wires":[["83ab4822.a4d028"]]},{"id":"83ab4822.a4d028","type":"link out","z":"4bebbdfa.41af64","name":"to send","links":["69321d9a.30b7d4"],"x":975,"y":920,"wires":[]},{"id":"51abfb8.0f92a04","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"5810 SET silence OFF","env":[{"name":"TRGnumber","value":"2810","type":"str"}],"x":780,"y":920,"wires":[["83ab4822.a4d028"]]},{"id":"67189163.f24ea","type":"comment","z":"4bebbdfa.41af64","name":"converts SET requests to REDTRG (for Tuya)","info":"For 'mirror' and 'fake' devices:\nThis custom flow decodes user command relatives to a device:\n\nBased on device(/propery(/value)) this flow can:\n  - do local processing\n  - send REDTRG to Tuya-cloud\n  - produce a WARNING","x":410,"y":860,"wires":[]},{"id":"f1dc63d6.6e4b5","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE smoke detector","info":"\nsee https://github.com/msillano/tuyaDAEMON/wiki/mirror-device-'Smoke_Detector':-case-study","x":240,"y":600,"wires":[]},{"id":"aba38dbb.f8b33","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"send ACK","env":[{"name":"TRGnumber","value":"0","type":"str"}],"x":1400,"y":100,"wires":[["5024d2e0.b05cec"]]},{"id":"30ac034a.029d3c","type":"change","z":"638c6657.ce65c8","name":"dp convert","rules":[{"t":"set","p":"payload.tuyatrigger","pt":"msg","to":"payload.data.dps[\"7\"]","tot":"msg"},{"t":"set","p":"payload.data","pt":"msg","to":"{}","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":870,"y":160,"wires":[["8b585752.c9b818"]]},{"id":"6da77dc2.b387a4","type":"link out","z":"638c6657.ce65c8","name":"to system.ping_test","links":["c23760b2.45d3a"],"x":1355,"y":220,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"cf1237ea.b909e8","type":"comment","z":"638c6657.ce65c8","name":"Debug pad trace","info":"**Disable unwonted trace messages on debug pad.**\n\n - Disable unwonted trace nodes.\n  \n ","x":460,"y":380,"wires":[]},{"id":"50659a72.879d14","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1830: battery OK","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1820","type":"num"},{"name":"value","value":"OK","type":"str"}],"x":770,"y":740,"wires":[["54d03d6e.945994"]]},{"id":"d6f44262.bcd7","type":"status","z":"173260fb.d021ff","name":"*All DB status","scope":["1a711832.f93bb8","4ada67ea.91c738","74205825.bd5e98","46a8112c.cdbcf"],"x":1510,"y":1460,"wires":[["b9b5886c.153d98"]]},{"id":"b9b5886c.153d98","type":"function","z":"173260fb.d021ff","name":"DB check","func":"// checks DB status\n// version 1.1 (use of _callJSONMethod)\n// ===================================== do not change\nPDB = \"_DBase\";\n//\nfunction _sendOUT(key, value) {\n    // builds a fake OUT message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {\n                    [key]: value\n                }\n            }\n        }\n    };\n    return newMsg;\n}\n\n// ---------------- main\n// catch bad\nif (msg.status === undefined) return null;\n//\nif(msg.status.text === undefined) return(null);\n//\nvar olddb =flow.get(PDB);\nvar newdb = ((msg.status.text == \"connected\") || (msg.status.text == \"OK\"));\nif  (olddb == newdb) return null;\n//\nflow.set(PDB, newdb);\n//\nif(newdb) {\n    node.status({\n        fill: \"green\",\n        shape: \"ring\",\n        text: \"DB connected\"\n    });\n    return (_sendOUT(PDB, true));\n} else {\n    node.status({\n        fill: \"red\",\n        shape: \"ring\",\n        text: \"DB disconnected\"\n    });\n    return (_sendOUT(PDB, false));\n}\nreturn null;\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nPDB = \"_Dbase\";\n// ---------------- main\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrDB = _callJSONMethod(alld, \"__getDpsName\", oDev, PDB);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[sysDevName] === undefined)\n    tuyastatus[sysDevName] = {};\n// default\ntuyastatus[sysDevName][usrDB] = null;\n//\nnode.status({\n    fill: \"yellow\",\n    shape: \"dot\",\n    text: \"start\"\n});\nglobal.set(\"tuyastatus\", tuyastatus);\nflow.set(PDB, \"new\");\n","finalize":"","x":1740,"y":1460,"wires":[["d6451e16.628bb","6f287998.d91408"]]},{"id":"d6451e16.628bb","type":"link out","z":"173260fb.d021ff","name":"DB_ALARM","links":[],"x":1950,"y":1460,"wires":[],"l":true,"info":"TRIGGER for custom flows.\n\nFired at any change."},{"id":"c33e85bd.f37a08","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bf0b2ef30ffb476aa8ngzw","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":340,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"181b544f.5bb98c","type":"http in","z":"173260fb.d021ff","name":"REST tuyaDAEMON","url":"/tuyaDAEMON","method":"get","upload":false,"swaggerDoc":"","x":230,"y":1360,"wires":[["6fe3ccb.d4ab534"]]},{"id":"e166ce71.eb209","type":"change","z":"173260fb.d021ff","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.content-type","pt":"msg","to":"application/json","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":1030,"y":1460,"wires":[["834eb8f4.e36dd8"]]},{"id":"834eb8f4.e36dd8","type":"http response","z":"173260fb.d021ff","name":"HTTP response","statusCode":"","headers":{},"x":1240,"y":1460,"wires":[]},{"id":"6fe3ccb.d4ab534","type":"function","z":"173260fb.d021ff","name":"interface","func":"//  for applications, fast processing, immediate answer.... \n//  Return JSON; data or status.\n//  GET, SCHEMA: solved from tuyastaus, returns data (not stored in log)\n//  SET, MULTIPLE: sended to tuyaDEAMON, returns 'status:sended' (stored in log)\n//-------------------------------- local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n   // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n   var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n   var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n   return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nvar comm = {};\nvar tuyastatus = global.get(\"tuyastatus\");\n\nvar myId = \"unique\";\nvar map = global.get(\"remotemap\");\nif ((map !== undefined) &&  (map.itself !== undefined))  myId = map.itself;\n\n//---------------------- some assert\nif (!(msg.payload && msg.payload.remote_from && (msg.payload.remote_from!== myId ))) {\n    node.warn([\"ASSERT fail: msg.payload.remote_from  must exist !== itself\", msg]);\n//    return [null];\n}\n\ndelete msg.payload.remote;\n\n// ----------- is LIST\nif (!msg.payload.device ){     // devices list immediate\n             if (tuyastatus !== undefined) \n                 msg.payload[\"list\"] = Object.keys(tuyastatus);\n             msg.payload[\"remote_from\"] = myId; \n             let jdat2 = JSON.stringify(msg.payload);\n             msg.payload = jdat2;\n             return ([msg, null]);\n       }\n\n// -----------------------  struff: msg normalization\n    var alld = global.get(\"alldevices\");\n    const PSEUDODP = alld.__pseudodp;\n    var o = _callJSONMethod(alld, \"__getODev\", msg.payload.device);\n    var p = _callJSONMethod(alld, \"__getODps\", o, msg.payload.property);\n    msg = _callJSONMethod(alld, \"__normalize\", msg, o, p, PSEUDODP);\n    if (msg.error){\n        node.warn(msg.error);\n        return([msg, null]);\n    }\n    if (msg.warning){\n        node.warn(msg.warning);\n    }\n// node.warn([\"cmd normalized \",msg]) ;\n  comm.to = msg.to;\n  comm.infodp = msg.infodp;\n  comm['payload'] = msg.payload;\n  comm.payload.value = (comm.payload.value)?JSON.parse( msg.payload.value): undefined;\n\nif (msg.infodp === \"schema\") { // ok device field\n  //----- is SCHEMA\n         msg.payload['schema'] = tuyastatus[msg.payload.device];\n         msg.payload[\"remote_from\"] = myId; \n         let jdat2 = JSON.stringify(msg.payload);\n         msg.payload = jdat2;\n         return ([msg, null]);\n  }\n  \n// -------- is GET, read data from tuyastatus\nif (msg.payload.value === undefined) {\n  msg.payload[\"remote_from\"] = myId; \n  if (tuyastatus[msg.payload.device][msg.payload.property] !== undefined)  { \n         msg.payload['value'] = tuyastatus[msg.payload.device][msg.payload.property];\n         let jdat2 = JSON.stringify(msg.payload);\n         msg.payload = jdat2;\n         return ([msg, null]);\n         } else {\n         msg.payload['value'] = \"none\";\n         let jdat2 = JSON.stringify(msg.payload);\n         msg.payload = jdat2;\n         return ([msg, null]);\n         }\n} // end GET\n\nvar pseudoDP = PSEUDODP.includes(msg.infodp.toUpperCase());\n\n//--------- is SET, MULTIPLE, process it\nif  (((p !== undefined) || pseudoDP) && (msg.payload.value !== undefined)) { \n     node.send([null, comm]);  // to do cmd\n      \n     delete msg.payload.value;\n     msg.payload['status'] =  \"sent\";\n     let jdat2 = JSON.stringify(msg.payload);\n     msg.payload = jdat2;\n     return [msg, null, comm];  // to rest, to notify\n} // end SET\n\nreturn [msg, null];\n\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":680,"y":1360,"wires":[["e166ce71.eb209"],["58c718a1.bbd748"],["f1edf094.cfc34"]]},{"id":"58c718a1.bbd748","type":"link out","z":"173260fb.d021ff","name":"to std_cmd","links":["8a1da02d.424ae"],"x":855,"y":1440,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"b1eb4c66.e29de","type":"http in","z":"173260fb.d021ff","name":"REST tuyaDAEMONdebug","url":"/tuyaDAEMONdebug","method":"get","upload":false,"swaggerDoc":"","x":250,"y":1500,"wires":[["65eb2aa.067dfd4"]]},{"id":"65eb2aa.067dfd4","type":"function","z":"173260fb.d021ff","name":"rest_automata","func":"\n//  for debug, all request sended to devices,\n//  asyncronous, wait device answer or timout (set here and in external trigger node)\n//  Return JSON, data or status.\nvar timeout = 4; // in sec, less than 'REST timeout'  node\nvar restautoma = flow.get('restautoma');\nswitch (restautoma) {\ncase '_wait':\n//   node.warn(\"in warn\");\n   if ((msg.req !== undefined) && (msg.payload !== undefined))  { // HTTP message\n      if (msg.payload.device === undefined){     // back devices list immediate\n              // immediate answer\n             msg.payload = [];\n             var tuyastatus = global.get(\"tuyastatus\");\n             if (tuyastatus !== undefined) \n                 msg.payload = Object.keys(tuyastatus);\n            return ([null, msg]);\n       } else {            // send request, set timeout\n        var comm = {};\n        comm['payload'] = msg.payload;\n        flow.set('restautoma', msg);\n        flow.set('restt', Math.floor(Date.now() / 1000));\n        return ([comm, null]);\n      }\n   }\n\n   break;\ndefault:\n//  node.warn(\"in default\");\n   // uses payload.info in info messages\n   if (msg.info !== undefined)  {\n       if ((typeof restautoma === 'object') && (restautoma.req !== undefined) && (restautoma.payload.device !== undefined)){\n//          node.warn([\"from automa\",restautoma, msg]);\n         if (restautoma.payload.device === msg.info.device){\n          if ((restautoma.payload.property === undefined)&& (restautoma.payload.value === undefined)) {  // is schema, ok\n                  var tuystatus = global.get(\"tuyastatus\");\n                  restautoma.payload = JSON.stringify(tuystatus[restautoma.payload.device]);\n                  flow.set('restautoma', '_wait');\n                  return ([null, restautoma]);\n          }\n           if ((restautoma.payload.property == msg.info.property) || (restautoma.payload.property == msg.infodp) || (restautoma.payload.property === 'MULTIPLE')) {\n             var jdat = JSON.stringify(msg.info);\n             restautoma.payload = jdat;\n             flow.set('restautoma', '_wait');\n             return ([null, restautoma]);\n            }\n         }\n       }\n   }\n\n}\n\n// test timeout, if not wait\n\nif (restautoma !== '_wait') {\n//  node.warn(\"in timeout\");\n    var start = flow.get('restt');\n    if (((Math.floor(Date.now() / 1000)) - start) > timeout) { // OK exit for timeout\n        flow.set('restautoma', '_wait');\n        if ((typeof restautoma === 'object') && (restautoma.req !== undefined)) {  \n           restautoma.payload = { \"status\": \"request aborted for timeout\" };\n           return ([null, restautoma]);\n           }\n    }\n}\n\n//noting to do\nreturn ([null, null]);\n","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n flow.set ('restautoma', \"_wait\");","finalize":"","x":660,"y":1500,"wires":[["58c718a1.bbd748","f6a0c8d.8dbb038"],["e166ce71.eb209"]]},{"id":"f6a0c8d.8dbb038","type":"trigger","z":"173260fb.d021ff","name":"REST timeout 5s","op1":"test","op2":"test timeout","op1type":"str","op2type":"str","duration":"6","extend":false,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":850,"y":1540,"wires":[["65eb2aa.067dfd4"]]},{"id":"2e4937fc.2ef1f8","type":"link out","z":"173260fb.d021ff","name":"event OUT","links":["b8e273f8.d51a7"],"x":875,"y":1180,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"60906ab.8e27094","type":"comment","z":"173260fb.d021ff","name":"REST HTTP","info":"The **tuyaDAEMOM REST** is implemented using two interfaces, for different pourposes.\n\n1) **/tuyaDEAMON:** this is the production interface.\n\n2) **/tuyaDEAMONdebug:** this is the development interface.\n\nsee https://github.com/msillano/tuyaDAEMON/wiki/tuyaDAEMON-REST","x":190,"y":1320,"wires":[]},{"id":"d943c0e6.b7946","type":"function","z":"173260fb.d021ff","name":"*check and kill answer ","func":"// ------------- check for ALL answers\n//input: device OUT msg (real)\n//  _msgid: \"1234f3fd.8477fc\"\n//  _event: \"node:1233963.a7d146\"\n//  payload: object\n//     deviceId: \"123455aa196ae5******\"\n//     deviceName: \"*tuya_bridge\" (tuya-node name, optional, not used)\n//     data: object\n//        t: 1609234903\n//        dps: object\n//           102: 1020\n//\n//input: device OUT msg (virtual)\n//   _msgid: \"d0b26a44.e81738\"\n//   payload: object\n//      deviceId: \"123473b1b786b59*******\"\n//      deviceName: \"Zigbee Gateway\"\n//      data: object\n//        cid: \"12358d00086a1c45\"\n//        t: 1609235292\n//        dps: object\n//           103: 19\n//\n\n//  detects some fatal errors in input message structure, here for convenience\nif (msg.payload.deviceId === undefined)  {\n   node.warn([\"ASSERT fail: in the answer the payload.deviceId must exist.\", msg]) ;   \n   return null;\n}\n\nif (msg.payload.data === undefined) {\n    node.warn([\"ASSERT fail: in the answer the payload.data is mandatory\", msg]);\n    return null;\n}\n\nif (typeof(msg.payload.data) === \"string\") return (msg); // error, but handled by \"OUT data process\" node.\n\n// ========================================================= KILL\n// some messages can be useless\n\n// the same 'Zigbee Gateway' is in many tuyaDAEMON instances.\n// To handle different virtual devices groups in different servers \n// the selection is on 'msg.payload.deviceId' and 'msg.payload.data.cid'   \nif((msg.payload.deviceId == \"bfb073b1b789b5994cro7p\") &&( msg.payload.data.cid === undefined))\n     return(null);\n     \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":480,"y":1240,"wires":[["a878b58e.e4ea08"]],"info":"CUSTOMIZATION:\n\nTo filter the device responses (no INFO, no record in DB, no share action)\n_________________________________\n  \nSee the example filter:\n \nTest can be done on \n       msg.payload.deviceID:   the deviceId or gatewayId\n       msg.payload.data.cid:   the virtual device cid\n \n "},{"id":"de4b43ad.27e31","type":"catch","z":"173260fb.d021ff","name":"*catch device and LAN errors","scope":["dfd320c0.b4f74","e543af34.b2468","5c8eb6e4.500348","ba1d97f9.86c698","5a17a058.f17be","b7a9fedf.ac7dd","cb5af4dc.7cb258","fdc6a9ae.1533a8","61c5fb6c.c4fad4","3db19556.7e04fa","12896b89.d95c84","a9d13fa.6649ec","436ff47.238370c","a0d5012f.b2551","cb0e33e6.f0a6b"],"uncaught":false,"x":1320,"y":820,"wires":[[]],"info":"CUSTOMIZATION:\n\n- Adding a new device\n    Select the new tuya-smart-device node."},{"id":"f3a399b4.d43028","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'Door_Sensor'","info":"mirror device 'door sensor' input messages\n\nsee https://github.com/msillano/tuyaDAEMON/blob/main/devices/Door_Sensor/device_Door_Sensor.pdf","x":230,"y":1020,"wires":[]},{"id":"8d12f398.d07e","type":"switch","z":"4bebbdfa.41af64","name":"main door","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1030","vt":"str"},{"t":"eq","v":"1040","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":400,"y":1080,"wires":[["a873b4f2.725588"],["e5ca8ffd.7b59d"]],"info":"for my device\ndp = 102    // countdown"},{"id":"e5ca8ffd.7b59d","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1040: inject door open ON","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1030","type":"str"},{"name":"value","value":"true","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1100,"wires":[["7b505949.7ba1e8"]]},{"id":"a873b4f2.725588","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1030: inject door open OFF","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1030","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1060,"wires":[["7b505949.7ba1e8"]]},{"id":"d3e4089a.6570c8","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1080,"wires":[["8d12f398.d07e"]]},{"id":"7b505949.7ba1e8","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1080,"wires":[]},{"id":"598a86b4.d36608","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'PIR_Sensor'","info":"mirror device 'PIR sensor': input messages\n\nsee: https://github.com/msillano/tuyaDAEMON/blob/main/devices/PIR_motion/device_PIR_motion.pdf","x":230,"y":1160,"wires":[]},{"id":"1724d873.b02078","type":"switch","z":"4bebbdfa.41af64","name":"PIR living","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1010","vt":"str"},{"t":"eq","v":"1020","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":400,"y":1220,"wires":[["9703837e.8a885"],["70807d28.e60d84"]],"info":"for my device\ndp = 102    // countdown"},{"id":"3246c6c8.f9ed9a","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1220,"wires":[["1724d873.b02078"]]},{"id":"bbd1da58.dba9c8","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1220,"wires":[]},{"id":"9703837e.8a885","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1010: inject PIR alarm OFF","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1010","type":"str"}],"x":760,"y":1200,"wires":[["bbd1da58.dba9c8"]]},{"id":"70807d28.e60d84","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1020: inject PIR alarm ON","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"fakeDP","value":"1010","type":"num"},{"name":"value","value":"true","type":"bool"}],"x":770,"y":1240,"wires":[["bbd1da58.dba9c8"]]},{"id":"668d3a7b.f2a8e4","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bfa355aa196ae5975cy6ii","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":460,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"6a21e688.4e0838","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bfbe31dc672657857cxsi0","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":420,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"e20004fc.2c23b8","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"08435372600194fe37c8","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":380,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"3667be8e.cb5972","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bfa1bdeb107d379fbckkwv","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":500,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"e16b895d.8992a8","type":"config","z":"173260fb.d021ff","name":"*global","properties":[{"p":"alldevices","pt":"global","to":"{\"real\":[{\"id\":\"sonoff001\",\"name\":\"OzoneTimer-1\",\"power\":\"AC\",\"capability\":[\"SET\",\"GET\",\"REFRESH\"],\"dps\":[{\"dp\":\"_clock\",\"type\":\"string\"},{\"dp\":\"_count\",\"capability\":\"PUSH\"},{\"dp\":\"_countdown\",\"capability\":\"PUSH\"},{\"dp\":\"_end\",\"capability\":\"WO\"},{\"dp\":\"_go\",\"capability\":\"WO\"},{\"dp\":\"_info\",\"capability\":\"PUSH\"},{\"dp\":\"_led\",\"capability\":\"PUSH\"},{\"dp\":\"_mode\"},{\"dp\":\"_off\",\"capability\":\"WO\"},{\"dp\":\"_OFFtime\",\"type\":\"int\"},{\"dp\":\"_ONtime\",\"type\":\"int\"},{\"dp\":\"_PDM\",\"type\":\"int\"},{\"dp\":\"_pssw\",\"capability\":\"PUSH\"},{\"dp\":\"_refresh\",\"capability\":\"WO\"},{\"dp\":\"_refreshCycle\",\"type\":\"int\"},{\"dp\":\"_send\",\"capability\":\"WO\"},{\"dp\":\"_ssid\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":\"_startTime\",\"type\":\"string\"},{\"dp\":\"_switch\",\"capability\":\"PUSH\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":\"_timezone\",\"type\":\"int\"}]},{\"id\":\"486441603c6105ca6f51\",\"name\":\"AC meter\",\"power\":\"AC\",\"capability\":[\"ALL\",\"SET\",\"GET\",\"REFRESH\",\"SCHEMA\"],\"dps\":[{\"dp\":1,\"name\":\"switch\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":9,\"name\":\"countdown\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":18,\"name\":\"current\",\"capability\":\"PUSH\",\"type\":\"int\",\"comment_01\":\"Values: mA\"},{\"dp\":19,\"name\":\"power\",\"capability\":\"PUSH\",\"typefield\":\"BYTESMALLFLOAT\",\"comment_01\":\"Values: W * 10\"},{\"dp\":20,\"name\":\"voltage\",\"capability\":\"PUSH\",\"typefield\":\"BYTESMALLFLOAT\",\"comment_01\":\"Values: V*10\"},{\"dp\":101,\"name\":\"Energy\",\"capability\":\"PUSH\",\"typefield\":\"INTE2FLOAT\",\"comment_01\":\"Values: KWh *100\"}]},{\"name\":\"Wifi Plug\",\"id\":\"bf94066e80ba060a04vmxi\",\"power\":\"AC\",\"capability\":[\"REFRESH\",\"ALL\"],\"dps\":[{\"dp\":1,\"name\":\"switch\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":9,\"name\":\"countdown\",\"capability\":\"WW\",\"type\":\"int\"},{\"dp\":17,\"name\":\"unknown17\",\"capability\":\"WW\"},{\"dp\":18,\"name\":\"current\",\"capability\":\"GW\",\"type\":\"int\"},{\"dp\":19,\"name\":\"power\",\"capability\":\"GW\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":20,\"name\":\"voltage\",\"capability\":\"GW\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":21,\"name\":\"test flag\",\"capability\":\"WW\"},{\"dp\":22,\"name\":\"voltage coefficient\",\"capability\":\"WW\"},{\"dp\":23,\"name\":\"current coefficient\",\"capability\":\"WW\"},{\"dp\":24,\"name\":\"power coefficient\",\"capability\":\"WW\"},{\"dp\":25,\"name\":\"statistics coefficient\",\"capability\":\"WW\"},{\"dp\":26,\"name\":\"warning\",\"capability\":\"GW\",\"type\":\"string\"},{\"dp\":38,\"name\":\"on reset\",\"capability\":\"WW\",\"type\":\"string\"},{\"dp\":41,\"name\":\"circulate\",\"capability\":\"WW\",\"typefield\":\"STRUCTREPEAT\"},{\"dp\":42,\"name\":\"random\",\"capability\":\"WW\",\"typefield\":\"STRUCTRAND\"},{\"dp\":46,\"name\":\"owercharge\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"}]},{\"name\":\"Water leak sensor 3\",\"id\":\"bf62130d114c70670dtaw8i\",\"power\":\"AC\",\"capability\":[\"ALL\"],\"dps\":[{}]},{\"name\":\"power strip\",\"id\":\"3613666124a1600db127\",\"power\":\"AC\",\"capability\":[\"ALL\"],\"dps\":[{\"dp\":1,\"name\":\"Switch1\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":2,\"name\":\"Switch2\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":3,\"name\":\"Switch3\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":4,\"name\":\"Switch4\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":5,\"name\":\"SwitchUSB\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":9,\"name\":\"countdown1\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":10,\"name\":\"countdown2\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":11,\"name\":\"countdown3\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":12,\"name\":\"countdown4\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":13,\"name\":\"countdownUSB\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"}]},{\"id\":\"bfb073b1b789b5994cro7p\",\"name\":\"Zigbee Gateway\",\"capability\":[\"SET\",\"GET\"],\"power\":\"AC\"},{\"id\":\"bf0b2ef30ffb476aa8ngzw\",\"name\":\"BLE MESH（SIG）Gateway\",\"comment\":\"on test\"},{\"name\":\"siren\",\"id\":\"42027807d8bfc0c5831e\",\"power\":\"UPS\",\"capability\":[\"REFRESH\",\"ALL\"],\"dps\":[{\"dp\":101,\"name\":\"battery\",\"capability\":\"GW\",\"type\":\"enum\"},{\"dp\":102,\"name\":\"type\",\"capability\":\"WW\",\"type\":\"string\"},{\"dp\":103,\"name\":\"duration\",\"capability\":\"WW\",\"type\":\"int\"},{\"dp\":104,\"name\":\"alarm\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"}]},{\"id\":\"bfa355aa196ae5975cy6ii\",\"name\":\"switch module 1\",\"power\":\"AC\",\"capability\":[\"GET\",\"SET\",\"MULTIPLE\"],\"dps\":[{\"dp\":1,\"name\":\"switch\",\"capability\":\"WW\",\"type\":\"boolean\",\"typefield\":\"BOOLEANONOFF\",\"comment_01\":\"true|false  = ON|OFF\",\"comment_02\":\"Toggles when the countdown goes to 0.\"},{\"dp\":101,\"name\":\"on reset\",\"capability\":\"WW\",\"typefield\":\"ENUMONOFFHOLD\",\"comment_01\":\"0|1|2 = OFF|ON|HOLD\",\"comment_02\":\"The initial switch status, after a reset.\"},{\"dp\":102,\"name\":\"countdown\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"0..86500 s  (24H max.)\",\"comment_02\":\"PUSH every (30 * k) s; GET returns last PUSHed value, not the actual count\",\"comment_03\":\"SET(102):0 => the switch does not change\"}]},{\"name\":\"tuya_bridge\",\"id\":\"bf8c4fd0c03067079cplb4\",\"power\":\"AC\",\"dps\":[{\"dp\":1,\"name\":\"relay\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\",\"share\":[{\"test\":[\"tuyastatus[\\\"HAL@home\\\"][\\\"_ACpower\\\"] == true\",\"msg.info.value === \\\"ON\\\"\",\" var now = new Date(); (now.getHours() < 20) \"],\"action\":[{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":\"5000\"},{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":\"@4000+1000\"}]}]},{\"dp\":7,\"name\":\"trigger (reserved)\",\"capability\":\"TRG\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s  (24H max.)\"},{\"dp\":14,\"name\":\"restart status\",\"capability\":\"WW\",\"type\":\"string\",\"comment_01\":\"Values: off|on|memory\",\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_benchmark_step\"}]}]},{\"dp\":15,\"name\":\"light mode\",\"capability\":\"WW\",\"type\":\"string\",\"comment_01\":\"Values: pos|none|relay\"},{\"dp\":16,\"name\":\"backlight\",\"capability\":\"WW\",\"type\":\"boolean\",\"comment_01\":\"Values: true|false \"},{\"dp\":17,\"name\":\"circulate\",\"capability\":\"WW\",\"typefield\":\"STRUCTREPEAT\"},{\"dp\":18,\"name\":\"random\",\"capability\":\"WW\",\"typefield\":\"STRUCTRAND\"},{\"dp\":19,\"name\":\"inching\",\"capability\":\"WW\",\"typefield\":\"STRUCTINCH\"}]},{\"name\":\"watering timer\",\"id\":\"bfa1bdeb107d379fbckkwv\",\"power\":\"AC\",\"dps\":[{\"dp\":1,\"name\":\"relay\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"1ans\",\"value\":\"@msg.info.value\"}]}]},{\"dp\":9,\"name\":\"countdown\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":38,\"name\":\"restart status\",\"capability\":\"WW\",\"type\":\"string\",\"comment_01\":\"Values: off|on|memory\"},{\"dp\":40,\"name\":\"light mode\",\"capability\":\"WW\",\"type\":\"string\",\"comment_01\":\"Values: pos|none|relay\"},{\"dp\":41,\"name\":\"child lock\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":42,\"name\":\"circulate\",\"capability\":\"WW\",\"typefield\":\"STRUCTREPEAT\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"42ans\",\"value\":\"@msg.info.value\"}]}]},{\"dp\":43,\"name\":\"random\",\"capability\":\"WW\",\"typefield\":\"STRUCTRAND\"},{\"dp\":44,\"name\":\"inching\",\"capability\":\"WW\",\"typefield\":\"STRUCTINCH\"},{\"dp\":\"_connected\",\"capability\":\"SKIP\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"111\",\"value\":\"@msg.info.value\"}]}]}]},{\"id\":\"bfa9c64e128b39eddcgwyt\",\"name\":\"watering main\",\"power\":\"AC\",\"_capability\":[\"GET\",\"SET\",\"MULTIPLE\"],\"dps\":[{\"dp\":1,\"name\":\"switch\",\"_capability\":\"WW\",\"type\":\"boolean\",\"typefield\":\"BOOLEANONOFF\",\"comment_01\":\"true|false  = ON|OFF\",\"comment_02\":\"Toggles when the countdown goes to 0.\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"2ans\",\"value\":\"@msg.info.value\"}]}]},{\"dp\":101,\"name\":\"on reset\",\"_capability\":\"WW\",\"typefield\":\"ENUMONOFFHOLD\",\"comment_01\":\"0|1|2 = OFF|ON|HOLD\",\"comment_02\":\"The initial switch status, after a reset.\"},{\"dp\":102,\"name\":\"countdown\",\"_capability\":\"RW\",\"type\":\"int\",\"comment_01\":\"0..86500 s  (24H max.)\",\"comment_02\":\"PUSH every (30 * k) s; GET returns last PUSHed value, not the actual count\",\"comment_03\":\"SET(102):0 => the switch does not change\"},{\"dp\":\"_connected\",\"capability\":\"SKIP\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"112\",\"value\":\"@msg.info.value\"}]}]}]},{\"name\":\"smart camera\",\"id\":\"bfbe31dc672657857cxsi0\",\"power\":\"AC\",\"capability\":[\"SET\",\"GET\",\"MULTIPLE\"],\"dps\":[{\"dp\":103,\"name\":\"upside down\",\"capability\":\"W1\",\"type\":\"boolean\"},{\"dp\":104,\"name\":\"timestamp\",\"capability\":\"W1\",\"type\":\"boolean\"},{\"dp\":106,\"name\":\"sensibilità movimento\",\"capability\":\"W1\",\"typefield\":\"ENUMHIGHGOODLOW\"},{\"dp\":109,\"name\":\"SD status\",\"capability\":\"GW\",\"typefield\":\"SDSPACES\"},{\"dp\":110,\"name\":\"mode\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":111,\"name\":\"start SD format\",\"capability\":\"WO\",\"type\":\"int\"},{\"dp\":117,\"name\":\"SD format progress\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":134,\"name\":\"rilevazione movimento\",\"capability\":\"W1\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":151,\"name\":\"recording\",\"capability\":\"W1\",\"typefield\":\"RECMODE\"}]},{\"name\":\"switch-4CH 2\",\"id\":\"08435372600194fe37c8\",\"power\":\"AC\",\"dps\":[{\"dp\":1,\"name\":\"relay1\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":2,\"name\":\"relay2\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":3,\"name\":\"relay3\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":4,\"name\":\"relay4\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":7,\"name\":\"countdown1\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":8,\"name\":\"countdown2\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":9,\"name\":\"countdown3\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s  (24H max.)\"},{\"dp\":10,\"name\":\"countdown4\",\"capability\":\"WW\",\"type\":\"int\",\"comment_01\":\"Values: 0..86500 s (24H max.)\"},{\"dp\":13,\"name\":\"switch all\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":101,\"name\":\"power-on status\",\"capability\":\"WW\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":102,\"name\":\"mode\",\"capability\":\"WW\",\"type\":\"string\",\"comment_01\":\"Values: 'selflock'|'inching'|'interlock'\"},{\"dp\":103,\"name\":\"momentary time\",\"capability\":\"WW\",\"typefield\":\"BYTESMALLFLOAT\"}]},{\"id\":\"554301602cf4325eae00\",\"name\":\"umidificatore\",\"power\":\"AC\",\"capability\":[\"SET\",\"GET\",\"SCHEMA\",\"MULTIPLE\"],\"dps\":[{\"dp\":1,\"name\":\"spray\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":2,\"name\":\"output\",\"type\":\"string\",\"comment_01\":\"large|small\",\"comment_02\":\"Defined as boolean by Tuya, it works (GET,SET) with two strings.\"},{\"dp\":3,\"name\":\"timer\",\"type\":\"string\",\"comment_01\":\"1|3|6|cancel\",\"comment_02\":\"Requires strings: in 'alldevices' type:string is mandatory. So '3' do not becomes 3.\"},{\"dp\":4,\"name\":\"unknown\"},{\"dp\":5,\"name\":\"led\",\"typefield\":\"BOOLEANONOFF\",\"comment_02\":\"If modified it sends itself and colour.\"},{\"dp\":6,\"name\":\"led mode\",\"type\":\"string\",\"comment_01\":\"colour|colourful1\",\"comment_02\":\"In colourful1 mode, LED changes colour, but GET give 'ff00000000ffff'\"},{\"dp\":8,\"name\":\"colour\",\"typefield\":\"STRUCTCOLOUR\"}]},{\"id\":\"56685573d8bfc05082e6\",\"name\":\"Smart IR 1\",\"power\":\"AC\",\"comment\":\"rare captures from tuya ?\",\"capability\":[\"SET\",\"GET\"],\"dps\":[{\"dp\":1,\"name\":\"unknow\",\"comment\":\"mode? found push 'study_key' and 'send_ir'\",\"capability\":[\"PUSH\"]}]},{\"id\":\"56685573d8bfc0508488\",\"name\":\"Smart IR 2\",\"power\":\"AC\",\"capability\":[\"SET\",\"GET\"],\"comment\":\"rare captures from tuya ?\",\"dps\":[{\"dp\":1,\"name\":\"unknow\",\"comment\":\"mode? found push 'study_key' and 'send_ir'\",\"capability\":[\"PUSH\"]}]},{\"id\":\"56685573d8bfc0508837\",\"name\":\"Smart IR 3\",\"comment-1\":\"rare captures from tuya ?\",\"capability\":[\"SET\",\"GET\"],\"power\":\"AC\",\"dps\":[{\"dp\":1,\"name\":\"unknow\",\"comment\":\"mode? found push 'study_key' and 'send_ir'\",\"capability\":[\"PUSH\"]}]}],\"virtual\":[{\"name\":\"3 Gang-1\",\"cid\":\"804b50fffee0f181\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"power\":\"BAT\",\"capability\":[\"SET\"],\"dps\":[{\"dp\":1,\"name\":\"button1\",\"capability\":\"SKIP\"},{\"dp\":2,\"name\":\"button2\",\"capability\":\"SKIP\"},{\"dp\":3,\"name\":\"button3\",\"capability\":\"SKIP\"},{\"dp\":10,\"name\":\"battery\",\"capability\":\"PUSH\"}]},{\"cid\":\"60a423fffe8e2bef\",\"name\":\"Termosifone 1\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"power\":\"BAT\",\"capability\":[\"SET\"],\"dps\":[{\"dp\":8,\"name\":\"Open windows sensitivity\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":10,\"name\":\"Antifreeze\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":27,\"name\":\"Actual T offset\",\"capability\":\"WO\",\"type\":\"int\",\"comment_01\":\"Values: -6..+6 °C\"},{\"dp\":40,\"name\":\"Lock\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":101,\"name\":\"Device\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":102,\"name\":\"Temperature\",\"capability\":\"PUSH\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":103,\"name\":\"Target T\",\"capability\":\"WO\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":105,\"name\":\"unknown01\",\"capability\":\"PUSH\",\"comment_01\":\"Values: 0?\"},{\"dp\":106,\"name\":\"Away mode\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":108,\"name\":\"Day program\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":109,\"name\":\"unknown02\",\"capability\":\"WO\",\"comment_01\":\"Values: unknown\"},{\"dp\":110,\"name\":\"Hist. day target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":112,\"name\":\"Hist. week target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":113,\"name\":\"Hist. month target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":114,\"name\":\"Hist. year target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":115,\"name\":\"Hist. day real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":116,\"name\":\"Hist. week real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":117,\"name\":\"Hist. month real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":118,\"name\":\"Hist. year real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":119,\"name\":\"Hist. day power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":120,\"name\":\"Hist. week power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":121,\"name\":\"Hist. month power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":122,\"name\":\"Hist. year power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":123,\"name\":\"Monday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":124,\"name\":\"Tuesday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":125,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":126,\"name\":\"Thursday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":127,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":128,\"name\":\"Saturday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":129,\"name\":\"Sunday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":130,\"name\":\"Water scale proof\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"}]},{\"cid\":\"60a423fffeb5b90d\",\"name\":\"Termosifone 2\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"power\":\"BAT\",\"capability\":[\"SET\"],\"dps\":[{\"dp\":8,\"name\":\"Open windows sensitivity\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":10,\"name\":\"Antifreeze\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":27,\"name\":\"Actual T offset\",\"capability\":\"WO\",\"type\":\"int\",\"comment_01\":\"Values: -6..+6 °C\"},{\"dp\":40,\"name\":\"Lock\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":101,\"name\":\"Device\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":102,\"name\":\"Temperature\",\"capability\":\"PUSH\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":103,\"name\":\"Target T\",\"capability\":\"WO\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":105,\"name\":\"unknown01\",\"capability\":\"PUSH\",\"comment_01\":\"Values: 0?\"},{\"dp\":106,\"name\":\"Away mode\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":108,\"name\":\"Day program\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":109,\"name\":\"unknown02\",\"capability\":\"WO\",\"comment_01\":\"Values: unknown\"},{\"dp\":110,\"name\":\"Hist. day target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":112,\"name\":\"Hist. week target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":113,\"name\":\"Hist. month target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":114,\"name\":\"Hist. year target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":115,\"name\":\"Hist. day real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":116,\"name\":\"Hist. week real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":117,\"name\":\"Hist. month real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":118,\"name\":\"Hist. year real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":119,\"name\":\"Hist. day power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":120,\"name\":\"Hist. week power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":121,\"name\":\"Hist. month power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":122,\"name\":\"Hist. year power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":123,\"name\":\"Monday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":124,\"name\":\"Tuesday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":125,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":126,\"name\":\"Thursday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":127,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":128,\"name\":\"Saturday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":129,\"name\":\"Sunday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":130,\"name\":\"Water scale proof\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"}]},{\"name\":\"Termosifone 3\",\"cid\":\"bc33acfffe526223\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"power\":\"BAT\",\"capability\":[\"SET\"],\"dps\":[{\"dp\":8,\"name\":\"Open windows sensitivity\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":10,\"name\":\"Antifreeze\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":27,\"name\":\"Actual T offset\",\"capability\":\"WO\",\"type\":\"int\",\"comment_01\":\"Values: -6..+6 °C\"},{\"dp\":40,\"name\":\"Lock\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":101,\"name\":\"Device\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":102,\"name\":\"Temperature\",\"capability\":\"PUSH\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":103,\"name\":\"Target T\",\"capability\":\"WO\",\"typefield\":\"BYTESMALLFLOAT\"},{\"dp\":105,\"name\":\"unknown01\",\"capability\":\"PUSH\",\"comment_01\":\"Values: 0?\"},{\"dp\":106,\"name\":\"Away mode\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":108,\"name\":\"Day program\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"},{\"dp\":109,\"name\":\"unknown02\",\"capability\":\"WO\",\"comment_01\":\"Values: unknown\"},{\"dp\":110,\"name\":\"Hist. day target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":112,\"name\":\"Hist. week target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":113,\"name\":\"Hist. month target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":114,\"name\":\"Hist. year target T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":115,\"name\":\"Hist. day real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":116,\"name\":\"Hist. week real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":117,\"name\":\"Hist. month real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":118,\"name\":\"Hist. year real T\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":119,\"name\":\"Hist. day power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":120,\"name\":\"Hist. week power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":121,\"name\":\"Hist. month power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":122,\"name\":\"Hist. year power\",\"capability\":\"PUSH\",\"typefield\":\"ARRAY8INT\"},{\"dp\":123,\"name\":\"Monday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":124,\"name\":\"Tuesday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":125,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":126,\"name\":\"Thursday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":127,\"name\":\"Friday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":128,\"name\":\"Saturday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":129,\"name\":\"Sunday target T\",\"capability\":\"PUSH\",\"typefield\":\"STRUCTARGETTEMP\"},{\"dp\":130,\"name\":\"Water scale proof\",\"capability\":\"WO\",\"typefield\":\"BOOLEANONOFF\"}]},{\"name\":\"Temperature 1\",\"cid\":\"00158d00056a1c35\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":101,\"name\":\"humidity\",\"capability\":\"PUSH\"},{\"dp\":103,\"name\":\"temperature\",\"capability\":\"PUSH\"}]},{\"name\":\"Temperature 2\",\"cid\":\"00158d00056a1c45\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":101,\"name\":\"humidity\",\"capability\":\"PUSH\"},{\"dp\":103,\"name\":\"temperature\",\"capability\":\"PUSH\"}]},{\"name\":\"Temperature 3\",\"cid\":\"00158d00056e5022\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":103,\"name\":\"Temperatura\"},{\"dp\":101,\"name\":\"Umidità\"}]},{\"name\":\"esterna\",\"cid\":\"00158d00056a19ad\",\"gateway\":\"bfb073b1b789b5994cro7p\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":101,\"name\":\"humidity\",\"capability\":\"PUSH\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"202\"}]}]},{\"dp\":103,\"name\":\"temperature\",\"capability\":\"PUSH\",\"share\":[{\"action\":[{\"device\":\"watering_sys\",\"property\":\"201\"}]}]}]},{\"name\":\"schermo pc\",\"cid\":\"\",\"gateway\":\"56685573d8bfc0508488\",\"capability\":[\"NONE\"],\"dps\":[]}],\"fake\":[{\"id\":\"_system\",\"name\":\"HAL@home\",\"power\":\"BAT\",\"capability\":[\"SET\",\"GET\",\"SCHEMA\"],\"dps\":[{\"dp\":\"_doSCHEMA\",\"type\":\"string\"},{\"dp\":\"_doUPDATE\"},{\"dp\":\"_ACpower\",\"capability\":\"RO\",\"type\":\"boolean\"},{\"dp\":\"_ACunconnected\",\"capability\":\"RO\"},{\"dp\":\"_beep\",\"capability\":\"WO\"},{\"dp\":\"_benchmark\"},{\"dp\":\"_benchmark_end\"},{\"dp\":\"_benchmark_step\",\"capability\":\"TRG\"},{\"dp\":\"_DBase\",\"capability\":\"RO\",\"type\":\"boolean\"},{\"dp\":\"_doBenchmark\"},{\"dp\":\"_doTrigger\",\"capability\":\"WO\",\"type\":\"int\"},{\"dp\":\"_LANnet\",\"capability\":\"RO\",\"type\":\"boolean\"},{\"dp\":\"_laststart\",\"capability\":\"RO\",\"type\":\"string\"},{\"dp\":\"_name\",\"capability\":\"RO\",\"type\":\"string\"},{\"dp\":\"_play\",\"capability\":\"WO\",\"type\":\"see note\"},{\"dp\":\"_proxy\"},{\"dp\":\"_sqlBDlocal\",\"type\":\"string\"},{\"dp\":\"_sqlDBandroid\",\"type\":\"string\"},{\"dp\":\"_timerList\",\"capability\":\"RO\"},{\"dp\":\"_timerOFF\",\"capability\":\"WO\",\"type\":\"string\"},{\"dp\":\"_timerON\",\"capability\":\"WO\"},{\"dp\":\"_toDebug\",\"capability\":\"WO\"},{\"dp\":\"_toFastIN\",\"capability\":\"WO\"},{\"dp\":\"_toLogging\",\"capability\":\"WO\"},{\"dp\":\"_toLowIN\",\"capability\":\"WO\"},{\"dp\":\"_toShare\",\"capability\":\"WO\"},{\"dp\":\"_toStdCmd\",\"capability\":\"WO\"},{\"dp\":\"_toWarn\",\"capability\":\"WO\",\"type\":\"string\"},{\"dp\":\"_trgPing\"},{\"dp\":\"_tuyastatus\",\"capability\":\"WO\"},{\"dp\":\"_WiFinet\",\"capability\":\"RO\"},{\"dp\":\"_WiFiunconnected\",\"capability\":\"RO\"},{\"dp\":\"_beep_loop\",\"comment\":\"Test: timer uses a 'command'\",\"capability\":\"SKIP\",\"share\":[{\"test\":[\"msg.info.value.count > 0\"],\"action\":[{\"device\":\"_system\",\"property\":\"_beep\",\"value\":1},{\"device\":\"_system\",\"property\":\"_timerON\",\"value\":\"@ _xy = {timeout:msg.info.value.timeout, alarmPayload:{device:'_system', property:'_beep_loop',value: {count:(msg.info.value.count -1), timeout: msg.info.value.timeout}}}; _xy \"}]}]},{\"dp\":\"_beep_loop2\",\"comment\":\"Test: timer uses a 'share'\",\"capability\":\"SKIP\",\"share\":[{\"test\":[\"msg.info.value.count > 0\"],\"action\":[{\"device\":\"_system\",\"property\":\"_beep\",\"value\":1},{\"device\":\"_system\",\"property\":\"_timerON\",\"value\":\"@ _xy = {timeout:msg.info.value.timeout, alarmPayload:{share:[{action:[{device:'_system', property:'_beep_loop',value: {count:(msg.info.value.count -1), timeout: msg.info.value.timeout} }] }]}}; _xy \"}]}]},{\"dp\":\"_zeroLog\",\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_benchmark_step\"}]}]},{\"dp\":\"_zeroTask\",\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_benchmark_step\"}]}]}]},{\"name\":\"PM detector\",\"id\":\"_PM1_USB\",\"power\":\"AC\",\"capability\":[\"SET\",\"GET\",\"REFRESH\"],\"dps\":[{\"dp\":\"_refresh\",\"name\":\"refresh\",\"capability\":\"WO\"},{\"dp\":\"_refreshCycle\",\"name\":\"refresh cycle\",\"type\":\"int\"},{\"dp\":1,\"name\":\"sendtime\",\"type\":\"int\"},{\"dp\":2,\"name\":\"storetime\",\"type\":\"int\"},{\"dp\":3,\"name\":\"set clock\",\"type\":\"string\"},{\"dp\":4,\"name\":\"dump data\",\"capability\":\"WO\"},{\"dp\":5,\"name\":\"startRT\",\"typefield\":\"ENUMONOFFHOLD\"},{\"dp\":6,\"name\":\"memory clear\",\"capability\":\"WO\"},{\"dp\":80,\"name\":\"WritePoints\",\"capability\":\"RO\",\"type\":\"int\"},{\"dp\":81,\"name\":\"ReadPoint\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":82,\"name\":\"SendIternalFlag\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":200,\"name\":\"cpm1_0\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":201,\"name\":\"cpm2_5\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":202,\"name\":\"cpm10\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":203,\"name\":\"apm1_0\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":204,\"name\":\"apm2_5\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":205,\"name\":\"apm10\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":206,\"name\":\"aqi\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":207,\"name\":\"Temperature\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":208,\"name\":\"RH\",\"capability\":\"PUSH\",\"type\":\"int\"},{\"dp\":300,\"name\":\"Hist. Day CPM1_0\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":301,\"name\":\"Hist. Day CPM2_5\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":302,\"name\":\"Hist. Day CPM10\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":303,\"name\":\"Hist. Day APM1_0\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":304,\"name\":\"Hist. Day APM2_5\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":305,\"name\":\"Hist. Day APM10\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":306,\"name\":\"Hist. Day AQI\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":307,\"name\":\"Hist. Day  Temp\",\"capability\":\"PUSH\",\"type\":\"string\"},{\"dp\":308,\"name\":\"Hist. Day RH\",\"capability\":\"PUSH\",\"type\":\"string\"}]},{\"id\":\"317080408caab521a5d3\",\"name\":\"smoke detector\",\"power\":\"BAT\",\"capability\":[\"SET\"],\"dps\":[{\"dp\":1800,\"name\":\"alarm\",\"capability\":\"PUSH\",\"type\":\"string\",\"comment_01\":\"Values: 'ON'|'OFF'\"},{\"dp\":1820,\"name\":\"battery\",\"capability\":\"PUSH\",\"type\":\"string\",\"comment_01\":\"Values: 'OK'|'LOW'\"},{\"dp\":1840,\"name\":\"silence\",\"capability\":\"WO\",\"type\":\"string\",\"comment_01\":\"Values:  'ON'|'OFF'\"}]},{\"name\":\"terrace irrigation\",\"id\":\"watering_sys\",\"power\":\"AC\",\"capability\":[\"ALL\"],\"dps\":[{\"dp\":1,\"name\":\"timer\",\"type\":\"string\",\"comment_01\":\"Values: ON|OFF\"},{\"dp\":\"1ans\",\"name\":\"share relay\",\"capability\":\"PUSH\",\"type\":\"string\",\"comment_01\":\"Values: see dp 1\"},{\"dp\":2,\"name\":\"switch\",\"type\":\"string\",\"comment_01\":\"Values: ON|OFF\"},{\"dp\":\"2ans\",\"name\":\"share switch\",\"capability\":\"PUSH\",\"type\":\"string\",\"comment_01\":\"Values: see dp 2\"},{\"dp\":3,\"name\":\"toggle timer\",\"capability\":\"WO\",\"comment_01\":\"Values: any\"},{\"dp\":4,\"name\":\"adjust water\",\"type\":\"number\",\"comment_01\":\"Values: 0...100 (%)\"},{\"dp\":5,\"name\":\"waterweek\",\"type\":\"int\",\"comment_01\":\"Values: 0.... \"},{\"dp\":6,\"name\":\"reset\",\"capability\":\"WO\",\"comment_01\":\"Values: any\"},{\"dp\":7,\"name\":\"store\",\"capability\":\"WO\",\"comment_01\":\"Values: any\"},{\"dp\":8,\"name\":\"restore\",\"capability\":\"WO\",\"comment_01\":\"Values: any\"},{\"dp\":42,\"name\":\"circulate\",\"type\":\"binary\",\"comment_01\":\"Values: decoded: \\tarray of {active: true|false, day:SMTWTFS|DLMMGVS, start HH:MM, end: HH:MM, on: HH:MM, off: HH:MM}\"},{\"dp\":\"42ans\",\"name\":\"timer circulate\",\"capability\":\"PUSH\",\"type\":\"binary\",\"comment_01\":\"Values: see dp 42\"},{\"dp\":111,\"name\":\"timer connected\",\"capability\":\"PUSH\",\"type\":\"boolean\",\"comment_01\":\"Values: true|false \"},{\"dp\":112,\"name\":\"main connected\",\"capability\":\"PUSH\",\"type\":\"boolean\",\"comment_01\":\"Values: true|false\"},{\"dp\":201,\"name\":\"Temp\",\"capability\":\"PUSH\",\"type\":\"int\",\"comment_01\":\"Values: -20... +50 °C\"},{\"dp\":202,\"name\":\"RH\",\"capability\":\"PUSH\",\"type\":\"int\",\"comment_01\":\"Values: 0..100 %\"}]},{\"id\":\"733710408caab5e79887\",\"name\":\"Sensore di movimento\",\"comment\":\"WiFi battery sensor,  mirror device\",\"power\":\"BAT\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":1010,\"name\":\"Alarm\",\"typefield\":\"BOOLEANONOFF\",\"capability\":\"TRG\"}]},{\"id\":\"04208127d8bfc0dac0e5\",\"name\":\"Sensore porta\",\"comment\":\"WiFi battery sensor, mirror device\",\"power\":\"BAT\",\"capability\":[\"NONE\"],\"dps\":[{\"dp\":1030,\"name\":\"status\",\"capability\":\"TRG\",\"typefield\":\"BOOLEANOPENCLOSE\"}]}],\"__comment\":\"-- do not change code from here! --\",\"__pseudodp\":\"['_T', '_CONNECTED','_REFRESHCYCLE', '_REFRESH','_STANDBY','_RETRYTIMEOUT','_FINDTIMEOUT','MULTIPLE','SCHEMA ','LIST']\",\"__getODev\":\"function(id, limit = null){\\n   function _checkobj(list, dx) {\\n     var o;\\n    o = list.find(device => device.name === dx);\\n   if (o === undefined)\\n      o = list.find(device => device.id == dx);\\n   if (o === undefined)\\n      o = list.find(device => device.cid == dx);\\n   return (o);\\n   }\\n    function _okcheck(lim, branch) {\\n      return ((lim === null) || (lim == branch))\\n    }\\n   var odev;\\n   if (id === undefined)\\n      return (odev);\\n   if (_okcheck(limit, 'real'))\\n      odev = _checkobj(this.real, id);\\n   if ((odev == undefined) && _okcheck(limit, 'virtual'))\\n      odev = _checkobj(this.virtual, id);\\n   if ((odev == undefined) && _okcheck(limit, 'fake'))\\n      odev = _checkobj(this.fake, id);\\n   return (odev);\\n}\",\"__getDevName\":\"function(odev) {  if (odev === undefined) return undefined; return (odev.name === undefined ? (odev.cid == undefined ? odev.id : odev.cid) : odev.name);}\",\"__getConnectName\":\"function(odev) {   if (odev === undefined) return undefined;  if (odev.cid === undefined) return(odev.name === undefined ? odev.id : odev.name);   var o_gat = this.real.find(device => device.id === odev.gateway);   if (o_gat === undefined) return o_gat;   return (o_gat.name === undefined ? o_gat.id : o_gat.name);}\",\"__getODps\":\"function(odev, property) { if (odev === undefined) return undefined; if (Array.isArray(odev.dps)) {  var p = odev.dps.find(data => ((data.name === property) || (data.dp == property)));   return (p);}    return (undefined);}\",\"__getDpsName\":\"function(odev, property) {\\n if (Array.isArray(odev.dps)) {\\n  var p = odev.dps.find(data => ((data.name === property) || (data.dp == property))); \\n if(p !== undefined)\\n return (p.name == undefined ? p.dp : p.name);}  \\n  return (property);}\",\"__normalize\":\"function (xmsg, Do, Po, pseudo =[]){ if(!Do) { xmsg['error'] = \\\"ERROR [normalize]: not found the device '\\\"+xmsg.payload.device+\\\"' in global.alldevices.\\\"; return (xmsg); } xmsg.payload.device = (Do.name) ? Do.name: (Do.cid || Do.id); xmsg['to'] =  Do.cid || Do.id; if(! this.fake.includes(Do)) xmsg['toDev'] = Do.cid ? Do.gateway: Do.id; xmsg['infodp'] = 'schema';if (xmsg.payload.property) { if ((Po === undefined) || (Po.dp === undefined)) { xmsg.infodp  = xmsg.payload.property; if (! pseudo.includes(xmsg.payload.property.toUpperCase())) xmsg['warning'] =\\\"WARNING [normalize]: In alldevices missed the '\\\"+xmsg.payload.device+\\\"':dps[\\\" + xmsg.payload.property + \\\"] definition.\\\"; } else { xmsg.infodp =  Po.dp.toString(); xmsg.payload.property =  Po.name || Po.dp; }} return (xmsg); } \",\"__encodeValue\":\"function(value,dpObj={},encFunctions={}){if((value===undefined)||(dpObj===undefined)) return(value);if((value==='')||(value===null)||(value==='NULL')||(value==='null'))return(null);if((!dpObj.typefield)||(dpObj.typefield==='NONE')||(dpObj.typefield==='NULL')){try{switch(dpObj.type){case'boolean':return((value==true)||(value==='true'));case'int':case'enum':return(Number(value));case'string':return(value.toString());default:if(typeof(value)==='boolean')return(value);if(value==='false')return(false);if(value==='true')return(true);return((parseInt(value) == value)?parseInt(value):value);}}catch(error){return({error:'ERROR [encodeValue]: In conversion from value('+value+') to type '+dpObj.type+': '+error});}}else{if(!encFunctions[dpObj.typefield])return({error:'ERROR [encodeValue]: Not found the encode.'+dpObj.typefield+' function().'});let nval;try{nval=(encFunctions[dpObj.typefield](value));}catch(error){return({error:'ERROR [encodeValue]: In encode.'+dpObj.typefield+' function, on value ('+value+'): '+error});}return(nval);}}\"}","tot":"json"},{"p":"remotemap","pt":"global","to":"{\"itself\":\"DEVPC\",\"local\":{\"DEVPC\":\"http://localhost:1984\",\"TESTPC\":\"http://localhost:1985\",\"ANDROID\":\"http://localhost:1880\"},\"remote\":{\"DEVPC\":\"http://192.168.1.2:1984\",\"TESTPC\":\"http://192.168.1.2:1985\",\"ANDROID\":\"http://192.168.1.19:1880\"}}","tot":"json"},{"p":"beep64","pt":"global","to":"UklGRrguAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YZQuAAABAP8PAyD8LwNA/k8BVAFE/TMDJP4TAQQA9P/jAdT/wwG0/6cBuADI/9cB6P/3AQgBGP0nBDj8RwNY/0sAPAAsABwADAD8AOwA3ADM/7sDrPyvA8D+zwLh/vACAf0QBCH8MARB/FADU/5CATMBI/0SBAP88gPj/tICw/6yAqn+uAHJANkA6QD5AQn+GAIp/jgCSf9YAEsBO/8qABsACwD7Aev+2gLL/roBqwGx/sEB0gDi//ECAv8RACIAMgBCAFIAUgFC/jECIv8R/wEC8v7hAtL+wQKy/akEuvzJA9r+6QH6AAoAGv8pATr/SQJa/kkBOv8pAhr+CQL6/ekD2v/JALn/qAGz/8IC0/7iAfP+AgMT/SIDM/5CAFMBUQBB/jAEIfsQBQH88ALhANH/wAKx/aoCuwDL/9oC6/76AQsAG/8qATsASwBZ/0gCOf0oAxn+CAH5/+gC2P3HBLj8pwK0/8MB1ADk//MABAAUAST/MwFE/lMCUP8/ATAAIP8PAQD/7wHgANAAwACwAKwAvADMANwB7P77Agz+GwIs/jsCTP5XAkj9NwMo/hcCCP72Aef/1gHHALf/pgG1AMX+1APl/fQCBQAV/yQBNf9EAVX/TgI//S4DH/0OA//97gPf/M4Ev/6uAK0Bvf7MAt3/7AH9/gwCHf8sAD0BTf5WAkf+NgIm/xUABgD2AOYA1gHG/rUCpv+1AMYB1v7lAvb+BQIW/yX/NQJG/VUETv09AS4AHv8NA/787QTe/c0BvgGu/q0Cvv/NAN4A7gD+AA4AHgAuAT7+TQJW/kQBNQEl/hQCBf70AeUA1QHF/rQCp/62Asf/1gHn/vYCB/4WAyf9NgJH/lYCTf88AS3+HAIN/vwC7f/cAM0AvQCt/64Cv/7OAt/+7gH/AA//HgIv/j8BUP9TAkT9MwQk/RMABAL0/eMD1P/D/7MCqP63AcgA2P/nAfgACAAY/ycCOP1HA1j+SwE8/ysCHP0LBPz86wPc/ssBvAGs/q8CwP7PAuD/7wAAABAAIQEx/0D/UAJT/kIDM/0iAhP9AgTz/OIE0/3CAbMAqf+4Asn+2ALp/vgACQIZ/igCOf9I/lgES/w6BCv8GgQL/foB6wHb/soCu/6qAbEAwQDRAeH98AMC/hEBIgEy/UEEUvtRBUL8MQMi/hEAAgHy/+EC0v3BA7L9qQO6/ckD2v3pA/r9CQMa/SkDOv1JA1r9SQM6/SkDGv4JAfr/6QHa/8kCuv2pA7L9wQPT/eID8/0CAhP/IgAzAUP/UgBRAEEAMQAhABEAAf/wAuH+0ALB/bADq/66AcsB2/3qBPv8CgMb/yr/OgJL/lgBSQA5ACkAGf8IAvn+6AHZAMn/uAKp/bMDxP7TAeQA9P8DABQCJPwzBUT8UwNQ/T8BMAEg/g8EAPrvBuD7zwPAALD+qwK8/8v/2wPs/fsDDP0bAiz/OwBMAlj9RwM4/ScDGP0HA/j95wPY/sYAtwKn/bQDxf7UAeX/9AEFABX/JAI1/UQDVf1OAz/+LgEfAA/+/gPv/d4Dz/6+AK8Brf+8Ac3/3ADtAP0BDf8cAS3+PAJN/1YBR/82ACcBF/8GAvf95QLW/8UBtgCm/7UBxv7VA+b99QMG/RUDJv01A0b+VQFOAD7/LQIe/g0B/gDu/90Bzv+9Aa7/rQG+/80A3gDuAv79DQMe/S0BPgJO/VUCRv81ACYBFgAF/vQC5f7UA8X9tASn+rYFx/7WAOcC9/wGBBf9JgM3/kYBV/9MAD0BLf8cAQ3//ADtAN0AzQC9AK0ArwC/AM8A3wDvAP8ADwAfAC8APwBPAFX/RAI0/iMCFP4DAvT94wTU+8MFtP2nAbgAyP7XA+j+9wEI/xcBKP83AUj/VwBMATz/KwAcAQz/+wHs/9sBzP+7Aaz/rwHAAND/3wHw//8AEAEg/y8AQAFQ/1IAQwAzASP+EgMD/fIC4/7SA8P9sgOp/bgByQHZ/+gB+f8IARn/KAA5AEkBWf9KATv+KgEbAQv/+gDrANv/ygK7/6oAsQDBANH/4ALx/gABEQAh/zABQv9RAVL/QQEy/yEBEv8BAfIA4v/RAcL/sQGqALr/yQHa/+kB+v8JARr/KQE6AEr+WQNK/jkAKgEa/wkA+gLq/dkDyv65AKoCsv3BA9L94QLy/wEAEwEj/jIBQwBT/1ADQfwwAyH/EP8AAvH+4ALR/sACsf2qA7v/yv/aAuv9+gILARv9KgM7/koBWQBJ/zgBKf8YAgn++ADpAtn9yAO5/qgAswLD/tIB4wD0/wMBFP8jAjT9QwNU/U8CQP8vACABEP7/A/D93wHQAMD/rwOs/bsCzP7bAewB/P8LABwBLP47Akz/VwBIATj+JwEYAAgA+ADoANj/xwG4AKgAtP/EAdX/5AH1AAX/FAElADX/RAFVAE//PgMv/B4ED/3+Au//3gDPAb8Ar/+sAb3/zAHd/+wB/f8MAR3/LAE9/0wBV/9GATf/JgEX/wYB9//mAdf/xgC3Aab/tQHG/9UB5v71Awb8FQQm/TUCRv9VAE4BPv4tAx79DQP+/e0D3v3NA77+rQCuAb7/zQDeAu78/QUO+x0FLvs9BE7+VQBGATb/JQEW/wUA9gHm/9UCxf20Aqf/tgHH/9YC5/z2BQf8FgInADf+RgNX/UwDPf0sAh3/DAH9/+wB3f7MAr3/rAGv/74Bz/7eA+/8/gQP/R4DL/0+Ak//VABFATX+JAIV/wQB9P7jAtT/wwC0Aaj+twLI/9cB6P73Agj/FwAoATj/RwBYAUz/OwAsARz/CwH8/+sB3P7LA7z+qwCwAcD/zwHgAPD+/wMQ/h8BMABA/08BVP9DATQAJP8SAQP/8gHj/9IBw/+yAakAuf/IAdn/6AH5/wgBGf4oAzn8SARZ/UoBOwEr/hoCC/76Auv/2gDLALsAq/+wA8H80ATh/PADAf8Q/yACMf5AAVEAU/9BAjL+IQES/wEA8gLi/tEBwv+xAKoBuv/JAdr/6QD6AAoBGv4pAzr8SQNa/0kAOgAqABr/CQL6/ukC2v7JAboAqgCyAMIA0gDiAPIAAgAS/yECMv5BA1P8UANB/jABIQER/gAC8f7gAtH+wAKx/6oAuwHL/doE6/36Agv/GgArATv+SgJZ/kgCOf8oARn/CAD5AOkA2QDJArn9qAKz/8IA0wHj//IAAwET/iICNP9DAFQAUP8/AjD+HwIQ/v8C8P7fAtD9vwSw/asCvP7LAdwA7AH8/gsDHPwrAzwATP5XA0j8NwMo/xcACAD4AOgA2ADIALj/pwO0/cMC1P7jAvT+BAMV/SQCNf5EAlX+TgM//S4CH/8OAP8A7wHf/s4Dv/yuA63/vADNAd3+7AH9AQ3+HAMt/TwCTf5WAkf+NgMn/BYEB/32Auf+1gLH/rYCp/60AsX+1ALm/vUBBgAWACYANv9FAlb+TQI+/i0BHgAOAP4A7gDeAM4AvgCuAK4AvgHO/t0C7v/9AA4BHv4tAj7/TQBWAUb/NQAmARb+BQP2/eUD1v3FA7b+pQG2/8YB1//mAvf9BgMX/SYDN/1GAlf/TAE9AC3/HAANAf3/7AHdAM3/vAKt/q4AvwLP/t4C7//+AA//HgIv/j4DT/1UAUUANQAlARX/BAD1AeX+1ALFALT+pwO4/McE2P3nA/j9BwMY/CcEOP1HAlgATP47Aiz/G/8LA/z86wXc+ssGvPurBLD9vwLQ/98A8AEA/g8CIAAw/j8CUP5TAUQBNP4jAhT+AwH0AOQA0wDDAbP9qAW5+sgG2fvoBPn8CAMZ/igBOQBJ/1gASwI7/CoGG/kKBfv+6gDbAcv/ugGr/7AAwQHR/uAD8f0AAhEAIf4wA0H9UAJTAEP/MgEj/xIAAgLy/OEF0vvBBLL+qQC6AMoB2v/pAfr/CQAaASr/OQFK/lkDSvw5BCr+GQAKAfr/6f/ZA8r9uQOq/bEDwv3RA+L+8QECABIAIgAy/0ECUv1RBEL8MQIhABH+AAPx/uAB0f/AAbH/qgG7AMv/2gHrAPv/CgEb/yoBOwBLAFn/SAE5/ygCGf4IAfkA6f/YAsn+uAGpALMAwwDTAOP/8gID/hICI/4yAUMAUwBRAEAAMAAgABAAAADwAeD+zwLA/q8CrP67Asz+2wHsAfz9CwQc/CsDPP5LAlj+RwI4/icBGAEI/vcC6P/XAMgAuACoAbT/wwHU/uMC9P4DBBT7IwQ0/UQCVQBP/z4ALwEf/w4B///uAN8Bz/++Aa//rAG9/8wA3QLt/fwDDf0cAi3/PAFN/1YARwI3/SYCFwAH/vYE5/zWAscAtwCn/7QDxfrUCOX59AYF/BQBJgE2/0UAVgFO/j0DLv0dAQ4A/gDuAN4Bzv69Aa4Brv69As7/3QDuAf7/DQAeAS7/PQBOAlb9RQQ2/CUCFgAG//UC5v7VAcYAtv+lArb9xQTW/OUD9/8G/xYCJ/42AUcBV/5MAj3+LAId/gwD/f3sAt3/zAC9Aq39rgO//c4D3/3uA//9DgIfAC/+PgNP/FQDRQA1/iQDFf0EAvX/5AHV/8QBtf+mAbcAxwDY/+cB+AAIABj/JwE4/0cCWP1LAzz9KwMc/gsA/AHsANz/ywG8/6sAsAHA/88A4ADwAQD/DwAgADAAQABQAlT8QwM0/yP/EwIE/vMB5ADU/8MBtP+nArn9yALZAOn/+AEJABn+KAM5/kgAWQJL/ToDK/4aAQv/+gHrANv/ygK7/KoEsf7AAdEA4f7wAwH9EAMh/jAAQQFR/1ICQ/0yAiP+EgID//IB4//SAMIAsgCqAbr+yQLa/ukC+v8JABoAKv85Akr+WQJK/jkCKv4ZAgr++QLq/tkCyv65Aqr+sQLC/tEC4v/xAAIBEv8hADIAQgFS/1ECQv0xAiL/EQEC//EC4f3QA8H9sAKr/7oBy//aAOsB+/4KAhv/KgE7/0oBWf5IAzn9KAMZ/QgC+f/oANkAyQG5/qgCs/7CAdMB4/3yBAP9EgEjADMAQ/9SA1H8QAQx/CAEEfz/BPD93wLQ/7//rwKs/rsCzP7bAewA/P8LAhz+KwI8/ksBWP9HAjj/JwAY/wcB+P/nAtj9xwO4/acCtP/DAdT+4wP0/AMEFP4jADQBRP5TA1D9PwMv/R4CDwD//+4B3//OAb8Ar/+sAb3/zAHdAO3//AIN/hwALQI9/UwDV/9G/zYCJ/4WAQf/9gLn/tYCx/62Aaf/tALF/dQD5f30AwX9FAIl/zQARQFV/k0CPv4tAx78DQT+/e0C3v/NAL4Brv+tAb7+zQLe/+0B/v8NAB4ALgA+AE4AVgBGADYAJv8VAgb99QTm/NUDxv+1/6UCtv7FAtb+5QL2/gUCFv4lATcARwBXAE3/PAEtAB0ADQD9/+wC3f7MAb0ArQCv/74Dz/zeBO/8/gMP/x4ALwE//k4CVf9EADUAJQEV/gQC9f/kANUBxf60Aqf/tgDHANcA5wD3AAcAGAAoADgASP9XAkz+OwIs/RsDDP37A+z92wPM/bsCrP+vAMAB0P/fAPABAP8PASD/LwBAAVD/UwFE/zMBJP8TAQT/8wDkAdT/wwG0/6cAuAHI/tcD6P74AQkAGf8oATn/SAJZ/koBO/8qARv/CgH7/+oB2//KArv9qgOx/sAB0QDh//ACAf4QASEAMf9AAlH+UgJD/TIEI/wSBAP98gHjAdP+wgKz/6j/uALK/tkC6v75AQr/GQAqAToASv5ZA0r9OQIqABr+CQT6/OkD2v7JAboAqgCyAMIA0gDiAPL/AQIS/SEEMv1BAlL+UQFCADIAIgES/wH/8QLi/tEBwgGy/aoDu/3KAtsA6/76Awv9GgIrADv+SgJZAEn/OAEp/xgACQH5/+gB2f/IAbn/qACzAsP90gPj/fICAwATACP/MgFD/1IBUQBBADH/IAER/wAC8f3gA9D9vwOw/qsBvP/LAdz/6wL8/gsBHP8rATz/SwJY/UcDOP4nABgBCP/3Aej/1wHI/rcDqP6zAcT+0wPk/fMDBP4TACQBNP9DAVT/TwBAATD+HwQQ+/8E7/3eAs8Av/6uA638vATN/tz/7AP9/AwEHf4s/zwDTfxWBEf+Nv8mAxf8BgP3AOf91gTH/LYDp/+0/8QC1f3kBPX8BAMV/iQANQJF/VQDT/4+AS8AH/8NAv7+7QHeAM4Avv+tAa4Avv/NAt797QL+AA7+HQMu/T0DTv1VA0b9NQImABb/BQL2/eUD1v7FArb+pQG2AMYA1gDmAPYABgAWACb/NQJG/lUCTv88AC0AHQANAP0B7f/cAc3/vACtAK8Bv//OAd//7gD/AQ//HgEv/z4BT/9UAkX9NAMl/hQBBQD1/+QC1f7EArX+pgG3AMf/1gHn//YBB/8WASf+NgJH/1cBTP87ACwBHP8LAfz/6wHc/8sBvP6rA7D9vwTQ+98E8P3/AxD+HwEw/z8BUP9TAkT9MwMk/RMDBP7zAeT/0wHEALQAqP+3AcgA2ADoAPj/BwEYACkAOf9IAln9SgM7/ioBGwAL//oB6//aAcv/ugGr/7ACwf7QAOEC8f0ABBH9IAExAEH/UAJT/UIDM/4iARMAA//yAeMA0wDD/7IBqf+4Asn+2ALp/vgACgIa/SkEOvxJA1r+SQE6ACoAGgAKAPr/6QLa/skCuv6pArL+wQLS/uEB8gEC/hECIv4xAkL+UQJS/kECMv4hAhL+AQLy/uEC0v7BArL+qQK6/8kA2gDrAPsBC/8aACsBO/5KA1n8SAQ5/SgCGf8I//gC6f/YAMkBuf6oArP/wgDTAeP+8gID/xIAIwEz/kICU/9QAUH/MAAhARH/AAHxAOH+0APB/bACqwC8/8sB3P/rAfz/CwEc/ysBPABM/1cBSP83ASj/FwII/vcB6ADY/8cDuP2nAbQAxP/TAuT/8wAE/xMBJP8zAUQAVP9PAUAAMP8fARAAAADw/98B0ADAAK8ArQC9/8wC3f7sAf0BDf4cAi3/PP9MA1f9RgI3/yYAFwEH/vYC5/7WAsf+tgKn/rQBxQDV/+QC9f4EARX/JAE1/0QCVf1OBD/8LgIfAA///gPv/d4BzgC+AK4Brv+9AM4A3gHuAP7/DQEe/y0BPv9NAVYARv81ASb/FQEG//UA5gLW/MUFtvulBLb+xQDWAOYB9gAG/xUAJgE2/0UCVv1NAz79LQMe/Q0D/f3sAt3/zAC9AK0Br/6+As//3v/uA//9DgIf/y4APwBPAVX/RAE1/yQAFQAFAPUB5f/UAcX+tAKn/7YBx/7WAuf+9gIH/xYAJwA3AEcAVwBNAD0ALQEc/gsC/P7rAdwBzP67Aqz+rwLA/88A4ADwAAABEP8fATD+PwNQ/lMBRP8zASQAFP8DAvT94wPU/sMBtP+nAbj/xwHYAOj/9wEI/xcBKAA4/0cCWP1KBDv7KgUb+woG+/nqBtv7ygW7+6oEsfzAA9H/4ADxAAEAEf8gAjH+QAFRAFP/QgIz/iIBEwADAPMA4//SAsP/sgCpALkAyQDZAOkA+QAJARn/KP84A0r7WQZK+zkDKv8Z/wkB+v/pAtr+yQG6AKr/sQLC/tEB4gDy/wEDEvshBTL8QQJSAFIAQv8xASL/EQECAPIA4v/RAsL9sQOq/rkCyv7ZAur9+QQK/RkBKwA7/0oCWf5IATn/KAIZ/ggB+QDp/tgEyfy4A6n+sgHD/9IB4//yAQMAE/8iATP/QgFT/1ABQf8wACEBEf4AA/H94ALR/8AAsQGr/roDy/3aA+v9+wIM/xsBLP87AUz/VwBIATj/JwEY/gcC+P7nAtj/x/+3A6j8swTE/dMB5AH0/wMAFAEk/jMCRABU/k8DQP0vAiAAEP7/A/D93wPQ/r8AsAGs/rsEzPzcA+39/AMN/hwBLQA9AE0AVwBHADf/JgIX/gYC9/7mAdcAxwC3AKcAtf/EAdUA5QD1AAUAFf8kAjX+RAJV/k4CP/4uAh//DgD/AO8A3wDPAL8ArwCuAL4AzgDeAO4A/gAOAB4ALgA+AE4BVv5FAzb7JQYW+wUE9v3lAdYBxv61A6b8tQXG+9UE5v31Agb/FQAmADYARgFW/k0DPvwtBB78DQT+/O0F3vvNA73/rP+uA7/9zgLf/+4A/wIP/R4DL/0+Ak//VABFATX/JAEV/gQC9f7kA9X+xAC1AKcAtwHH/9YB5//2AAcAFwEn/jYDR/5WAE0BPf4sAh0ADf/8Ae3/2wDMAbz/qwCwAsD8zwTg/e8BAAEQ/h8CMP4/AlD9UwRE/TMBJAEU/QMD9P/j/9MCxP6zAagAuP/HAtj95wP4/QcEGPsnBTj7RwVY/UsBPAAs/xsCC/76Auv/2gDL/7oBqwCxAMEA0f/gAPECAf0QAyH+MAFBAFH/UgFDADMAIwAT/wIC8/3iBdP5wgez+6gDuf/I/9gC6f74Agn+GAEpATn9SARZ/EoDO/4pARr/CQL6/ekD2v3JA7r9qQOy/cEC0v/hAfL/AQIS/CEFMvtBBlL6UQVC/DEDIv8R/wEC8v7hAtL/wQCyAKoAugDKANoA6gD6AAoAGgAq/zkCSv9ZAEkAOQApARn/CAH5/ugC2f/IALkAqQCzAMMA0wDj//IBA/8SAiP+MgFDAFP+UARB/DADIf4QAQH/8ALh/dAEwfywAqsAu//KAtv+6gH7/woCG/4qAjz+SwJY/kcCOP8nABgBCP/3Aej+1wPI/LcFqPuzBMT90wLk//MABAEU/yMBNP5DAlT+TwJAADD+HwMQ/P8D8P/fANABwP6vAqz+uwHMANz/6wL8/gsBHf8sAj39TARX+0YFN/wmAhcAB//2Aef/1gDHAbf/pgG1/8QB1f/kAfX/BAEV/yQBNQBF/1QBT/8+AS8AH/8OAv/+7gLf/s4BvwCvAK0AvQDNAN0A7gD+AA7/HQIu/z0ATgBWAEb/NQIm/hUBBgD2/+UC1v3FBLb8pQO2/sUB1gDmAPYABv8VAib9NQNG/lUATgI+/S0EHvsNBf777QTe/s0BvgCu/60Bvv/OAd//7gL//Q4DH/4uAT8ATwBVAEX/NAIl/hQCBf/0/+QC1f7EArX+pgK3/sYC1//m//YCB/4WAScAN/9GAVf/TAA9AS3+HAIN//wA7QHd/swCvf+sALABwP7PA+D97wIA/w8AIAEw/z8BUP9TAUT/MwEk/xMBBP/zAeT/0wHE/7MBqP+3Acj/1wLo/fcECPsXBSj8NwNI/lcCTP47ASz/GwEMAfz+6wLc/coDu/6qArH+wAHRAOH/8AEB/xABIf8wAUH/UABTAUP/MgAjAhP9AgLz/+IA0wHDALP/qAC5Acn/2AHp//gACQEZ/igDOfxIBFn8SgM7/ioCG/4KAvv+6QLa/skCuv+pALIAwgDSAOIA8gACABL/IQIy/kECUv5RAkL+MQMi/RECAv/xAeL/0QHC/rEDqv25A8r82QTq/fkCCv8ZASr+OQNK/FkESv05Air/GAAJAPkA6QDZAMkAuf+oArP+wgLT/eID8/4CARMAI/8yAUMAUwBR/0ACMf4gAREAAf/wAuH+0AHBALH/qgK7/coD2/3qA/v9CgMb/SoCOwBL/lgDSf03Ayj9FwMI/vcB6ADY/8cBuACo/7MCxP7TAeQA9P8DART/IwE0AET/UwFQ/j8DMP0fAxD+/wDwAuD+zwHAALAArP+7Asz/2wDsAfz+CwIc/isCPP9LAFcBR/42AScAFwAHAff+5gHXAMcAtwCnAbX+xALV/uQB9QAFARX/JAE1/kQCVf9OAD8CL/0eAw/9/gLv/t4Ez/y+A6/9rAK9/8wB3f/sAP0CDf0cAi7/PQBOAlb9RQI2ACb/FQIG/fUC5gDW/8UBtgCm/rUExvzVAuYA9v4FAxb+JQE2/0UBVv9NAT7/LQEe/w0B/gDu/90Bzv+9Aa7/rQG+AM7+3QPu/v0ADwIf/i4APwJP/VQERf00AiX+FAEFAfX+5APV/MQEtf2mArf/xgDXAOcB9/8GARf+JgM3/kYBV/9MAD0BLQAd/wwB/f/sAd0Azf+8Aq39rgO//s4B3wHw/f8DEP4fATAAQABQ/1MBRAA0/yMCFP0DAvQA5P/TAsT+swGoALgAyADYAOgA+AAIABgBKP43Akj+VwJM/jsCLP8bAAwB/P7rAtz/ywC8AKwBsP/AAdH+4ALx/wABEf8gADEBQf9QAVP/QgAzAiP9EgID//IB4wDTAMP+sgOp/bgDyf7YAOkB+f8IARn/KAE5/0gBWf9KATv/KgEbAAv++gPr/NoFy/u6Bar7sQTC/tEA4gHy/wEBEgAi/zEBQgBSAFIAQgAy/yEBEgEC/fEE4vvRBcL8sQOq/rkBygDaAOoA+gAK/xkCKv05A0r+WQBKAjr8KQUa+wkE+v7pANkByf+4AakAs//CANMB4//yAgP9EgIj/zIBQwBT/1ABQf8wASEAEQAB//AC4f7QAsH+sAGrALsAywHb/uoC+/4KARsAKwE7/koCWf5IATkAKQAZ/wgC+P7nAtj9xwO4/qcCtP7DAtT94wX0+wMEFP0jATQBRP9TAVD/P/8vAiD+DwIA/u8C4P3PBMD8rwOs/rsBzAHc/usC/P4LAhz+KwI8/ksDWP1HAjj/JwAXAQf/9gDnAdf/xgC3Aaf/tADFAdX+5AP1/gQAFQEl/jQDRf1UA0/9PgIv/x4ADwH//u4C3//OAb//rgGt/bwEzf7cAe3//AANAB0BLf88AE0AVwFG/zUAJgEW/gUD9v3lAtYAxv61A6b9tQPG/dUD5v31Agb/FQEm/zUARgFW/k0DPv0tAh7/DQD+Ae7+3QLO/r0Crv6tAb4Azv/dA+77/QUO/B0DLv89/04CVf1EBDX8JAMV/QQD9f7kAtX+xAG1/6YCt/7GAtf+5gL3/gYCF/4mAjf+RgJX/kwCPf4sAh3+DAL9/uwC3f7MAr3+rAGvAL8AzwDfAO8A/wAPASD+LwJA/08BVP9DATT+IwMU/QMC9P/jANQAxAC0AKgAuADI/9cD6Pz3BAj9FwEoAjj9RwNY/UsDPP0rAxz9CwP8/esD3P7LALwBrP+vAMAC0PzfBfD7AAUR+yAEMf5AAVEAU/9CATP/IgIT/gIB8wDj/9ICw/6yAakAuQDJ/9gC6f34BAn7GAUp/DgDSf5YAUsAOwAr/xoCC/76Auv/2v/KArv/qgCxAMEA0QDiAfL/AQASACIBMv9BAVL+UQJC/zEAIgES/QEE8vzhA9L/wQCy/6kBuv/JAtr+6QH6AAr/GQEq/zkBSgBa/0kBOv8pARr/CQD6Aer/2QDKAbr+qQOz/cIC0//iAPMBA/8SACMAMwBDAVP+UANB/DADIf8QAAEB8f7gAtH+wAOx/aoCu//KAdv+6gP7/QoCGwAr/joDS/1YAkkAOf4oAxn9CAL5AOn+2ALJ/7cAqAC0AMQA1ADkAPQABAAUACQANABEAFQBUP4/AjD+HwEQAQD+7wLg/88AwACwAKwAvAHM/9sB7P77Agz+GwIs/jsCTP5XAkj+NwEo/xcCCP33BOf81gLHALf+pgO1/sQB1f/kAfX+BAQV/CQDNf5EAVUATwA//y4CH/4OAv/+7gHfAM8Av/+uAq3+vAHNAd387Ab9+gwFHf0sAD0CTf5WAkf+NgEnABcABgH2/uUB1gDGALYApgC2AMYA1gHm/fUFBvoVBib7NQRG/VUCTv49Ai7/HQEO/v0C7v/dAM4Cvv2tA679vQLOAN7/7QH+AA7+HQMu/T0DTv5VAEYANgEl/xQCBfz0BOX91APF/rQApwC3Acf/1gLn/PYEB/0WAif/NgBHAFcBTf88AC0BHf4MAv3/7ADdAM0Bvf6sAa8Bv/3OBN/87gT//A4EH/wuAz//Tv9TAUQBNP0jAxT+AwH0AOQA1P/DArT+pwK4/scB2ADo//cCCP0XAyj9NwJI/1cBTP47Ayz9GwMM/fsD7P3bA8z+uwCsAbD/vwDQAOAA8AEA/w8AIP8vAUEBUf9SAEMAM/8iAhP/Av/yAuP90gPD/rICqf64Acn/2AHpAPkACQAZ/ygCOf5IAVkBS/06BCv8GgML//r/6gLb/soCu/6qArH+wAPR/OAE8fwAAxH/If8xA0L8UQNS/0H/MQIi/xEAAgHy/uEB0gHC/rECqv+5/8kC2v7pAvr/CQEa/ikCOv9JAFoCSvw5BCr9GQIKAPr/6QDaAcr/uQGq/7EBwv/RAeL/8gADABMBI/4yA0P9UgFRAUH+MAIh/xAAAQDxAeH/0ADBAbH+qgO7/coD2/3qAvsAC/4aAyv8OgVL+1gESf04AikAGf4IA/n96APZ/cgDuf2oA7P9wgLU/+MB9P8DABQAJAE0/0MBVP5PA0D9LwIgABD+/wPw/d8D0P2/ArD/qwC8Acz/2wHs/vsDDPwbBSz7OwRM/lcBSP83ACgAGAEI//cA6ADYAMgAuACn/7QCxf7UAeUB9f4EAhX+JAE1AUX/VABPAT/+LgMf/g4A/wHv/94Bz/++Aa//rAG9/8wB3f/sAf3/DAId/SwCPf9MAFcCR/42ASf/FgEH//YC5/3WA8b+tQGm/7UBxv/VAeb/9QEG/xUBJv81AUb/VQJO/T0DLv4dAg7+/QLu/t0Czv69A678rQO+/83/3QPu/f0BDgAeAS7+PQNO/FUERv01Ayb9FQIG//UA5QHV/8QAtQCnALcBx/7WAuf+9gIH/xYBJ/42A0f9VgNN/TwDLf0cAw3+/ADtAd3/zAG9AK3+rgO//c4C3wDv//4ADwEf/i4CPwBP/lQCRf80/yQDFP0DAvT+4wLU/sMDtPynBLj9xwHYAOj/9wMI/RcBKP83Akj+VwNM+zsFLP0bAgz++wHsANwAzAG8/qsCsP6/AtD/3wDwAAAAEAAgATD/P/9PAlT/QwAzAiP8EgQD/vIB4wDT/sIEs/yoBLn8yAPZ/egF+foIBRn9KAA5Akn+WAFLADv/KgIb/goC+/7rAtz+ywO8/asDsv3BAtL/4QDyAgD9DwMg/S8CQP9QAVEAQf8wASH+EAMB/fID4/7SAMMBs/+qAbv/ygHb/+oC+/0IAxn9KAM5/kgBWf9IATn+KAMZ/QgC+//q/9oDy/26Aqv/sv/CA9P94gLz/gACEf8gATL/QQBSAVD/PwEwACAAEAAA//EC4v7RAsL/sf+rArz+ywHcAez++wIK/hkCKv45Akr/VwBIADgAKAAYAAgA+gDqANoAygC6Aar+swPE/NME5P3zAgL/EgAjATP+QgFTAE8APwAvAB//DgEAAfH94APR/cADsf6sAr39zAPd/ewD/f4KARv/KgE7/0oBV/9GATf/JgEX/wYB+f/oAdn+yAO5/qgBtf/EANUB5v/1AQT/EwEk/zMBRP5TAk4APv8tAB4ADgAAAPAC4PzPBMD8rwSu/b0Czv/dAO4B/v8LABwALAE8/0sBVv9FADYAJgAWAQb+9wPo/NcDyP+3AKgAtgHH/tYD5/z2BAX8FAUl/DQBRQFV/kwDPf0sAh3/DAH//+4A3wHP/r4Dr/2uA7/9zgPf/e4D//0MAx39LAQ9/EwCVQBF/jQDJf4UAQX/9gDnAdf/xgG3/6f/twPI/dcC6P/3/wUDFv0lAzb9RQFWAUz+OwMs/RsCDP79Au7+3QLO/r0Crv6vAcAA0P/fAvD+/wEO/x0CLv49AU7/UwBEAjT9IwMU/AME9v7lANUBxf+0AKkBuQDJ/tgE6fr4Bgf8FgEnATf9RgRX/EoEO/sqBRv8CgP9/+z/3AHN/7wCrf2wA8H90ALh//ABAP8OAR//LgA/AU8AU/5CAzP9IgMT/gIB9P7jAtQAxP+zAar/uQHK/9kC6v35Awj+FwEoADj/RwJY/UkDOv0pAxr9CQP8/esC3P/LAbz+qwOy/MEE0v3hAvL+/wIQ/h8BMAFA/k8CUv9BADIBIf4QAgH/8gHj/9IBw/+yAKsBu//KANsB6/76Awn9GAMp/TgBSQFZ/0gBOQAp/hgDCf36AusA2/7KA7v9qgKz/8IB0/7iA/P9AAIRACH+MARB+1AEUf4/ATAAIAAQ/v8E8vvhBtL6wQWy/KsCvADM/9sB7AD8/gkDGv4pATr/SQFY/0cBOP8nARj/BwL6/ukA2gLK/bkEqv2zAMQC1P3jA/T+AQASASL/MQFC/1IBT/4+Ay/9HgMP/f8C8QDh/9ABwQCx/qwDvf7MAN0C7f38AgsAG/4qAjsAS/5WA0f+NgEn/xYBB//4AekA2f/IAbkAqf+0AcUA1f/kAvX9AgMT/iMBNP9DAlT8TQQ+/S0CHgAO/v8D8PzfBND9vwKwAK7+vQLO/t0C7v/9AQz+GwIs/jsCTP9VAEYANgAmABYABgD4AOgA2P/HArj+pwK2/sUA1gLm//X/BAEV/yQBNQBFAFX+TAM9/iwAHQEN//4A7wLf/c4Dv/2uA6/9vgPP/t4B7wD/AA3/HAEt/zwBTQBV/0QBNf8kARX/BAH3/+YB1//GAbf/pgC3Acf/1wHo/vcCBv8VASb/NQFG/1UBTP87ASwAHP8LAv797QPe/s0AvgKu/a8DwP7PAOAB8P7/Aw7+HQEuAD7+TQNU/kMBNAAk/xMCBP71AOYC1v3FA7b+pwC5Acn/2AHpAPn+BgMX/SYDN/5GAFcBS/86ASsAG/4KA/397APd/swBvf+sArH9wAPR/uAB8QAA/w4BH/8uAj/+TgFTAEP/MgIj/hIBAwH1/uQC1f/EALQBqv+5AMoB2v/pAfr/BwEY/icEOPpHB1j5SQY6/CkCGv8JAPwB7P7bA8z9uwKs/7EAwgHS/+EB8v//ARD/HwEw/z8BUABS/0EBMv8hABICAv3zA+P90gLD/7IBq/+6AMsB2//qAfv/CAAZAin9OAJJ/1gASQI5/SgDGf0IAvv/6gHb/8oCu/2qA7P+wgDTAuP98gQB/BAEIfwwA0H+UAFRAEEAMQAhABEAAP/xAeIA0gDCALIArP+7Asz+2wHsAPz/CQIa/ikBOgBK/1cCSP43ASgAGP8HAfoA6v/ZAsr9uQSq/LMDxP7TAeQB9P4BARIAIv8xA0L7UQVQ/D8DMP8e/w4CAP7wAeEA0f/AAbEArf+8As393ALtAP3/CgIb/SoDO/5KAlf9RgQ3+yYFF/wGAvkA6f/YAcn+uAKp/7QAxQDVAOUA9QADABMAIwAzAEMBU/5NAz78LQMe/w0AAAHw/t8C0P6/ArD+rQK+/80A3gHu//0ADAIc/CsFPPtLBVb8RQI2/yUBFv8FAfj+5wPY/scCuP2nArb/xQHWAOb/9QAEART/IwE0/0QAVQFNAD3+LAMd/QwD//7uAN8Bz/++Aq/+rgG//84C3/7uAv/+DAEdAC0APQBNAFUARf80AiX9FAQF/PYD5/7WAMcCt/2mBLf8xgLX/+YB9/8EARb/JQA2AUb/VQBMADwBLP8bAgz8/QTu/d0Dzv69AK4BsP+/AdAA4P/vAQD/DQAeAi79PQNO/VMCRP8zAST/EwEE//UB5v/VAsb+tQGoALj/xwLY/ucC+f4GAhf+JgE3AUf+VgJL/zoAKwAbAQv+/ALt/9wAzQG9/6wAsQDBANEB4f7wAgD+DgIf/i4CP/1OBFP9QgIz/iIBEwADAPUB5v7WAsj+uAKv/70Bzf/cAez++QMH/RQDI/0wAT4BS/4+AjH/Iv8VAgj9+wTw/eIC1//K/74CxP/QAN0B6v71AgD/CwAXASL/LP82Azj8LAQh/RYBDAABAPgA7gDlANsA0gDNAdf/4AHr//MB/QAF/w0BFv8dASYALv8kAh38EwUM+wMF/vz1A+/+5wHhANsA3wDm/+wC9P76AwD8BQIMABL/FgId/hsBFgAQ/woCBf7/Avz+9wLz/u4C6/7pAu/+8gL3/fsE//wBBAX8BwML/g0BEAEM/QgDBv4CAgH9/wP9/fsD+v74APcC+f36Av3//QAAAgD9/wIB/wAAAQEB/wAAAA==","tot":"str"}],"active":true,"x":210,"y":1040,"wires":[],"info":"1) To add a `new device`, or for fine tune an existing one, or to add `share` actions, you must edit the `global.alldevice` JSON structure.\n\n   see: https://github.com/msillano/tuyaDAEMON/wiki/tuyaDAEMOM-global.alldevices\n   \n   see also: https://github.com/msillano/tuyaDAEMON/wiki/tuyaDAEMON-toolkit\n\n2) To add a _remote tuyaDEAMON instance_, you must edit `remotemap`\n\n   see: https://github.com/msillano/tuyaDAEMON/wiki/ver.-2.0--milestones#net-extensions"},{"id":"dfd320c0.b4f74","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"Zigbee Gateway","disableAutoStart":false,"deviceId":"bfb073b1b789b5994cro7p","deviceKey":"16a98ab0738c9d2d","deviceIp":"","retryTimeout":"100003","findTimeout":"100019","tuyaVersion":"3.1","eventMode":"event-both","x":1200,"y":140,"wires":[["2ec83963.a7d146"],["5426b54d.99298c"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"e543af34.b2468","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"Smart IR #2","disableAutoStart":false,"deviceId":"56685573d8bfc0508488","deviceKey":"95e44e12dec93db9","deviceIp":"","retryTimeout":"100057","findTimeout":"100069","tuyaVersion":"3.1","eventMode":"event-both","x":1190,"y":220,"wires":[["2ec83963.a7d146"],["4854987c.2fea88"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"5c8eb6e4.500348","type":"tuya-smart-device","z":"173260fb.d021ff","d":true,"deviceName":"Smart IR #1","disableAutoStart":false,"deviceId":"56685573d8bfc05082e6","deviceKey":"9ed2ded75aef2e6e","deviceIp":"","retryTimeout":"8043","findTimeout":"10049","tuyaVersion":"3.1","eventMode":"event-both","x":1190,"y":180,"wires":[["2ec83963.a7d146"],["c6d3a5bb.1fa638"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"ba1d97f9.86c698","type":"tuya-smart-device","z":"173260fb.d021ff","d":true,"deviceName":"Smart IR #3","disableAutoStart":false,"deviceId":"56685573d8bfc0508837","deviceKey":"d7ce90c0a98707c5","deviceIp":"","retryTimeout":"100103","findTimeout":"100109","tuyaVersion":"3.1","eventMode":"event-both","x":1190,"y":260,"wires":[["2ec83963.a7d146"],["2eabebbc.ba4784"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"5a17a058.f17be","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"smart umidifier","disableAutoStart":false,"deviceId":"554301602cf4325eae00","deviceKey":"17266b4c72b1bdb8","deviceIp":"","retryTimeout":"1000","findTimeout":"1000","tuyaVersion":"3.1","eventMode":"event-both","x":1200,"y":300,"wires":[["2ec83963.a7d146"],["71d6faf9.5c3504"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"bd44880d.8cdda8","type":"tuya-smart-device","z":"638c6657.ce65c8","deviceName":"*tuya_bridge","disableAutoStart":false,"deviceId":"bf8c4fd0c03067079cplb4","deviceKey":"b2feff3e0cac7db7","deviceIp":"","retryTimeout":"3012","findTimeout":"2800","tuyaVersion":"3.1","eventMode":"event-both","x":680,"y":220,"wires":[["798c4138.06176","bfddb028.1da3","30ac034a.029d3c"],["fd3a31f5.8912d"]],"info":"CUSTOMIZATION\n\n- About TRIGGERS and devices [see here](https://github.com/msillano/tuyaDAEMON/tree/main/tuyaTRIGGER#implementation) \n\nSetup for a new tuya_bridge device: any device as a different 'countdown' dp, so you must update the cconst 'triggerDP':\n\n- the node trigger.'dp convert'\n- the sub-flow 'red-trigger'\n- the code for 'case \"_doTrigger\":' in _system.'sistem cmd selector 2' node."},{"id":"b7a9fedf.ac7dd","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"BLE MESH（SIG）Gateway","disableAutoStart":false,"deviceId":"bf0b2ef30ffb476aa8ngzw","deviceKey":"16d9b40f95fd3e62","deviceIp":"","retryTimeout":"100153","findTimeout":"100169","tuyaVersion":"3.1","eventMode":"event-both","x":1240,"y":340,"wires":[["2ec83963.a7d146"],["c33e85bd.f37a08"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"cb5af4dc.7cb258","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"watering timer","disableAutoStart":false,"deviceId":"bfa1bdeb107d379fbckkwv","deviceKey":"36c806079b8b1545","deviceIp":"","retryTimeout":"1987","findTimeout":"1901","tuyaVersion":"3.1","eventMode":"event-both","x":1200,"y":540,"wires":[["2ec83963.a7d146"],["b896058b.3f9028"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"fdc6a9ae.1533a8","type":"tuya-smart-device","z":"173260fb.d021ff","d":true,"deviceName":"switch-4CH 2","disableAutoStart":false,"deviceId":"08435372600194fe37c8","deviceKey":"3becf0696deb2c84","deviceIp":"","retryTimeout":"100267","findTimeout":"100271","tuyaVersion":"3.1","eventMode":"event-both","x":1190,"y":380,"wires":[["2ec83963.a7d146"],["e20004fc.2c23b8"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"61c5fb6c.c4fad4","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"smart camera","disableAutoStart":false,"deviceId":"bfbe31dc672657857cxsi0","deviceKey":"025cb798a07ebc56","deviceIp":"","retryTimeout":"2183","findTimeout":"2189","tuyaVersion":"3.1","eventMode":"event-both","x":1200,"y":420,"wires":[["2ec83963.a7d146"],["6a21e688.4e0838"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"3db19556.7e04fa","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"switch module#1","disableAutoStart":false,"deviceId":"bfa355aa196ae5975cy6ii","deviceKey":"10ad2960ff4d08d0","deviceIp":"","retryTimeout":"100193","findTimeout":"100207","tuyaVersion":"3.1","eventMode":"event-both","x":1210,"y":460,"wires":[["2ec83963.a7d146"],["668d3a7b.f2a8e4"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"1a711832.f93bb8","type":"mysql","z":"173260fb.d021ff","mydb":"7e3077c8.ff8e88","name":"*append to DB local","x":1540,"y":1260,"wires":[["9ed599c6.5dc328"]],"info":"CUSTOMIZATION:\n\nEdit for DB url and credentials. \nDisable/delete if not used."},{"id":"12896b89.d95c84","type":"tuya-smart-device","z":"173260fb.d021ff","d":true,"deviceName":"siren","disableAutoStart":false,"deviceId":"42027807d8bfc0c5831e","deviceKey":"70e17a0208ae2e5c","deviceIp":"","retryTimeout":"2000","findTimeout":"2000","tuyaVersion":"3.1","eventMode":"event-both","x":1170,"y":580,"wires":[["2ec83963.a7d146"],["74afb4e1.2c722c"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"74afb4e1.2c722c","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"42027807d8bfc0c5831e","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":580,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"9c0ddbf6.c9b378","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1840: silence ON","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1840","type":"num"},{"name":"value","value":"ON","type":"str"}],"x":770,"y":780,"wires":[["54d03d6e.945994"]]},{"id":"cb9729f6.064aa8","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"to log 1850: silence OFF","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"fakeDP","value":"1840","type":"num"},{"name":"value","value":"OFF","type":"str"}],"x":770,"y":820,"wires":[["54d03d6e.945994"]]},{"id":"6032a270.4f2c6c","type":"link in","z":"4bebbdfa.41af64","name":"*REDTRG5000","links":[],"x":420,"y":160,"wires":[["7199a556.460d4c"]],"l":true},{"id":"a6aefdcd.f125b","type":"inject","z":"4bebbdfa.41af64","name":"*test  REDTRG5000","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":200,"wires":[["7199a556.460d4c"]]},{"id":"22aa17c9.49abf8","type":"link in","z":"4bebbdfa.41af64","name":"*REDTRG5020","links":[],"x":420,"y":240,"wires":[["6f68f3f4.61256c"]],"l":true},{"id":"b42ae860.a855e8","type":"inject","z":"4bebbdfa.41af64","name":"*test  REDTRG5020","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":280,"wires":[["6f68f3f4.61256c"]]},{"id":"6f68f3f4.61256c","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"*trigger5020","env":[{"name":"TRGnumber","value":"5020","type":"str"}],"x":810,"y":240,"wires":[["a3dfd8c8.7dac98"]]},{"id":"7199a556.460d4c","type":"subflow:66ca1554.e4c85c","z":"4bebbdfa.41af64","name":"*trigger5000","env":[{"name":"TRGnumber","value":"5000","type":"str"}],"x":810,"y":200,"wires":[["a3dfd8c8.7dac98"]]},{"id":"a3dfd8c8.7dac98","type":"link out","z":"4bebbdfa.41af64","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":955,"y":200,"wires":[]},{"id":"22565a24.03e246","type":"comment","z":"4bebbdfa.41af64","name":"node_red TRIGGERS  examples","info":"A node-red trigger (REDTRGXXXX) is used to fire _smarlife_ automations.\n\nconvention: reserved values for REDTRG: 2000-2999\n\nexamples: REDTRG2010,  REDTRG2020","x":230,"y":100,"wires":[]},{"id":"8e2917e2.4c7568","type":"function","z":"4bebbdfa.41af64","name":"event selector","func":"// NOTE \n// obsolete\n// from Ver.2.0 this function is better implemented using 'share' option\n\n// msg (real)\n//  _msgid: \"3042f3fd.8497fc\"\n//  _event: \"node:2ec83963.a7d146\"\n//  from:  \"bfa355aa196ae5975cy6ii\" // id\n//  payload: object\n//     deviceName: \"*tuya_bridge\" \n//     data: object\n//        t: 1609234903\n//        dps: object\n//           102: 1020\n//\n//msg (virtual)\n//   _msgid: \"d0b26a44.e81738\"\n//   from: \"bfb073b1b789b5994cro7p\"  // cid\n//   payload: object\n//      deviceName: \"Zigbee Gateway\" // gateway\n//      data: object\n//        cid: \"00158d00056a1c45\"\n//        t: 1609235292\n//        dps: object\n//           103: 19\n\n// select messages to fire your EVNTRIGGERXXX.\n// the condition can be as complex  as required \n//  works with messages from any device: real, virtual, mirror, system\n//\n\n// filter example: \n// Trigger on temperature > 20 °C  (from a virtual device)\n if(msg.from == \"00158d00056a1c45\")  // from device\n       if (msg.payload.data.dps[103] >=  200)          // test on undecoded value\n         return[{payload:\"go\"}];                 // in output#1\n// filter example: \n// Trigger on PIR on (from mirror device)\n if(msg.from == \"733710408caab5e79887\")    // the device\n       if (msg.payload.data.dps[1010] === true)        // test on value\n           return[null, {payload:\"go\"}];         // in output#2\n\n//  more....\nreturn null;","outputs":2,"noerr":0,"initialize":"","finalize":"","x":420,"y":420,"wires":[["7c8df992.97a758"],["93689da9.046aa"]]},{"id":"3baeae11.41ef52","type":"link in","z":"4bebbdfa.41af64","name":"IN all msg from devices","links":["81a9b329.092b1"],"x":255,"y":420,"wires":[["8e2917e2.4c7568"]],"icon":"font-awesome/fa-expand"},{"id":"7c8df992.97a758","type":"link out","z":"4bebbdfa.41af64","name":"EVNTRIGGER00A","links":[],"x":790,"y":400,"wires":[],"l":true},{"id":"93689da9.046aa","type":"link out","z":"4bebbdfa.41af64","name":"EVNTRIGGER00B","links":[],"x":790,"y":440,"wires":[],"l":true},{"id":"dc658867.24d188","type":"comment","z":"4bebbdfa.41af64","name":"asynchronous event TRIGGER exit","info":"TRIGGER buid from tuyaTRIGGER flow and not by tuya-cloud.\n\nBased on local events and conditions, used as accelerators by some user flows.","x":820,"y":360,"wires":[]},{"id":"403e1d37.762004","type":"comment","z":"4bebbdfa.41af64","name":"TRIGGER examples and my MIRROR DEVICES (to be costomized)","info":"","x":310,"y":40,"wires":[]},{"id":"55cd4cfe.1c5ed4","type":"comment","z":"4bebbdfa.41af64","name":"event TRIGGERS  examples","info":"A node-red trigger (REDTRGXXXX) is used to fire _smarlife_ automations.\n\nconvention: reserved values for REDTRG: 2000-2999\n\nexamples: REDTRG2010,  REDTRG2020","x":220,"y":340,"wires":[]},{"id":"e6b9ecd2.653e4","type":"function","z":"173260fb.d021ff","name":"share actions","func":"if (msg.share === undefined){\n//   node.warn([\"ERROR in 'share' object for '\" + (msg.info?(msg.info.device + \"/\" + msg.info.property):\"standalone share\") + \"'\", msg]);\n   return(null);\n}\n   //\n// node.warn([\"SHARE input\", msg])   ;\n\nif (Array.isArray(msg.share)) {\n   var arrayLength = msg.share.length;\n   var tuyastatus = global.get(\"tuyastatus\");\n   for (var i = 0; i < arrayLength; i++) {\n      let oktodo = true;\n      if (Array.isArray(msg.share[i][\"test\"])) {\n         try {\n            oktodo = msg.share[i][\"test\"].reduce((ok, cond) => ok && eval(cond), true);\n         } catch (error) {\n            node.warn([\"Error processing 'share[\" + i + \"].test' for '\" + (msg.info?(msg.info.device + \"/\" + msg.info.property):\"standalone share\") + \"': \" + error, msg.share[i]]);\n         }\n      }\n    \n      if (Array.isArray(msg.share[i][\"action\"])) {\n         if (oktodo) {\n            var actionLength = msg.share[i][\"action\"].length;\n            for (var j = 0; j < actionLength; j++) {\n                  let xshare = msg.share[i][\"action\"][j]; \n// caller values:  property: msg.infodp, value:    msg.info.value  \n                  var _cmd = {payload: {\n                            device:  msg.info?msg.info.device  :undefined,            \n                            property:msg.info?msg.info.property:undefined,\n                            value :  msg.info?msg.info.value   :undefined }};\n                            \n                   if(xshare.remote !== undefined){\n                       _cmd.payload[\"remote\"] = xshare.remote;\n                        }\n                       // compact\n                   try {\n                      if (xshare.device === null) \n                          _cmd.payload.device = undefined;\n                      else if (typeof(xshare.device) === \"string\") \n                          _cmd.payload.device = (xshare.device.startsWith('@')) ? (eval( xshare.device.substring(1))):xshare.device;\n                      if (xshare.property === null) \n                          _cmd.payload.property = undefined;\n                      else if (typeof(xshare.property) === \"string\") \n                          _cmd.payload.property = (xshare.property.startsWith('@')) ? (eval( xshare.property.substring(1))):xshare.property;\n                      if (xshare.value === null) \n                          _cmd.payload.value = undefined;\n                      else if (typeof(xshare.value) === \"string\") \n                          _cmd.payload.value = (xshare.value.startsWith('@')) ? eval( xshare.value.substring(1)): xshare.value;\n                      else  if (xshare.value !== undefined) \n                          _cmd.payload.value = xshare.value;\n//              node.warn([\"SHARE output action:\", _cmd, xshare])   \n                     node.send(_cmd);\n                   } catch (error) {\n                   let x1 =  msg.info?msg.info.device + \"/\" + msg.info.property:\"standalone share\";\n                   node.warn([\"ERROR processing 'share[\" + i + \"].action [\" + j + \"]' for '\" + x1+ \"': \" + error, msg.share[i]]);\n                   }\n                }\n            }\n\n      } else {\n         node.warn([\"ERROR in 'share[\" + i + \"]' structure for '\" +  (msg.info?(msg.info.device + \"/\" + msg.info.property):\"standalone share\") + \"' \", msg.share[i]]);\n      }\n   }\n   return (null);\n}\nnode.warn([\"ERROR in 'alldevices.share' structure for '\" + (msg.info?(msg.info.device + \"/\" + msg.info.property):\"standalone share\") + \"' \", msg.share]);\nreturn(null);\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1190,"y":1200,"wires":[["d4e02463.0041e8"]]},{"id":"d4e02463.0041e8","type":"link out","z":"173260fb.d021ff","name":"to fast_cmds","links":["c084a743.290b28"],"x":1315,"y":1200,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"5e8accb.6b52034","type":"function","z":"173260fb.d021ff","name":"*FastFormat","func":"\n// Data codification is function of the device and dps:\n// here you can add new encode functions().\n// version 2.0\nvar dataencode = {\n\n    BYTESMALLFLOAT: function (value) {\n        // transforms temperature to byte: 19.5° => 195 => C3H\n        // required by thermostat\n        var x = value;\n        if (typeof value === 'string')\n            x = Number.parseFloat(value);\n        if (Number.isNaN(x)) {\n            throw \"'value' is not a number!\";\n        }\n        return ~~(x * 10.0);\n    },\n\n    BOOLEANONOFF: function (value) {\n        // transforms 'ON'/'OFF' to boolean  true/false (very tolerant :  see https://stackoverflow.com/questions/359494/which-equals-operator-vs-should-be-used-in-javascript-comparisons)\n        // it|en: can be localized for internationalization\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"OFF\") || (value.toUpperCase() === \"FALSE\") || (value.toUpperCase() === \"NO\"))\n            return false;\n        return true;\n    },\n\n    BOOLEANOPENCLOSE: function (value) {\n        // transforms 'OPEN'/'CLOSE' to boolean  true/false\n        // it|en: can be localized for internationalization\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"CLOSE\") || (value.toUpperCase() === \"CHIUSA\"))\n            return false;\n        return true;\n    },\n\n    ENUMONOFFHOLD: function (value) {\n        // transforms 'OFF'/'ON'/'HOLD' to string '0'/'1'/'2'\n        // it|en: can be localized for internationalization\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"OFF\") || (value.toUpperCase() === \"SPENTO\") || (value.toUpperCase() === \"NO\"))\n            return \"0\";\n        if ((value == 1) || (value.toUpperCase() === \"ON\") || (value.toUpperCase() === \"ACCESO\") || (value.toUpperCase() === \"YES\"))\n            return \"1\";\n        return \"2\";\n    },\n\n    STRUCTARGETTEMP: function (value) {\n        // transform the JSON structure:\n        //   {\"count\":4,\n        //    \"changes\":[{\"time\":\"00:00\",\"temp\":15.5},\n        //              {\"time\":\"07:00\",\"temp\":20},\n        //              {\"time\":\"16:30\",\"temp\":21},\n        //              {\"time\":\"21:00\",\"temp\":16.5}]}\n        // to  base64(Uint8Array[17])\n        // required by thermostat\n\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function mult10(value) {\n            return ~~(Number.parseFloat(value) * 10.0)\n        }\n\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        node.warn(\"in code \" + value);\n        if (o.count !== undefined) {\n            var buf = Buffer.alloc(o.count * 4 + 1);\n\n            buf.writeInt8(o.count, 0);\n            for (var i = 0; i < o.count; i++) {\n                buf.writeInt16BE(hmTomin(o.changes[i].time), i * 4 + 1);\n                buf.writeInt16BE(mult10(o.changes[i].temp), i * 4 + 3);\n            }\n            return buf.toString('base64');\n        } else {\n            throw \"'value' is not a {time,T}[4] struct\";\n        }\n    },\n\n    ARRAY8INT: function (value) {\n        // Transforms a UInt8Array, e.g.[17,16,16,16,15,15,17,18,19,19,18,18,18,18,17,16,17,18,18,0,0,0,0,0]\n        // as object or JSON string\n        // to  coded64 data => ERAQEA8PERITExISEhIREBESEgAAAAAA\n        // required by thermostat\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        if (Array.isArray(o)) {\n            b = Buffer.from(o);\n            return b.toString('base64');\n        } else {\n            throw \"'value' is not a (json) array !\";\n        }\n    },\n\n    STRUCTTIMEHMS: function (value) {\n        //  Transforms a time \"HH:MM:SS\"\n        //  in coded data base64(Uint16Array[3])\n        //  tentative, on work\n        pieces = value.split(':');\n        var buf = Buffer.alloc(6);\n        buf.writeInt16LE(parseInt(pieces[0]), 0);\n        buf.writeInt16LE(parseInt(pieces[2]), 2);\n        buf.writeInt16LE(parseInt(pieces[4]), 4);\n        return buf.toString('base64');\n    },\n\n    STRUCTCOLOUR: function (value) {\n        // accepts: JSON or object\n        // encode:\n        //      {   \"hex\":\"RRGGBBHHHHSSVV\" }\n        //  or: {   \"r\": RR,\n        //          \"g\": GG,\n        //          \"b\": BB\n        //        ( \"h\":HHHH,\n        //          \"s\": SS,\n        //          \"v\": VV )  }\n        // 100% = 0x64\n        //  required by humidifier led\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        if ((o.hex !== undefined) && (typeof o.hex === 'string') && (o.hex.length == 14))\n            return (o.hex);\n        if ((o.r === undefined) || (o.g === undefined) || (o.b === undefined)) {\n            throw \"'value' is not valid hex|rgb object!\";\n        }\n        var buf = Buffer.alloc(7);\n        buf.writeUInt8(o.r, 0);\n        buf.writeUInt8(o.g, 1);\n        buf.writeUInt8(o.b, 2);\n        if (o.h !== undefined) {\n            buf.writeUInt16BE(o.h, 3);\n            buf.writeUInt8(o.s, 5);\n            buf.writeUInt8(o.v, 6);\n        } else {\n            buf.writeUInt16BE(0, 3);\n            buf.writeUInt8(255, 5); //fixed ?\n            buf.writeUInt8(255, 6); //fixed ?\n        }\n        return buf.toString('hex');\n    },\n    ENUMHIGHGOODLOW: function (value) {\n        // transforms 'LOW'/'GOOD'/'HIGH' to string '0'/'1'/'2'\n        // it|en: can be localized for internationalization\n        // required by switch\n        if ((value == 0) || (value == null) || (value.toUpperCase() === \"LOW\") || (value.toUpperCase() === \"BASSA\"))\n            return \"0\";\n        if ((value.toUpperCase() === \"HIGH\") || (value == 2) || (value.toUpperCase() === \"ALTA\"))\n            return \"2\";\n        return \"1\";\n    },\n    RECMODE: function (value) {\n        // transforms 'continuous'/'events' to string '1'/'2'\n        // it|en: can be localized for internationalization\n        // required by switch\n        if ((value == 1) || (value.toUpperCase() === \"EVENTS\") || (value.toUpperCase() === \"EVENTI\"))\n            return \"1\";\n        return \"2\";\n    },\n    STRUCTINCH: function (value) {\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(3);\n        buf.writeUInt8((o.inching) ? 1 : 0, 0);\n        buf.writeUInt16BE(o.delay, 1);\n        return buf.toString('base64');\n    },\n\n    STRUCTRAND: function (value) {\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function dayscode(val) {\n            result = 0;\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                result |= (val.charAt(i) == '-') ? 0 : mask;\n                mask = mask << 1;\n            }\n            return (result);\n        }\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(6 * o.length);\n        for (let i = 0; i < o.length; i++) {\n            buf.writeUInt8((o[i].active) ? 1 : 0, i * 6 + 0);\n            buf.writeUInt8(dayscode(o[i].days), i * 6 + 1);\n            buf.writeUInt16BE(hmTomin(o[i].start), i * 6 + 2);\n            buf.writeUInt16BE(hmTomin(o[i].end), i * 6 + 4);\n        }\n        return buf.toString('base64');\n    },\n\n    STRUCTREPEAT: function (value) {\n        function hmTomin(hm) { // local function\n            pieces = hm.split(':');\n            return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n        }\n        function dayscode(val) {\n            result = 0;\n            mask = 1;\n            for (var i = 0; i < 7; i++) {\n                result |= (val.charAt(i) == '-') ? 0 : mask;\n                mask = mask << 1;\n            }\n            return (result);\n        }\n\n        var o = value;\n        if (typeof value === 'string')\n            o = JSON.parse(value);\n        var buf = Buffer.alloc(10 * o.length);\n        for (let i = 0; i < o.length; i++) {\n            buf.writeUInt8((o[i].active) ? 1 : 0, i * 10 + 0);\n            buf.writeUInt8(dayscode(o[i].days), i * 10 + 1);\n            buf.writeUInt16BE(hmTomin(o[i].start), i * 10 + 2);\n            buf.writeUInt16BE(hmTomin(o[i].end), i * 10 + 4);\n            buf.writeUInt16BE(hmTomin(o[i].on), i * 10 + 6);\n            buf.writeUInt16BE(hmTomin(o[i].off), i * 10 + 8);\n        }\n        return buf.toString('base64');\n    },\n\n    SDSPACES: function (value) {\n        node.warn(\"ERROR: SDSPACES only decode()\")\n        return (value);\n    }\n\n};\n// -------------------------------------------------- do not change\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// true if device is a real device (virtual == cid exists)\nfunction _isVirtual(odev) {\n    return (odev.cid !== undefined);\n}\n\n// true if is a GET command  (GET == msg.payload.value not exists)\nfunction _isget(mx) {\n    return ((mx.payload.property) && (mx.payload.value === undefined));\n}\n\n// true if is a SET command  (SET == msg.value  exists)\nfunction _isset(mx) {\n    return ((mx.payload.property) && (mx.payload.value !== undefined));\n}\n\nfunction _getHome() {\n    let netmap = global.get(\"remotemap\");\n    return (netmap.itself);\n}\n\n// ============================  fast output processing\nvar req = {\n    to: null,\n    payload: {}\n}\n\n//  node.warn([\"FAST cmd input\", msg]);\n//---------------------- some assert\nif ((!msg.payload)) {\n    node.warn([\"ASSERT fail: msg.payload must exist.\", msg]);\n    return [null];\n}\nif ((msg.payload.property !== undefined) && (typeof(msg.payload.property) !== \"string\")) {\n    node.warn([\"ASSERT fail: msg.payload.property, if it exists, must be a string.\", msg]);\n    return [null];\n}\n\n// fake remote\nif (msg.payload.remote && (msg.payload.remote === _getHome())) {\n    delete msg.payload.remote;\n}\n\nif ((!msg.payload.remote) && (!msg.payload.device)) {\n    node.warn([\"ASSERT fail: msg.payload.device must exist in local.\", msg]);\n    return [null];\n}\n\n// ------------------------ expand messages for remote\n\nif (msg.payload.remote) {\n    let dx = msg.payload;\n    msg.payload = {};\n    msg.payload.value = dx;\n    msg.payload.device = \"_system\";\n    msg.payload.property = \"_proxy\";\n}\n\n// node.warn([\"FAST command\", msg]);\n// ----------------------- stuff: device normalization\n    var alld = global.get(\"alldevices\");\n    const PSEUDODP = alld.__pseudodp;\n    var devObj = _callJSONMethod(alld, \"__getODev\", msg.payload.device);\n    var  dpObj = _callJSONMethod(alld, \"__getODps\", devObj, msg.payload.property);\n    msg        = _callJSONMethod(alld, \"__normalize\",msg, devObj, dpObj, PSEUDODP);\n\n//  node.warn([\"FAST - normalized\", msg]);\n    if (msg.error){\n        node.warn([msg.error, msg]);\n        return([null]);\n    }\n    if (msg.warning){\n        node.warn([msg.warning, msg]);\n    }\n    \n// -------------- encoding data on place (so also fake can use encode functions) \nif(req.infodp !== \"multiple\") {   // multiple value MUST be encoded!\n    msg.payload.value =  _callJSONMethod(alld, \"__encodeValue\", msg.payload.value, dpObj, dataencode);\n    if ( msg.payload.value && msg.payload.value.error){\n        node.warn(msg.payload.value.error);\n        return[null];\n        }\n    }        \n   \n// 'pseudo' dpObject to process PSEUDODP \nif ((dpObj === undefined) && (PSEUDODP.includes(msg.infodp.toUpperCase()))){\n        dpObj = {\n                dp: msg.infodp,\n                } \n        }\n\n// =============================== prima SKIP\nif ((dpObj.capability !== undefined) && (dpObj.capability.toUpperCase() === \"SKIP\")) {\n    // produces response\n    var newMsg = {\n        \"from\": devObj.id,\n        \"payload\": {\n            \"deviceId\": devObj.id,\n            \"data\": {\n                \"t\": Math.floor(Date.now() / 1000),\n                \"dps\": {\n                    [dpObj.dp]: msg.payload.value\n                }\n            }\n        }\n    };\n    return [null, null, newMsg];\n}\n//  ============================= poi fake\nif (alld.fake.includes(devObj)) {\n    return [null, msg];\n}\n\n// ==============================  building request \n\nreq.topic = \"Fast cmd for \" + msg.payload.device;\n\nreq.to     = msg.to;\nreq.toDev  = msg.toDev;\nreq.infodp = msg.infodp;\nreq.payload.dps = msg.infodp.toString(); // dps always string: \"101\" or \"_connected\"\n\nif (_isVirtual(devObj)) {\n    req.payload.devId = devObj.cid;\n}\n\n// =======  request data processing encoding\n    \nif(req.infodp === \"schema\") {    \n   delete req.payload.dps;\n   req.payload.operation = \"GET\";\n   req.payload.schema  = true;   \n} else \nif(req.infodp === \"multiple\") {   \n   delete req.payload.dps;\n   req.payload.data  = msg.payload.value;   \n   req.payload.multiple  = true;   \n} else \nif (_isget(msg)) {\n    req.payload.operation = \"GET\";\n    //\n    var capp = (typeof dpObj.capability !== 'undefined') ? dpObj.capability : \"RW\";\n    if ((capp === \"WW\") || (capp === \"GW\")) {\n        delete req.payload.operation;\n        req.payload.set = null;\n    }\n} else\nif (_isset(msg)) {\n    req.payload.set = msg.payload.value;\n    }\nreturn [req, null];\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":450,"y":700,"wires":[["4b771bf3.b8cef4"],["18817677.061b9a","7d976f84.81d9a"],["44804bb7.72ee84"]],"outputLabels":["tuya","fake","skip"],"info":"CUSTOMIZATION:\n\nEdit the code to add a custom encode function.\n\nmore: \n2. add the same custom encode function to the 'format command' node\n1. add the dual custom decode function to the 'OUT data process' node\n3. add the CODENAME in the `tuyahome.lookupdecode` table."},{"id":"c084a743.290b28","type":"link in","z":"173260fb.d021ff","name":"fast_cmds","links":["1af71950.31eac7","2c0e5d31.d02b72","4242c140.fdbb2","5e693599.3f435c","739fba48.a46514","851bcf96.8ecb6","8834ba78.eef318","a131d6fe.bff008","a51db0ff.4ca74","acd5152b.5e1448","ad341350.43d4f","c86d3479.eb2f78","e4885bae.99dd58","e8f89f67.1aa7f","eea2d98c.558178","6db5220c.6c9b0c","893c740c.51b898","82e72cec.e2391","6473326d.c244ac","d4e02463.0041e8","2ed08207.23ffae"],"x":200,"y":700,"wires":[["5e8accb.6b52034"]],"l":true,"info":"Fast IN (internal use)\n\nDifferences from standard 'IN commands':\n 1.  No messages on debug pad, no log on DB\n 2.  No test of the capabilities in `alldevices`: all commands are processed.\n 3.  _So we can set `device.capabilities='NONE'` to block all commands from 'IN commands', but still executing commands from 'fast IN'._\n 4.  For tuyaDEAMON commands see 'std_cmd' node.\n"},{"id":"cf230930.f37938","type":"function","z":"f30e8140.1bed9","name":"","func":"\nfunction _sendCmd(adev, adp, aval) {\n    var res = {\n        payload :{\n            device:   adev,\n            property: adp,\n            value:    aval\n        }\n    }\n    if (msg.payload !== undefined){\n      if  (msg.payload.device   !== undefined)\n          res.payload.device = msg.payload.device;\n      if  (msg.payload.property   !== undefined)\n          res.payload.property = msg.payload.property;\n      if  (msg.payload.value   !== undefined)\n        res.payload.value = msg.payload.value;\n    }\n    return res;\n}\n\nvar value = env.get(\"value\").toString().trim();\n    if (value.startsWith('@')){\n        value = eval(value.substring(1));\n    }\n\nreturn _sendCmd(env.get(\"device\"), env.get(\"property\"), value);\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":60,"wires":[[]]},{"id":"a9d13fa.6649ec","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"watering main","disableAutoStart":false,"deviceId":"bfa9c64e128b39eddcgwyt","deviceKey":"efc4bad697ae5ea2","deviceIp":"","retryTimeout":"10799","findTimeout":"7963","tuyaVersion":"3.1","eventMode":"event-both","x":1200,"y":500,"wires":[["2ec83963.a7d146"],["3667be8e.cb5972"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"b896058b.3f9028","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bfa1bdeb107d379fbckkwv","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":540,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true."},{"id":"785a29f.5c5e2d8","type":"comment","z":"173260fb.d021ff","name":"for system only","info":"","x":1920,"y":340,"wires":[]},{"id":"4ada67ea.91c738","type":"mysql","z":"173260fb.d021ff","d":true,"mydb":"93f8bfd.d0c854","name":"*append to DB remote","x":1540,"y":1320,"wires":[[]],"info":"CUSTOMIZATION\n\nEdit for DB url and credentials. \nDisable/delete if not used."},{"id":"44804bb7.72ee84","type":"link out","z":"173260fb.d021ff","name":"skip: to logging","links":["9fe80f7e.f3f7e"],"x":555,"y":740,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"6f287998.d91408","type":"link out","z":"173260fb.d021ff","name":"to logging","links":["9fe80f7e.f3f7e"],"x":1875,"y":1520,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"5ff0742e.cec73c","type":"link in","z":"89f87d49.41b81","name":"conn_ev_IN","links":["edf84736.d76338"],"x":195,"y":240,"wires":[["dcb6b333.2b26a"]],"icon":"node-red/arrow-in.svg"},{"id":"9a64c33b.0742e","type":"function","z":"89f87d49.41b81","name":"WiFi check","func":"\n// ceck  devices  AC and  AC + battery ('UPS'): all unconnected => WiFi down\n// version 1.1 (use of _callJSONMethod)\n// ===================================== do not change\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n//\nvar CONN = \"_connected\"; //  dps = CONN, same as name, see also sub-flow \"connected\" function\nvar PWIFI = \"_WiFinet\";\nvar PAC = \"_ACpower\";\nvar ULST = \"_WiFiunconnected\";\nvar tuyastatus;\nvar count = 0;\nvar tot = 0;\nvar arraybad = [];\n\nfunction _sendOUT(value, list) {\n    // builds an artificial OUT message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {\n                    [PWIFI]: value,\n                    [ULST]: list\n                }\n            }\n        }\n    };\n    return newMsg;\n}\n\nfunction _checkWIFI(o) {\n    if ((o.power === undefined) || (o.power === 'BAT'))\n        return;\n    var stAcc = (o.name ===  undefined? o.id: o.name);     // real, only name/id\n    if (tuyastatus[stAcc] === undefined) return;\n    var usrCONN = _callJSONMethod(alld, \"__getDpsName\", o, CONN);\n    if (tuyastatus[stAcc][usrCONN] === undefined) return; //  _connected not updated\n// ok\n    tot++;\n    if (tuyastatus[stAcc][usrCONN]) {\n        count++;\n    } else {\n        arraybad.push(stAcc);\n    }\n}\n\n// ---------------- main\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    return null;\n// find object dp\nvar oDev =       _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrWIFI =    _callJSONMethod(alld, \"__getDpsName\", oDev, PWIFI);\nvar usrAC =      _callJSONMethod(alld, \"__getDpsName\", oDev, PAC);\n\nvar oldlist = flow.get(ULST);\nvar oldPWIFI = flow.get(PWIFI);\n\ncount = 0;\ntot = 0;\n\n// testing:\nalld.real.forEach(element => _checkWIFI(element));\n\n// function outputs:\nif (tot < 1) {\n    node.status({\n        fill: \"yellow\",\n        shape: \"dot\",\n        text: \"WiFi devices not found\"\n    });\n    return null;\n}\n\nflow.set(ULST, arraybad);\nflow.set(PWIFI, (count > 0));\n\nvar sendnew = (JSON.stringify(oldlist) !== JSON.stringify(arraybad));\nvar sendPWIFI =((count > 0) !== oldPWIFI);\n\nnode.status({\n    fill: (count == 0 ? \"red\" : \"green\"),\n    shape: \"ring\",\n    text: \"WiFi devices ON: \" + count + \"/\" + tot\n});\n\nvar nmsg = _sendOUT((count > 0), arraybad);\n\nif (!sendPWIFI) {\n    delete nmsg.payload.data.dps[PWIFI];\n}\n\n// return(update, alarm)\nif (sendnew && (tuyastatus[sysDevName] !== undefined) && (tuyastatus[sysDevName][usrWIFI] === (count == 0)))\n\tif (tuyastatus[sysDevName][usrAC])  // alarm only if AC OK\n        return [nmsg, nmsg];\nif (sendnew)\n    return [nmsg, null];\n    \nreturn [null, null];\n","outputs":2,"noerr":0,"initialize":"/// Code added here will be run once\n// whenever the node is deployed.\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n// ---------------- main\nvar PWIFI = \"_WiFinet\";\nvar ULST = \"_WiFiunconnected\";\n\n// stuff to access data and initialize tuyastatus\nvar alld = global.get(\"alldevices\");\nif (alld === undefined) return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrWiFi = _callJSONMethod(alld, \"__getDpsName\", oDev, PWIFI);\nvar usrLWiFi = _callJSONMethod(alld, \"__getDpsName\", oDev, ULST);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[sysDevName] === undefined)\n    tuyastatus[sysDevName] = {};\n// init\ntuyastatus[sysDevName][usrWiFi] = \"start\";\ntuyastatus[sysDevName][usrLWiFi] = [\"new\"];\n//\nnode.status({\n    fill: \"yellow\",\n    shape: \"dot\",\n    text: \"start\"\n});\nglobal.set(\"tuyastatus\", tuyastatus);\nflow.set(ULST, [\"new\"]);\nflow.set(PWIFI, 'new');\n","finalize":"","x":750,"y":300,"wires":[["cd81b742.e8a268"],["12b49b65.6585c5"]]},{"id":"142bb8a.ab9a247","type":"delay","z":"89f87d49.41b81","name":"","pauseType":"delay","timeout":"400","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":350,"y":300,"wires":[["9a64c33b.0742e"]]},{"id":"687b57e7.524a28","type":"http request","z":"89f87d49.41b81","name":"Nodered site get","method":"GET","ret":"txt","paytoqs":"ignore","url":"http://nodered.org","tls":"","persist":false,"proxy":"","authType":"","x":540,"y":360,"wires":[["4a1c4dc.2b969b4"]]},{"id":"4a1c4dc.2b969b4","type":"function","z":"89f87d49.41b81","name":"LAN check","func":"// checks WEB page\n// version 1.1 (use of _callJSONMethod)\n// ===================================== do not change\nPLAN = \"_LANnet\";\n//\nfunction _sendOUT(key, value) {\n    // builds a fake OUT message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {\n                    [key]: value\n                }\n            }\n        }\n    };\n    return newMsg;\n}\n\nvar oldlan =flow.get(PLAN);\n// this test must be updated in case of node-red home page change\nvar newlan = (msg.payload.indexOf('is a programming tool for wiring') !== -1);\nif  (oldlan === newlan) return null;\n//\nflow.set(PLAN, newlan);\n//\nif (newlan) {\n    node.status({\n        fill: \"green\",\n        shape: \"ring\",\n        text: \"LAN connected\"\n    });\n    return (_sendOUT(PLAN, true));\n} else {\n    node.status({\n        fill: \"red\",\n        shape: \"ring\",\n        text: \"LAN disconnected\"\n    });\n    return (_sendOUT(PLAN, false));\n}\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nPLAN = \"_LANnet\";\n// ---------------- main\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined) return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrLAN = _callJSONMethod(alld, \"__getDpsName\", oDev, PLAN);\n// init\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[sysDevName] === undefined)\n    tuyastatus[sysDevName] = {};\n // default\n tuyastatus[sysDevName][usrLAN] = \"start\";   \n //\nnode.status({\n    fill: \"yellow\",\n    shape: \"dot\",\n    text: \"start\"\n});\nglobal.set(\"tuyastatus\", tuyastatus);\nflow.set(PLAN, \"new\");\n\n","finalize":"","x":750,"y":360,"wires":[["663d9857.7d8de8","cd81b742.e8a268"]]},{"id":"cd81b742.e8a268","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":1275,"y":180,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"6d096148.e5e38","type":"function","z":"89f87d49.41b81","name":"ACpower check","func":"// devices AC powered + no batteries: all off => AC power down\n// version 1.1 (use of _callJSONMethod)\n// ===================================== do not change\nvar CONN = \"_connected\"; //  dps = CONN, see also sub-flow \"connected\" function\nvar PAC = \"_ACpower\"; // can have friendly name\nvar ULST = \"_ACunconnected\";\n//\nvar tuyastatus;\nvar count = 0;\nvar tot = 0;\nvar arraybad = [];\n// --------------- locals\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nfunction _sendOUT(value, list) {\n    // builds an artificial SET MULTIPLE message\n    var newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {\n                    [PAC]: value,\n                    [ULST]: list\n                }\n            }\n        }\n    };\n    return newMsg;\n}\n// called for any real device in alldevices\nfunction _checkAC(o) {\n    if ((o.power === undefined) || (o.power !== 'AC'))\n        return;\n    var usrDev = (o.name === undefined) ? o.id : o.name;\n    if (tuyastatus[usrDev] === undefined) return; // not found\n    var usrCONN = _callJSONMethod(alld, \"__getDpsName\", o, CONN);\n    if (tuyastatus[usrDev][usrCONN] === undefined) return; //  _connected not updated\n    // ok, test\n    tot++;\n    if (tuyastatus[usrDev][usrCONN]) {\n        count++;\n    } else {\n        arraybad.push(usrDev);\n    }\n}\n\n\n// ---------------- main\n\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    return null;\n// find object dp\nvar oDev =       _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrPAC =     _callJSONMethod(alld, \"__getDpsName\", oDev, PAC);\n\nvar oldlist = flow.get(ULST);\nvar oldPAC = flow.get(PAC);\ncount = 0;\ntot = 0;\n\n// testing:\nalld.real.forEach(element => _checkAC(element));\nflow.set(ULST, arraybad);\nflow.set(PAC, (count > 0));\n\n// case: no devices - no send\nif (tot < 1) {\n    node.status({\n        fill: \"yellow\",\n        shape: \"dot\",\n        text: \"AC devices not found\"\n    });\n    return null;\n}\n// conditions to send\nvar sendnew =  (JSON.stringify(oldlist) !== JSON.stringify(arraybad));\nvar sendPAC =((count > 0) !== oldPAC);\n\n// set status & msg\nnode.status({\n    fill: (count == 0 ? \"red\" : \"green\"),\n    shape: \"ring\",\n    text: \"AC devices ON: \" + count + \"/\" + tot\n});\nvar nmsg = _sendOUT((count > 0), arraybad);\nif (!sendPAC) {\n    delete nmsg.payload.data.dps[PAC];\n}\n\n// return(update, alarm)\nif ((tuyastatus[sysDevName] != undefined) && sendnew && (tuyastatus[sysDevName][usrPAC] === (count == 0)))\n    return [nmsg, nmsg];\nif (sendnew)\n    return [nmsg, null];\n\nreturn [null, null];\n","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n// ---------------- main\nvar PAC = \"_ACpower\"; // can have friendly name\nvar ULST = \"_ACunconnected\";\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", \"_system\", \"fake\");\nvar sysDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\nvar usrAC = _callJSONMethod(alld, \"__getDpsName\", oDev, PAC);\nvar usrLAC = _callJSONMethod(alld, \"__getDpsName\", oDev, ULST);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[sysDevName] === undefined)\n    tuyastatus[sysDevName] = {};\n// init\ntuyastatus[sysDevName][usrAC] = \"start\";\ntuyastatus[sysDevName][usrLAC] = [\"new\"];\n//\nnode.status({\n    fill: \"yellow\",\n    shape: \"dot\",\n    text: \"start\"\n});\nglobal.set(\"tuyastatus\", tuyastatus);\nflow.set(ULST, [\"new\"]);\nflow.set(PAC, \"new\");","finalize":"","x":760,"y":240,"wires":[["cd81b742.e8a268"],["5ff8c041.2a12a"]]},{"id":"12b49b65.6585c5","type":"link out","z":"89f87d49.41b81","name":"WIFI_ALARM","links":[],"x":1220,"y":300,"wires":[],"l":true,"info":"TRIGGER for custom flows.\n\nFired at any change."},{"id":"5ff8c041.2a12a","type":"link out","z":"89f87d49.41b81","name":"AC_ALARM","links":[],"x":1230,"y":240,"wires":[],"l":true,"info":"TRIGGER for custom flows.\n\nFired at any change."},{"id":"663d9857.7d8de8","type":"link out","z":"89f87d49.41b81","name":"LAN_ALARM","links":[],"x":1230,"y":360,"wires":[],"l":true,"info":"TRIGGER for custom flows.\n\nFired at any change."},{"id":"580c2cc4.3ac424","type":"link in","z":"89f87d49.41b81","name":"from core.fake_cmds","links":["18817677.061b9a"],"x":115,"y":180,"wires":[["bda34507.6839e8"]],"icon":"node-red/arrow-in.svg"},{"id":"bda34507.6839e8","type":"function","z":"89f87d49.41b81","name":"checks all fake cmds, _system cmd selector (1)","func":"// Implementation of GET/SET/SCHEMA  commands \n// for 'abstract' device \"_system\"\n// part 1: use of _getGlobalValue(mx).\n\n// ------------- check for ALL fake cmds, here for convenience\nif (typeof(msg.to) === undefined)\n         node.warn([\"ASSERT fail: in Fake-msg the msg.to (id) must exist.\",msg]) ;   \n\nif (msg.toDev)\n         node.warn([\"ASSERT fail: in Fake-msg the msg.toDev is NOT required.\",msg]) ;   \n         \nif (typeof(msg.infodp) !== \"string\")\n         node.warn([\"ASSERT fail: msg.infodp (string) must exist.\",msg]) ;   \n  \nif (msg.payload.dp)\n         node.warn([\"temporary ASSERT fail: msg.payload.dp (string) is obsolete.\",msg]) ;   \n  \n// --------------- locals\n// implements some watering_sys dp by inheritace + local override\nconst DEVIDSYS = \"_system\";\n\n// fast exit\nif (msg.to !== DEVIDSYS) return([null]);\n\n// --------------- generic stuff\n// test: idDev GET command?\nfunction _isGetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n\nfunction _getGlobalValue(mx){\nvar tuyastatus = global.get(\"tuyastatus\");\nif ((tuyastatus !== undefined) && (tuyastatus[mx.payload.device] !== undefined)) { // ok device field\n   if (mx.infodp === \"schema\") \n          return tuyastatus[mx.payload.device];\n   return tuyastatus[mx.payload.device][mx.payload.property];\n   }\nreturn undefined;\n}\n\nfunction _getHome() {\n    let netmap = global.get(\"remotemap\");\n    return (netmap.itself);\n}\n\n// base message to log\nvar newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {}\n            }\n        }\n    };\n    \nif (_isGetCommand(msg)) {  // a GET\n   switch (msg.infodp){\n      case \"_ACpower\":\n      case \"_WiFinet\":\n      case \"_LANnet\":\n      case \"_DBase\":\n      case \"_proxy\":\n      case \"_laststart\":\n      case \"_trgPing\":\n      case \"_timerON\":\n      case \"_timerOFF\":\n      case \"_ACunconnected\":\n      case \"_WiFiunconnected\":\n      case \"_doSCHEMA\":\n      case \"_doUPDATE\":\n      case \"_doBenchmark\":\n      case \"_doTrigger\":\n      case \"_exec\":\n            // GET implemented reading tuyastatus\n            newMsg.payload.data.dps[msg.infodp] = _getGlobalValue(msg);\n            return([null, newMsg]);\n      case \"schema\":\n           // in schema case, _getGlobalValue   returns the dps: {dp:value,...}\n            newMsg.payload.data.dps = _getGlobalValue(msg);           \n            return([null, newMsg]);\n      case \"_name\":\n            newMsg.payload.data.dps[msg.infodp] = _getHome(msg);\n            return([null, newMsg]);\n   }\n}// endif GET\n\nif (_isSetCommand(msg)) {  // a SET\n// here only _proxy\n    switch (msg.infodp){\n      case \"_proxy\":\n          // set  the http REST request\n            let urls = global.get(\"remotemap\");\n            var out = {\n                   url: null,\n                   headers: null,\n                   payload : msg.payload.value, \n                   };\n               out.payload[\"remote_from\"] =  urls.itself;     \n               let tor  = msg.payload.value.remote;\n               if (tor ===  urls.itself){\n                    out.url = urls.local[tor]+\"/tuyaDAEMON\";\n                } else {\n                    out.url = urls.remote[tor]+\"/tuyaDAEMON\";\n                }\n                if(out.url === \"undefined/tuyaDAEMON\"){\n                   node.warn([\"ERROR [_system]: server \"+tor+\" not found: \", urls]);\n                   return ([null]);\n            }\n// only value JSON            \n            let jv = JSON.stringify(out.payload.value);\n            out.payload.value = jv;\n            delete out.payload.remote;\n            return([out]);\n   }\n} // endif SET\n// not found: no error.  goto next selector\nreturn([null, null, msg]);\n","outputs":3,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nvar zerobnch = {\n    \"device\":\"_system\",\n    \"property\":\"_zeroTask\",\n     }\n    \nflow.set(\"benchmark\", zerobnch);\nflow.set(\"bnch_status\", \"wait\")\n \n// [\"_doSCHEMA\",\"_doUPDATE\",\"_ACpower\",\"_ACunconnected\",\"_benchmark\",\"_benchmark_end\",\"_DBase\",\"_doBenchmark\",\"_LANnet\",\"_laststart\",\"_name\",\"_proxy\",\"_sqlBDlocal\",\"_sqlDBandroid\",\"_timerList\",\"_trgPing\",\"_WiFinet\",\"_WiFiunconnected\",\"_zeroLog\",\"_zeroTask\"]\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname]));       // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d);    //invoke the function using arguments\n}\n\n// ---------------- main\nvar SYS = \"_system\"; // can have friendly name\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", SYS, \"fake\");\nvar pmDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[pmDevName] === undefined)\n    tuyastatus[pmDevName] = {};\n// init\ntuyastatus[pmDevName][\"_connected\"] = true;\n// intit all GETable dps\n// from _system/doSCHEMA response\nlet dps = [\"_doSCHEMA\",\"_doUPDATE\",\"_ACpower\",\"_ACunconnected\",\"_benchmark\",\"_benchmark_end\",\"_DBase\",\"_doBenchmark\",\"_LANnet\",\"_laststart\",\"_name\",\"_proxy\",\"_sqlBDlocal\",\"_sqlDBandroid\",\"_timerList\",\"_trgPing\",\"_WiFinet\",\"_WiFiunconnected\",\"_zeroLog\",\"_zeroTask\"]\ndps.forEach((dp) => { tuyastatus[pmDevName][dp] = \"none\"; } );\nglobal.set(\"tuyastatus\", tuyastatus);\n","finalize":"","x":340,"y":180,"wires":[["94d30962.525188"],["cd81b742.e8a268"],["50ec6aac.a59194"]],"outputLabels":["proxy","AC",""]},{"id":"f8963a3a.79abc8","type":"trigger","z":"89f87d49.41b81","name":"","op1":"","op2":"ok","op1type":"nul","op2type":"str","duration":"2","extend":true,"overrideDelay":false,"units":"s","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":360,"y":360,"wires":[["687b57e7.524a28"]]},{"id":"dcb6b333.2b26a","type":"trigger","z":"89f87d49.41b81","name":"","op1":"1","op2":"0","op1type":"str","op2type":"str","duration":"1500","extend":true,"overrideDelay":false,"units":"ms","reset":"","bytopic":"all","topic":"topic","outputs":1,"x":340,"y":240,"wires":[["142bb8a.ab9a247","f8963a3a.79abc8","6d096148.e5e38"]]},{"id":"94d30962.525188","type":"http request","z":"89f87d49.41b81","name":"call remote REST","method":"GET","ret":"txt","paytoqs":"query","url":"","tls":"","persist":false,"proxy":"","authType":"","x":790,"y":140,"wires":[["2d0192cb.9b177e","6586860d.481bb8"]]},{"id":"2d0192cb.9b177e","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"proxy log","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_proxy","type":"str"},{"name":"value","value":"@JSON.parse(msg.payload)","type":"str"}],"x":1000,"y":100,"wires":[["cd81b742.e8a268"]]},{"id":"50aa886b.a0fde8","type":"inject","z":"89f87d49.41b81","name":"auto","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":755,"y":420,"wires":[["9f1e4fcd.e8d9c"]],"icon":"node-red/trigger.svg","l":false},{"id":"9f1e4fcd.e8d9c","type":"function","z":"89f87d49.41b81","name":"start timestamp","func":"\n// =======================  main version 1.1\n// local function to iniect in node \"to logging\"\nfunction _sendSys(key,value){\n// builds a fake OUT message \nvar newMsg = { \"payload\":{\n      \"deviceId\": \"_system\",\n      \"data\": {\n         \"dps\":{\n              [key]:value\n          }}}};\nreturn newMsg;  \n}\n\n// returns data.t or now(), formatted for mySQL, never fails\n// datetime format for mySQL: '2020-12-18 20:45:02' using 'sv' for date format + local timezone\nfunction _mySQLdatetime(mx = null) {\n   if ((mx == null) || (mx.payload.data.t === undefined))\n      return (new Date().toLocaleString('sv'));\n   return (new Date(Number(mx.payload.data.t) * 1000).toLocaleString('sv'));\n}\n\nreturn  _sendSys(\"_laststart\", _mySQLdatetime());\n\n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n\n// initializes tuyastatus._system\n function getSysObj(alldevices){\n if  (alldevices === undefined) return(alldevices);\n return   alldevices.fake.find(device => device.id === \"_system\");\n }\n \n function getDevUsrName(odev){\n  if  (odev.name !== undefined) return(odev.name);\n  return (odev.id);   \n }\n\n\nfunction getDpUsrName(dpx, odev){\n  if  ((odev !== undefined) && (Array.isArray(odev.dps))){\n      var dpo = odev.dps.find(dpnt => dpnt.dp === dpx);\n      if ((dpo !== undefined) && (dpo.name !== undefined)) \n         return (dpo.name);\n  }\n  return (dpx);   \n }\n\nvar osys = getSysObj(global.get(\"alldevices\"));\nif (osys === undefined) return;\nvar tuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus == undefined)\n        tuyastatus = {};\nvar sysUsrName = getDevUsrName(osys);\nif (tuyastatus[sysUsrName] == undefined)\n        tuyastatus[sysUsrName] = {};\nvar startUsrName = getDpUsrName(\"_laststart\",osys);\ntuyastatus[sysUsrName][startUsrName] = null ; \nglobal.set(\"tuyastatus\", tuyastatus);\n \n\n","finalize":"","x":1020,"y":420,"wires":[["5a8e972b.19e048","37306de6.0a7f42"]],"info":"A message at the end of initial setup time (on my PC 7-8s). ready."},{"id":"5a8e972b.19e048","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":1115,"y":460,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"37306de6.0a7f42","type":"link out","z":"89f87d49.41b81","name":"start_DEAMON","links":["38438695.852b9a","7454f585.417bcc","23901296.83a0ae","99db9a3e.c2c4a8","676a993c.b2a4a8","1b76f6cb.66b489"],"x":1220,"y":420,"wires":[],"l":true},{"id":"46ee1dd3.444b64","type":"link out","z":"89f87d49.41b81","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":1395,"y":540,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"dddd354b.758718","type":"function","z":"89f87d49.41b81","name":"ACK  process","func":"var delta;\n\n// test on all tuya_bridge messages\n// output:  finish/ reset/more loops\nif  ((msg.payload.tuyatrigger > 699) &&\n     (msg.payload.tuyatrigger < 1000)){\n     // fallback in case of missed  ACK: restart and keep alive\n     flow.set(\"tsstart\", 0);\n     return([null, msg, msg]); \n     }\n\nif(msg.payload.tuyatrigger != 0 ) // not ACK,  nothing to do\n     return([null,null,null]); \n\n// standard 0 ACK,  nothing to do\n    var old = flow.get(\"tsstart\");\n    if (old === 0)  return([null,null,null]);   // not in ping test\n    \n    var back = Date.now();\n    delta = back - old;\n    if ((delta > 2000) || (delta < 20)) { \n// fallback in case of timeout: restart and keep alive\n         flow.set(\"tsstart\", 0);\n         return([null, null, msg]);\n         }\n\n// ok, updates stats\n  var stats = flow.get(\"pingstat\") ; \n //flow.set(\"pingstat\",{\n //     test: 0,\n //     total:0,\n //     min: 100000000000,\n //     max:0\n // set data    \n   stats.sum += delta;\n    if( stats.min > delta)\n         stats.min = delta;\n    if( stats.max < delta)\n         stats.max = delta;\n    stats.test++;  \n    stats.total--;   \n    flow.set(\"pingstat\", stats);\n \n  if (stats.total >0)  {       // more  tests  \n      flow.set(\"tsstart\", 0);\n      return [null, null, msg];\n      }   \n\n// done, does statistics & msg  \n var st = {\n    \"deviceId\":\"_system\",\n    \"data\":{\n       \"dps\":{\n           \"_trgPing\":{\n               \"count\": stats.test,\n               \"avg\": Math.floor(stats.sum/stats.test),\n               \"max\": stats.max,\n               \"min\": stats.min\n           }\n       }\n    }};  \n   msg.payload = st;\n   flow.set(\"tsstart\", 0);\n// sends results  \n   return([msg, null, null]);\n\n","outputs":3,"noerr":0,"initialize":"","finalize":"","x":750,"y":540,"wires":[["83ac5d1.6b830a"],["dd6c0562.0102c8"],["42fe8eba.e6aa7"]],"outputLabels":["log result","reset0","more"]},{"id":"c23760b2.45d3a","type":"link in","z":"89f87d49.41b81","name":"ping_test","links":["6da77dc2.b387a4"],"x":615,"y":560,"wires":[["dddd354b.758718"]],"icon":"font-awesome/fa-expand"},{"id":"42fe8eba.e6aa7","type":"delay","z":"89f87d49.41b81","name":"more: delay 3","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1020,"y":560,"wires":[["b586e45e.3e10e8"]]},{"id":"589ce690.7b0f58","type":"function","z":"89f87d49.41b81","name":"5","func":"\n flow.set(\"tsstart\", 0);\n flow.set(\"pingstat\",{\n      total:node.name,\n      test: 0,\n      sum:0,\n      min: 100000000000,\n      max:0\n});\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n flow.set(\"tsstart\", 0);","finalize":"","x":810,"y":620,"wires":[["b586e45e.3e10e8"]],"info":"Set the node name only to the ping number required for the test"},{"id":"50ec6aac.a59194","type":"function","z":"89f87d49.41b81","name":"_system cmd selector (2)","func":"// selects&executes commands for _system: part 2\n\n// --------------- locals\nconst DEVID = \"_system\";\nconst triggerDP = 7;  // tuya-bridge countdown\n\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// test: _system GET command?\nfunction _isGetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: _system SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n       \n// get a device ID array from alldevices.    (alldevices, limit = 'real', 'virtual', 'fake',  null (all))  \nfunction getIdArray(alld, limit = null){\n    var arr =[];\n    if ((limit === null) || (limit === 'real'))\n       alld.real.forEach(dev =>    arr.push(dev.name||dev.cid||dev.id));\n    if ((limit === null) || (limit === 'virtual'))\n       alld.virtual.forEach(dev => arr.push(dev.name||dev.cid||dev.id));\n    if ((limit === null) || (limit === 'fake'))\n       alld.fake.forEach(dev =>    arr.push(dev.name||dev.cid||dev.id));\n    return arr;\n}\n        \n \n\n//base message to log\nvar newMsg = {\n     payload: {\n         deviceId : \"_system\",\n         data : {\n             dps : {}\n        }\n    }\n};\n\n\n// ============================  fast output processing\nvar req = {\n    to: null,\n    payload: {}\n}\n\n// ------------- main\nif (_isGetCommand(msg)) { // a GET\n    switch (msg.infodp) {\n    case \"_timerList\":\n        return ([null, null, null, {topic: \"list\"}]);\n    case \"_tuyastatus\":\n        return ([null, null, null, null, null, null, null, null, null, null, { payload: msg.payload.value}]);\n    case \"_benchmark\":\n        newMsg.payload.data.dps[msg.infodp] = flow.get(\"benchmark\");\n        return ([null, newMsg]);\n    case \"_zeroLog\":\n    case \"_zeroTask\":               // doing nothing\n        newMsg.payload.data.dps[msg.infodp] = \"done GET \" + msg.infodp;\n        return ([null, newMsg]);\n    case \"_benchmark_step\":\n    case \"_benchmark_end\":\n        msg.payload.value  = \"none\"; // transforms  GET to SET, safe because SET() does nothing\n        break;\n    }\n} // end GET\n\nif (_isSetCommand(msg)) { // a SET\n switch (msg.infodp) {\n    case \"_trgPing\":\n        return ([null, null, msg]);\n// timer\n    case \"_timerON\":\n        if (msg.payload.value.id === undefined)\n            msg.payload.value[\"id\"] = msg._msgid;\n        return ([null, null, null, { topic: \"set\", payload: msg.payload.value } ]);\n    case \"_timerOFF\":\n        return ([null, null, null, { topic: \"clear\", payload: { id: msg.payload.value } } ]);\n// direct access\n    case \"_doTrigger\":\n        msg = { \"payload\": {  \"dps\": triggerDP, \"set\": parseInt(msg.payload.value) } };\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([msg, newMsg]); // _to tuya_bridge:output 1\n    case \"_toLowIN\":\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([null, newMsg, null, null, msg.payload.value]);\n    case \"_toFastIN\":\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([null, newMsg, null, null, null, { payload: msg.payload.value }]);\n    case \"_toStdCmd\":\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([null, newMsg, null, null, null, null, { payload: msg.payload.value }]);\n    case \"_toShare\":\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([null, newMsg, null, null, null, null, null, msg.payload.value]);\n    case \"_toLogging\":\n        return ([null, null, null, null, null, null, null, null, { payload: msg.payload.value } ]);\n    case \"_toWarn\":\n        node.warn(msg.payload.value);\n        return (null);\n    case \"_toDebug\":\n        return ([null, null, null, null, null, null, null, null, null, { payload: msg.payload.value } ]);\n    case \"_beep\":\n        return ([null, null, null, null, null, null, null, null, null, null, null, { payload: global.get(\"beep64\") }]);\n    case \"_play\" :\n        return ([null, null, null, null, null, null, null, null, null, null, null, null, { payload: msg.payload.value }]);\n        \n// global.tuyastus\n    case \"_doSCHEMA\":\n      let alld1 = global.get(\"alldevices\");\n         // becase is used 'fast_cmds', the controls must be done here\n     let o1 = _callJSONMethod(alld1, \"__getODev\", msg.payload.value);\n      let devName = _callJSONMethod(alld1, \"__getDevName\", o1);\n      if ((o1 === undefined)||(o1.dps === undefined)||(o1.dps.count <1) || (o1.capability && o1.capability.includes('NONE'))) {\n               newMsg.payload.data.dps[msg.infodp] = \"Device not READ accessible: \"+ devName;\n               return ([null, newMsg]);\n               }\n       let list1 = [];\n       if((o1.capability === undefined) || o1.capability.includes('SCHEMA')  || o1.capability.includes('ALL')) { // uses SCHEMA\n                 o1.dps.forEach(function(adp){\n                    if ((adp.capability === undefined) || ([\"RW\",\"RO\",\"GW\",\"WW\"].includes(adp.capability)))\n                         list1.push(adp.name || adp.dp.toString());\n                 }); \n                 if (list1.length == 0){\n                       newMsg.payload.data.dps[msg.infodp] = \"WARNING: \"+ devName + \" without READ DPs.\";\n                       return ([null, newMsg]);\n                 }\n                 gmsg ={payload:{'device': devName}} ;\n                 newMsg.payload.data.dps[msg.infodp] = {device: devName, dps_schema: list1};\n                 return ([null, newMsg, null, null, null, gmsg]);\n                 }\n               \n       o1.dps.forEach(function(property) {                               // uses GETs\n           let dpname = property.name || property.dp.toString();\n           if ((property.capability === undefined) || ([\"RW\",\"RO\",\"GW\",\"WW\"].includes(property.capability)) ) {\n                 gmsg ={  payload:{'device': devName,'property': dpname }} ;\n                 node.send([null, null, null, null, null, gmsg]);\n                 list1.push(dpname);\n                 }\n          });\n       if (list1.length == 0){\n                 newMsg.payload.data.dps[msg.infodp] = \"WARNING: \"+ devName + \" without READ DPs.\";\n                 return ([null, newMsg]);\n                 }\n      newMsg.payload.data.dps[msg.infodp] = {device: devName, dps_get: list1};\n      return ([null, newMsg]);\n      \n    case \"_doUPDATE\":\n        let tuyastatus = global.get(\"tuyastatus\");\n        let alld = global.get(\"alldevices\");\n        let allList = getIdArray(alld, msg.payload.value);\n        let list = [];\n        // becase is used 'fast_cmds', the controls must be done here\n        if ((allList === undefined)||(allList.count <1)) {\n               newMsg.payload.data.dps[msg.infodp] = \"WARNING: Not found \" +msg.payload.value+\" devices\";\n               return ([null, newMsg]);\n               }\n        allList.forEach(function(device) {\n            let devO = _callJSONMethod(alld, \"__getODev\", device);\n            var cnx  = _callJSONMethod(alld, \"__getConnectName\", devO);\n            let devconnected = ((tuyastatus[cnx]) && tuyastatus[cnx]._connected);\n            if (devconnected) {\n                gmsg ={  payload:{'device': '_system','property': '_doSCHEMA', 'value': device }} ;\n                node.send([null, null, null, null, null,gmsg]);\n                list.push(device + '; ok');\n                } else {\n                    if (tuyastatus[device])\n                       list.push(device + '; NOT connected');\n                    else\n                       list.push(device + '; *** NOT FOUND in tuyastatus');\n                }\n            });\n        newMsg.payload.data.dps[msg.infodp] = {[(msg.payload.value ? msg.payload.value + \"_devices\":\"devices\")]:list};\n        return ([null, newMsg]);\n\n    case \"_tuyastatus\":\n        return ([null, null, null, null, null, null, null, null, null, null, {\n                    payload: msg.payload.value,\n                    sysname: msg.payload.device,\n                    propname: msg.payload.property } ]);  // to use the usr-names on answer\n// benchmark\n    case \"_zeroTask\":        //  a return msg is required to process 'share'\n        newMsg.payload.data.dps[msg.infodp] = \"done SET _zeroTask\";\n        return ([null, newMsg]);\n    case \"_zeroLog\":         //  analyzes the given 'value' for tests   \n       newMsg.payload.data.dps[msg.infodp] = \"SET value [\" + typeof(msg.payload.value)+\"]: \" + msg.payload.value ;\n       return ([null, newMsg]); \n    case \"_benchmark\":\n        flow.set(\"benchmark\", msg.payload.value);\n        newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n        return ([null, newMsg]);\n    case \"_doBenchmark\":\n        benchmark = flow.get(\"benchmark\");\n         //\n        flow.set(\"benchmark_count\", 1);\n        flow.set(\"bnch_status\", \"run\")\n        //  timer for end benckmark\n        var timex = {\n            \"device\": \"_system\",\n            \"property\": \"_timerON\",\n            \"value\": {\n                \"id\": \"bench\",\n                \"timeout\": benchmark.timeout || 10000,\n                \"alarmPayload\":{\n                    \"share\": [{\n                            \"action\": [{\n                                    \"device\": \"_system\",\n                                    \"property\": \"_benchmark_end\"\n                            }] }]\n                }\n            }\n        }\n        return([null, null, null, null, null, {payload:benchmark}, {payload: timex}]);\n     case \"_benchmark_step\":\n        let bnch_status = flow.get(\"bnch_status\");\n        let c = flow.get(\"benchmark_count\");\n// security exit\n        if (c > 9998){\n              flow.set(\"bnch_status\", \"done\");\n              bnch_status = \"done\";\n         }\n        let benchx = flow.get(\"benchmark\");\n        switch (bnch_status){\n            case(\"run\"):\n               flow.set(\"benchmark_count\", c +1);\n               return ([null, null, null, null, null, {payload: benchx}]);        \n            case(\"done\"):\n                flow.set(\"bnch_status\", \"wait\")\n                newMsg.payload.data.dps[\"_doBenchmark\"] = {\n                    \"count\": c,\n                    \"timeout\": benchmark.timeout || 10000,\n                    \"device\": benchmark.device,\n                    \"property\": benchmark.property };\n                return ([null, newMsg]);\n        }\n        return ([null]);\n     case \"_benchmark_end\":\n       flow.set(\"bnch_status\", \"done\");\n       return([null]);\n    case \"_exec\":\n       return ([null, null, null, null, null, null, null, null, null, null, null, null, null, { payload: msg.payload.value } ]);\n} // end case\n} // endif SET\n// not found: no error.  goto next selector\nreturn ([null, null, null, null, null, null, null, null, null, null, null, null, null, null, msg]);\n","outputs":15,"noerr":0,"initialize":"","finalize":"","x":270,"y":660,"wires":[["1f591255.909d6e","808817eb.3be488"],["83ac5d1.6b830a"],["4a94fec5.a7fe7","3d6f6e6b.025d52"],["886cdd12.7efdd"],["3a1df4f8.435cec"],["e8f89f67.1aa7f"],["a838f77b.9166c8"],["e6e5a7b3.a53aa8"],["aa6116ba.7b69c8"],["eff3642f.49bd28"],["cbbbacd7.70e4"],["7e672c85.ba1aa4"],["92a1f6ed.d388f8"],["52445b44.003e34"],["1ac1311.8bdaecf"]],"outputLabels":["to tuya_bridge","to logging","do trg_ping","do Timer","to low_IN","to fast_IN","to std_IN","to share_IN","to logging_IN","do debug","do tuyastatus","do beep64","do play","to_next",""],"info":"Select GET/SET/SCHEMA/MULTIPLE  commands \nfor 'fake' device\n\nImplementation:\n\n\"_system\":\"_trgPing\" accepts only GET: fires a data refresh.\n             \nThe stadard GET tuyaDAEMON request\n````\n    msg.payload:{\n        \"device\":\"_system\", \n        \"property\":\"_trgPing\"  \n        } \n````        \nfires a flow that implements the command.\n"},{"id":"3d6f6e6b.025d52","type":"delay","z":"89f87d49.41b81","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":660,"y":620,"wires":[["589ce690.7b0f58"]]},{"id":"dd6c0562.0102c8","type":"subflow:66ca1554.e4c85c","z":"89f87d49.41b81","name":"reset: trigger0","env":[{"name":"TRGnumber","value":"0","type":"str"}],"x":1220,"y":540,"wires":[["46ee1dd3.444b64"]]},{"id":"83ac5d1.6b830a","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":875,"y":480,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"c050ff26.cacbe","type":"subflow:66ca1554.e4c85c","z":"89f87d49.41b81","name":"ping: trigger1000","env":[{"name":"TRGnumber","value":"1000","type":"str"}],"x":1210,"y":620,"wires":[["46ee1dd3.444b64"]]},{"id":"b586e45e.3e10e8","type":"function","z":"89f87d49.41b81","name":"start time","func":"\nflow.set(\"tsstart\",Date.now());\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1000,"y":620,"wires":[["c050ff26.cacbe"]]},{"id":"808817eb.3be488","type":"link out","z":"89f87d49.41b81","name":"to trigger.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":375,"y":480,"wires":[],"icon":"node-red/arrow-in.svg"},{"id":"1f591255.909d6e","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_doTrigger","type":"str"},{"name":"value","value":" @msg.payload.set","type":"str"},{"name":"fakeDP","value":"_trigger","type":"str"}],"x":530,"y":460,"wires":[["83ac5d1.6b830a"]]},{"id":"4a94fec5.a7fe7","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_trgPing","type":"str"},{"name":"value","value":"started","type":"str"},{"name":"fakeDP","value":"_trgPing","type":"str"}],"x":530,"y":500,"wires":[["83ac5d1.6b830a"]]},{"id":"8f549c9f.95925","type":"comment","z":"89f87d49.41b81","name":"_system FAKE DEVICE","info":"**SYSTEM is a fake device** \n\n `_system` is a device handled by tuyaDAEMON, and offerts a centralized information point about tuyaDAEMON and devices status.\n\n**The device _system_ is with fallowing capabilities:**\n\ndefined in _tuyaDAEMON_:\n - **_start**: \"2020-12-31 17:56:01\"|null, _the tuyaDAEMON local start time. For the first 8 seconds it is null, to signal the node-red startup._\n - **_ACpower**: true, _if some AC-powerd devices are connected._\n     false, _if all AC powered device are disconnected_\n - **_WiFinet**: true, _if some WiFi devices (not battery-powered) are connected._\n    false, _if all WiFi device are disconnected_\n - **_LANnet**: true, _if a remote server (http://nodered.org) is reachable_\n    false, _otherwise._\n - **_ACunconnected**: array[x], _List of  AC-powered disconnected devices. When == all, the AC ALARM is send._\n - **_WiFiunconnected**: array[x],  _List of WiFi (AC and UPS) disconnected devices. When == all and ACpower == true the WIFI ALARM is send._\n\ndefined in _tuyaTRIGGER_:\n - **_trgPing**: object { count, avg, max, min}, the tuya cloud trigger timing, Do this test in a quiet moment.\n  \nFor users convenice, `system` also present some LINK:\n - **connection event**  _fired every device status change, logged_\n - **AC ALARM**: _sends a msg every change of ACpower_.\n - **WIFI ALARM**: _sends a msg every change of WiFinet, if ACpower is true._\n - **LAN ALARM**: _sends a msg every change of LANnet_.\n \nIn `global.tuyastatus` we can found, using also tuyaTRIGGER, a `_system` object like this:\n````\n    HAL at home: object\n       start: \"2021-01-08 09:32:08\"\n       _ACpower: true\n       _ACunconnected: array[2]\n           0: \"umidificatore\"\n           1: \"Smart IR 3\"\n       _LANnet: true\n       _WiFinet: true\n       _WiFiunconnected: array[2]\n           0: \"umidificatore\"\n           1: \"Smart IR 3\"\n       _trgPing: object\n           count: 4\n           avg: 213\n           max: 260\n           min: 171\n````    \nAnd for any 'real' device (example):           \n\n````\n    Smart IR 1: object\n      _connected: true\n````\n\nnote:  `'system'` is built as an addon: if your application doesn't need those resources, you can disable/delete all _'system' nodes_. Connection events will no longer be processed.","x":220,"y":120,"wires":[]},{"id":"7d976f84.81d9a","type":"debug","z":"173260fb.d021ff","d":true,"name":"*trace: msg IN for Fake devices","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1390,"y":960,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg sended to fake devices.\n- Normal use: disabled"},{"id":"436ff47.238370c","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"power strip","disableAutoStart":false,"deviceId":"3613666124a1600db127","deviceKey":"630673f6ade7b291","deviceIp":"","retryTimeout":"1000","findTimeout":"1000","tuyaVersion":"3.1","eventMode":"event-both","x":1190,"y":620,"wires":[["2ec83963.a7d146"],["7171632e.cb997c"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"a0d5012f.b2551","type":"tuya-smart-device","z":"173260fb.d021ff","d":true,"deviceName":"meter","disableAutoStart":false,"deviceId":"486441603c6105ca6f51","deviceKey":"84bb4fb812611a2d","deviceIp":"","retryTimeout":"2279","findTimeout":"6291","tuyaVersion":"3.3","eventMode":"event-both","x":1170,"y":660,"wires":[["2ec83963.a7d146"],["47aacea1.0d58d"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms).\n \n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON"},{"id":"47aacea1.0d58d","type":"subflow:ee953c15.ada29","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"486441603c6105ca6f51","type":"str"},{"name":"deviceID","value":"42027807d8bfc0c5831e","type":"str"}],"x":1590,"y":660,"wires":[["81103bac.696bc8"]],"info":"CUSTOMIZATION\n\n- duplicate for any new device\n- set properties: deviceID. true.\n\n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON"},{"id":"e37f5692.37de78","type":"serial in","z":"ee008879.f5adc8","name":"*COM19","serial":"45a4b402.6f7e4c","x":820,"y":380,"wires":[["170c898c.35c906","3787ab01.6ee494"]]},{"id":"28f4d04b.ed1b7","type":"serial out","z":"ee008879.f5adc8","name":"*COM19","serial":"45a4b402.6f7e4c","x":820,"y":300,"wires":[]},{"id":"fa5e5a63.b11488","type":"function","z":"ee008879.f5adc8","name":"pick and execute","func":"// converts the msg (dp/set) to serial format required by PM2.5USB\nfunction formatI(n) { // local function\n    return (n > 99 ? \"\" + n : (n > 9 ? \"0\" + n : \"00\" + n));\n}\n\n// returns now(), formatted for mySQL, never fails\nfunction _mySQLdatetime() {\n    //datetime format for mySQL: '2020-12-18 20:45:02'\n    // using 'sv' for date format (but local timezone)\n    return (new Date().toLocaleString('sv'));\n}\n\nfunction isNone(value) { // for resetCycle\n    if (value) {\n        if (typeof(value) === \"string\") {\n            if (value.toUpperCase() === 'OFF')\n                return true;\n            if (value.toUpperCase() === 'NO')\n                return true;\n            if (value.toUpperCase() === 'NONE')\n                return true;\n        }\n        return false;\n    }\n    return true;\n}\n\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.payload.property !== undefined) && (msx.payload.value !== undefined));\n}\n\n// test: idDev GET command?\nfunction _isGetCommand(msx) {\n    return ((msx.payload.property !== undefined) && (msx.payload.value === undefined));\n}\n\nconst FASTDP = \"_refreshCycle\"; // set: 'off'| time [s]\nconst REFDP = \"_refresh\"; // set: any (trigger)\nconst DEVIDPM1 = \"_PM1_USB\";\n//base message to log\nvar newMsg = {\n    payload: {\n        deviceId: DEVIDPM1,\n        data: {\n            dps: {}\n        }\n    }\n};\n\n// ---------------  main\n// fast exit\nif (msg.to !== DEVIDPM1)\n    return ([null]);\n\n// from property/value to serial for PM detector\nif (_isSetCommand(msg)) { // test: is SET\n    // node.warn([\"INPUT cmd\", msg ]);\n    var data = \"\";\n    switch (msg.infodp) {\n    case REFDP:\n        data = {\n            fun: \"05\",\n            flag: flow.set(\"pm_1\")\n        }\n        msg.payload.value = \"done\";\n        break;\n    case \"1\":\n        flow.set(\"pm_\" + msg.infodp, msg.payload.value);\n        data = {\n            fun: \"01\",\n            sendtime: formatI(msg.payload.value)\n        }\n        break;\n    case FASTDP:\n        if (isNone(msg.payload.value)) {\n            data = {\n                fun: \"05\",\n                flag: \"0\"\n            };\n            flow.set(\"pm_5\", \"0\");\n            msg.payload.value = \"stop\";\n            break;\n        }\n        flow.set(\"pm_1\", msg.payload.value);\n        data = {\n            fun: \"01\",\n            sendtime: formatI(msg.payload.value)\n        };\n        msg.payload = JSON.stringify(data);\n        node.send([msg]);\n        flow.set(\"pm_5\", \"1\");\n        data = {\n                fun: \"05\",\n                flag: \"1\"\n            };\n        break;\n    case \"2\":\n        flow.set(\"pm_\" + msg.payload.dp, msg.payload.value);\n        data = {\n            fun: \"02\",\n            storetime: formatI(msg.payload.value)\n        }\n        break;\n    case \"3\":\n        if ((msg.payload.value === undefined) || (msg.payload.value == false))\n            msg.payload.value = _mySQLdatetime().substring(2);\n        data = {\n            fun: \"03\",\n            clock: msg.payload.value\n        }\n        break;\n    case \"4\":\n        data = {\n            fun: \"04\"\n        }\n        msg.payload.value = \"done\"; // is trigger\n        break;\n    case \"5\":\n        msg.payload.value = msg.payload.value ? \"1\" : \"0\";\n        flow.set(\"pm_\" + msg.infodp, msg.payload.value);\n        data = {\n            fun: \"05\",\n            flag: (msg.payload.value ? \"1\" : \"0\")\n        }\n        break;\n    case \"6\":\n        data = {\n            fun: \"06\"\n        }\n        msg.payload.value = \"done\"; // is trigger\n        break;\n    default:\n        node.warn(\"The SET command '\" + msg.payload.property + \"'(\" + msg.infodp + \") => '\" + msg.payload.value + \"' is not allowed for PM detector device '\");\n        return;\n    }\n    newMsg.payload.data.dps[msg.infodp] = msg.payload.value;\n    msg.payload = JSON.stringify(data);\n    return [msg, newMsg];\n}\n\nif (_isGetCommand(msg)) { // test: is GET\n    switch (msg.infodp) {\n    case \"1\":\n    case \"2\":\n    case \"3\":\n    case \"5\":\n        newMsg.payload.data.dps[msg.infodp] = flow.get(\"pm_\" + msg.infodp);\n        return [null, newMsg];\n    case \"80\":\n        msg.payload = '{\"fun\":\"80\"}';\n        return [msg];\n    case FASTDP:\n        newMsg.payload.data.dps[msg.infodp] = flow.get(\"pm_1\");\n        return [null, newMsg];\n\n    }\n    node.warn(\"The GET command '\" + msg.payload.property + \"'(\" + msg.infodp + \") is not allowed for PM detector device '\");\n    return;\n}\n","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"skipdata\", false);\n// set as connected\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname]));       // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d);    //invoke the function using arguments\n}\n\n// ---------------- main\nvar PMd = \"_PM1_USB\"; // can have friendly name\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", PMd, \"fake\");\nvar pmDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[pmDevName] === undefined)\n    tuyastatus[pmDevName] = {};\n// init\ntuyastatus[pmDevName][\"_connected\"] = true;\n// 0: \"refresh cycle\"\n// 1: \"sendtime\"\n// 2: \"storetime\"\n// 3: \"set clock\"\n// 4: \"startRT\"\n// 5: \"WritePoints\"\ntuyastatus[pmDevName][\"refresh cycle\"] = \"none\";\ntuyastatus[pmDevName][\"sendtime\"] = \"none\";\ntuyastatus[pmDevName][\"storetime\"] = \"none\";\ntuyastatus[pmDevName][\"set clock\"] = \"none\";\ntuyastatus[pmDevName][\"startRT\"] = \"none\";\ntuyastatus[pmDevName][\"WritePoints\"] = \"none\";\nglobal.set(\"tuyastatus\", tuyastatus);\n","finalize":"","x":170,"y":320,"wires":[["8ce5e629.3c5ef8"],["e914f703.e257b8"]]},{"id":"170c898c.35c906","type":"function","z":"ee008879.f5adc8","name":"RT data processing","func":"// convert serial data from PM2.5 to usual format\n// payload: object\n//     deviceId: \"123455aa196ae5******\"\n//     data: object\n//        t: 1609234903\n//        dps: object\n//           102: 1020\n//\nvar answ = {\n    deviceId: \"_PM1_USB\",\n    data : {\n          t : Math.floor(Date.now() / 1000),\n          dps : {\n              \n          }\n       }\n    }\n\nvar data = JSON.parse(msg.payload.replace(\",}\",\"}\")); \n\nswitch (data.res) {\n        case \"1\":\n        case \"2\":\n        case \"3\":\n              answ.data.dps[data.res] = flow.get(\"pm_\"+data.res);\n              break;\n        case \"5\":\n              answ.data.dps[data.res] =  \" done \";\n              break;\n        case \"4\":\n              if (flow.get(\"skipdata\")) return;\n              if (Number(data[\"cpm1.0\"]) == 0) return;  // bad data\n              answ.data.dps = {\n                 200: Number(data[\"cpm1.0\"]),\n                 201: Number(data[\"cpm2.5\"]),\n                 202: Number(data[\"cpm10\"]),\n                 203: Number(data[\"apm1.0\"]),\n                 204: Number(data[\"apm2.5\"]),\n                 205: Number(data[\"apm10\"]),\n                 206: Number(data[\"aqi\"]),\n                 207: data[\"t\"],\n                 208: Number(data[\"r\"])\n              }\n              break;\n        case \"6\":\n              answ.data.dps[data.res] = \"done \";\n              break;\n        case \"10\":       // start historical data\n              flow.set(\"skipdata\", true);\n              return;\n        case \"80\":\n              answ.data.dps = {\n                 1 : Number(data[\"SendInteralTime\"]),\n                 2 : Number(data[\"StoreInteralTime\"]),\n                 80: Number(data[\"WritePoint\"]),\n                 81: Number(data[\"ReadPoint\"]),\n                 82: Number(data[\"SendInteralFlag\"])\n              }\n              break;\n\n   }\nmsg.payload = answ;    \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1070,"y":420,"wires":[["c72cf7d0.7ff3c8"]]},{"id":"bf4e83f7.f5f21","type":"link in","z":"ee008879.f5adc8","name":"from core.fake_cmds","links":["18817677.061b9a","96b99b98.5c7788"],"x":35,"y":320,"wires":[["fa5e5a63.b11488"]]},{"id":"c72cf7d0.7ff3c8","type":"link out","z":"ee008879.f5adc8","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":1275,"y":420,"wires":[]},{"id":"7a6b37c.31c36c8","type":"timerswitch","z":"ee008879.f5adc8","name":"every hour","ontopic":"","offtopic":"","onpayload":"{\"fun\":\"05\",\"flag\":\"0\"}","offpayload":"null","disabled":false,"schedules":[{"on_h":"00","on_m":"58","on_s":"00","off_h":"00","off_m":"59","off_s":"00","valid":true},{"on_h":"01","on_m":"58","on_s":"00","off_h":"01","off_m":"59","off_s":"00","valid":true},{"on_h":"02","on_m":"58","on_s":"00","off_h":"02","off_m":"59","off_s":"00","valid":true},{"on_h":"03","on_m":"58","on_s":"00","off_h":"03","off_m":"59","off_s":"00","valid":true},{"on_h":"04","on_m":"58","on_s":"00","off_h":"04","off_m":"59","off_s":"00","valid":true},{"on_h":"05","on_m":"58","on_s":"00","off_h":"05","off_m":"59","off_s":"00","valid":true},{"on_h":"06","on_m":"58","on_s":"00","off_h":"06","off_m":"59","off_s":"00","valid":true},{"on_h":"07","on_m":"58","on_s":"00","off_h":"07","off_m":"59","off_s":"00","valid":true},{"on_h":"08","on_m":"58","on_s":"00","off_h":"08","off_m":"59","off_s":"00","valid":true},{"on_h":"09","on_m":"58","on_s":"00","off_h":"09","off_m":"59","off_s":"00","valid":true},{"on_h":"10","on_m":"58","on_s":"00","off_h":"10","off_m":"59","off_s":"00","valid":true},{"on_h":"11","on_m":"58","on_s":"00","off_h":"11","off_m":"59","off_s":"00","valid":true},{"on_h":"12","on_m":"58","on_s":"00","off_h":"12","off_m":"59","off_s":"00","valid":true},{"on_h":"13","on_m":"58","on_s":"00","off_h":"13","off_m":"59","off_s":"00","valid":true},{"on_h":"14","on_m":"58","on_s":"00","off_h":"14","off_m":"59","off_s":"00","valid":true},{"on_h":"15","on_m":"58","on_s":"00","off_h":"15","off_m":"59","off_s":"00","valid":true},{"on_h":"16","on_m":"58","on_s":"00","off_h":"16","off_m":"59","off_s":"00","valid":true},{"on_h":"17","on_m":"58","on_s":"00","off_h":"17","off_m":"59","off_s":"00","valid":true},{"on_h":"18","on_m":"58","on_s":"00","off_h":"18","off_m":"59","off_s":"00","valid":true},{"on_h":"19","on_m":"58","on_s":"00","off_h":"19","off_m":"59","off_s":"00","valid":true},{"on_h":"20","on_m":"58","on_s":"00","off_h":"20","off_m":"59","off_s":"00","valid":true},{"on_h":"21","on_m":"58","on_s":"00","off_h":"21","off_m":"59","off_s":"00","valid":true},{"on_h":"22","on_m":"58","on_s":"00","off_h":"22","off_m":"59","off_s":"00","valid":true},{"on_h":"23","on_m":"58","on_s":"00","off_h":"23","off_m":"59","off_s":"00","valid":true}],"x":415,"y":280,"wires":[["bb7ed790.b50db8","8ce5e629.3c5ef8"]],"l":false},{"id":"bb7ed790.b50db8","type":"delay","z":"ee008879.f5adc8","name":"","pauseType":"delay","timeout":"200","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":590,"y":240,"wires":[["5a5d640b.67b15c"]]},{"id":"5a5d640b.67b15c","type":"function","z":"ee008879.f5adc8","name":"start dump","func":"var sum = {\n    \"cpm1.0\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"cpm2.5\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"cpm10\" :[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"apm1.0\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"apm2.5\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"apm10\" :[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"aqi\"   :[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"t\"     :[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    \"r\"     :[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n}\nvar count =  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n\nflow.set(\"sum\",sum);\nflow.set(\"count\",count);\nmsg.payload ={\"fun\":\"04\"};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":830,"y":240,"wires":[["8ce5e629.3c5ef8"]]},{"id":"3787ab01.6ee494","type":"function","z":"ee008879.f5adc8","name":"Historical data processing","func":"\nif(flow.get(\"skipdata\") === false) return;\n\n// out: cmd/histo\nvar data = JSON.parse(msg.payload);\n\nvar answ = {\n    deviceId: \"_PM1_USB\",\n    data: {\n        t: Math.floor(Date.now() / 1000),\n        dps: {}\n    }\n}\n\nvar cmd = {\n    payload: {\n        \"fun\":\"05\", \n        \"flag\":\"1\"\n    }\n}\n\nswitch (data.res) {\n\ncase \"0\":   // end historical data\n    sum = flow.get(\"sum\");\n    count = flow.get(\"count\");\n    for (i = 0; i < 24; i++) {\n        if (count[i] > 0) {\n            sum[\"cpm1.0\"][i] = Math.round(sum[\"cpm1.0\"][i] / count[i]);\n            sum[\"cpm2.5\"][i] = Math.round(sum[\"cpm2.5\"][i] / count[i]);\n            sum[\"cpm10\"][i]  = Math.round(sum[\"cpm10\"][i] / count[i]);\n            sum[\"apm1.0\"][i] = Math.round(sum[\"apm1.0\"][i] / count[i]);\n            sum[\"apm2.5\"][i] = Math.round(sum[\"apm2.5\"][i] / count[i]);\n            sum[\"apm10\"][i]  = Math.round(sum[\"apm10\"][i] / count[i]);\n            sum[\"aqi\"][i]    = Math.round(sum[\"aqi\"][i] / count[i]);\n            sum[\"t\"][i]      = (sum[\"t\"][i] / count[i]).toFixed(1);\n            sum[\"r\"][i]      = (sum[\"r\"][i] / count[i]).toFixed(1);\n        }\n    }\n    answ.data.dps[300] = \"[\"+sum[\"cpm1.0\"].toString() + \"]\";\n    answ.data.dps[301] = \"[\"+sum[\"cpm2.5\"].toString() + \"]\";\n    answ.data.dps[302] = \"[\"+sum[\"cpm10\"].toString() + \"]\";\n    answ.data.dps[303] = \"[\"+sum[\"apm1.0\"].toString() + \"]\";\n    answ.data.dps[304] = \"[\"+sum[\"apm2.5\"].toString() + \"]\";\n    answ.data.dps[305] = \"[\"+sum[\"apm10\"].toString() + \"]\";\n    answ.data.dps[306] = \"[\"+sum[\"aqi\"].toString() + \"]\";\n    answ.data.dps[307] = \"[\"+sum[\"t\"].toString() + \"]\";\n    answ.data.dps[308] = \"[\"+sum[\"r\"].toString() + \"]\";\n    msg.payload = answ;\n    flow.set(\"skipdata\", false);\n    return [cmd, msg];\n\ncase \"4\":\n    sum = flow.get(\"sum\");\n    count = flow.get(\"count\");\n    count[Number(data[\"h\"])]++;\n    sum[\"cpm1.0\"][Number(data[\"h\"])] += Number(data[\"cpm1.0\"]);\n    sum[\"cpm2.5\"][Number(data[\"h\"])] += Number(data[\"cpm2.5\"]);\n    sum[\"cpm10\"][Number(data[\"h\"])]  += Number(data[\"cpm10\"]);\n    sum[\"apm1.0\"][Number(data[\"h\"])] += Number(data[\"apm1.0\"]);\n    sum[\"apm2.5\"][Number(data[\"h\"])] += Number(data[\"apm2.5\"]);\n    sum[\"apm10\"][Number(data[\"h\"])]  += Number(data[\"apm10\"]);\n    sum[\"aqi\"][Number(data[\"h\"])]    += Number(data[\"aqi\"]);\n    sum[\"t\"][Number(data[\"h\"])]      += Number(data[\"t\"]);\n    sum[\"r\"][Number(data[\"h\"])]      += Number(data[\"r\"]);\n\n    flow.set(\"sum\", sum);\n    flow.set(\"count\", count);\n    return;\n\ncase \"10\":\n    return;\n}\nreturn;\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1090,"y":380,"wires":[["8ce5e629.3c5ef8"],["c72cf7d0.7ff3c8"]]},{"id":"260f2555.1d5ffa","type":"status","z":"ee008879.f5adc8","name":"spy status","scope":["e37f5692.37de78","28f4d04b.ed1b7"],"x":820,"y":480,"wires":[["bcf0461e.c12788"]]},{"id":"bcf0461e.c12788","type":"subflow:ee953c15.ada29","z":"ee008879.f5adc8","name":"","env":[{"name":"deviceId","value":"_PM1_USB","type":"str"},{"name":"deviceID","value":"bfb073b1b789b5994cro7p","type":"str"}],"x":1050,"y":480,"wires":[["4fb32195.592ef"]]},{"id":"4fb32195.592ef","type":"link out","z":"ee008879.f5adc8","name":"to core.more_devices_in","links":["c90b7eb2.07595"],"x":1275,"y":480,"wires":[]},{"id":"21a669e.61ac096","type":"inject","z":"ee008879.f5adc8","name":"CLEAR MEMORY","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"01 00 * * *","once":false,"onceDelay":0.1,"topic":"","payload":"{\"fun\":\"06\"}","payloadType":"json","x":415,"y":380,"wires":[["8ce5e629.3c5ef8"]],"icon":"node-red-contrib-eztimer/datetime.png","l":false},{"id":"ce13d88d.13bf18","type":"inject","z":"ee008879.f5adc8","name":"TEST Historical","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"fun\":\"05\",\"flag\":\"0\"}","payloadType":"json","x":180,"y":280,"wires":[["bb7ed790.b50db8","8ce5e629.3c5ef8"]]},{"id":"608b2442.af601c","type":"comment","z":"ee008879.f5adc8","name":"custom 'PM detector '","info":"Flow to control the 'PM detector' via USB-serial\n\nsee: https://github.com/msillano/tuyaDAEMON/wiki/custom-device-'PM-detector':-case-study","x":160,"y":60,"wires":[]},{"id":"7454f585.417bcc","type":"link in","z":"ee008879.f5adc8","name":"from system.start_DAEMON","links":["37306de6.0a7f42"],"x":355,"y":100,"wires":[["d53018ba.5b1448"]]},{"id":"1282a87d.494a98","type":"change","z":"ee008879.f5adc8","name":"init sendtime","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"device\":\"PM detector\",\"property\":\"sendtime\",\"value\":\"120\"}","tot":"json"},{"t":"set","p":"to","pt":"msg","to":"_PM1_USB","tot":"str"},{"t":"set","p":"infodp","pt":"msg","to":"1","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":40,"wires":[["96b99b98.5c7788","271a5b46.b66224"]]},{"id":"271a5b46.b66224","type":"change","z":"ee008879.f5adc8","name":"Init storetime","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"device\":\"PM detector\",\"property\":\"storetime\",\"value\":\"700\"}","tot":"json"},{"t":"set","p":"to","pt":"msg","to":"_PM1_USB","tot":"str"},{"t":"set","p":"infodp","pt":"msg","to":"2","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":80,"wires":[["96b99b98.5c7788","b9e8d491.2f8e58"]]},{"id":"136ad89e.c0d117","type":"change","z":"ee008879.f5adc8","name":"Init RT","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"device\":\"PM detector\",\"property\":\"startRT\",\"value\":\"1\"}","tot":"json"},{"t":"set","p":"to","pt":"msg","to":"_PM1_USB","tot":"str"},{"t":"set","p":"infodp","pt":"msg","to":"5","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":690,"y":160,"wires":[["96b99b98.5c7788"]]},{"id":"2ebe64d5.26754c","type":"link out","z":"ee008879.f5adc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":355,"y":520,"wires":[]},{"id":"eefb4a7d.922138","type":"inject","z":"ee008879.f5adc8","name":"STOP RT","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_PM1_USB\",\"property\":\"5\",\"value\":\"OFF\"}","payloadType":"json","x":160,"y":460,"wires":[["2ebe64d5.26754c"]]},{"id":"db6536d1.c90638","type":"inject","z":"ee008879.f5adc8","name":"START RT","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_PM1_USB\",\"property\":\"5\",\"value\":\"ON\"}","payloadType":"json","x":160,"y":500,"wires":[["2ebe64d5.26754c"]]},{"id":"b9e8d491.2f8e58","type":"change","z":"ee008879.f5adc8","name":"Init clock","rules":[{"t":"set","p":"payload","pt":"msg","to":"{\"device\":\"PM detector\",\"property\":\"set clock\",\"value\":\"\"}","tot":"json"},{"t":"set","p":"to","pt":"msg","to":"_PM1_USB","tot":"str"},{"t":"set","p":"infodp","pt":"msg","to":"3","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":700,"y":120,"wires":[["96b99b98.5c7788","136ad89e.c0d117"]]},{"id":"96b99b98.5c7788","type":"link out","z":"ee008879.f5adc8","name":"to in cmd","links":["bf4e83f7.f5f21"],"x":915,"y":140,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"a4c72b18.762b68","type":"inject","z":"ee008879.f5adc8","name":"FAST RT","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_PM1_USB\",\"property\":\"1\",\"value\":20}","payloadType":"json","x":160,"y":540,"wires":[["2ebe64d5.26754c"]]},{"id":"43e311a3.08147","type":"inject","z":"ee008879.f5adc8","name":"SLOW RT","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_PM1_USB\",\"property\":\"1\",\"value\":120}","payloadType":"json","x":160,"y":580,"wires":[["2ebe64d5.26754c"]]},{"id":"c3a7162d.b98bf8","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"start","tooltip":"","group":"8a16e2fd.a07e2","order":1,"width":0,"height":0,"passthru":false,"mode":"time","delay":300,"topic":"start1","topicType":"str","x":730,"y":280,"wires":[["221aa24e.28742e"]]},{"id":"170d5f65.7e9f11","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"start","tooltip":"","group":"e04eed03.d3291","order":1,"width":0,"height":0,"passthru":false,"mode":"time","delay":300,"topic":"start2","topicType":"str","x":730,"y":440,"wires":[["221aa24e.28742e"]]},{"id":"52ad810c.bc96a","type":"ui_button","z":"66e0cde4.b696f4","name":"","group":"2e287b5a.1b1814","order":1,"width":"4","height":1,"passthru":false,"label":"ALARM STOP","tooltip":"","color":"","bgcolor":"{{msg.background}}","icon":"","payload":"{\"main\":\"OFF\"}","payloadType":"json","topic":"topic","topicType":"msg","x":760,"y":1000,"wires":[["428d4751.8ce6d8"]]},{"id":"9f4ad3b6.35136","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"start","tooltip":"","group":"31f79248.17674e","order":1,"width":0,"height":0,"passthru":false,"mode":"time","delay":300,"topic":"start3","topicType":"str","x":730,"y":600,"wires":[["221aa24e.28742e"]]},{"id":"f457f873.6d4038","type":"ui_button","z":"66e0cde4.b696f4","name":"","group":"194a6329.0b062d","order":6,"width":"1","height":1,"passthru":true,"label":"RST","tooltip":"","color":"","bgcolor":"{{background}}","icon":"","payload":"{\"reset\":\"ON\"}","payloadType":"json","topic":"topic","topicType":"msg","x":910,"y":260,"wires":[["c83809c2.5cdc98","9dd4cc52.10ca8"]]},{"id":"f0e81f37.f91a6","type":"ui_button","z":"66e0cde4.b696f4","name":"","group":"2e287b5a.1b1814","order":2,"width":"4","height":1,"passthru":false,"label":"OUTPUT TOGGLE","tooltip":"","color":"","bgcolor":"{{msg.background}}","icon":"","payload":"any","payloadType":"str","topic":"topic","topicType":"msg","x":770,"y":960,"wires":[["61881e9a.9e2c7"]]},{"id":"221aa24e.28742e","type":"function","z":"66e0cde4.b696f4","name":"flow store data","func":"\n \nvar data = flow.get(\"watering\");\ndata[msg.topic] = msg.payload;\nflow.set(\"watering\", data);\n\nlet newmsg = {in_msg: msg,\n              background: \"yellow\"};\nreturn newmsg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n var data ={};\n flow.set(\"watering\", data);","finalize":"","x":960,"y":680,"wires":[[]]},{"id":"8e6204b9.933f58","type":"ui_chart","z":"66e0cde4.b696f4","name":"chart","group":"2e287b5a.1b1814","order":5,"width":"9","height":"6","label":"Irrigation and weather {{msg.title}}","chartType":"line","legend":"false","xformat":"HH","interpolate":"step","nodata":"","dot":false,"ymin":"0","ymax":"50","removeOlder":"24","removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#89a5d2","#68a9fd","#ed9b9b","#3ccd3c","#98df8a","#ca5858","#912827","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":730,"y":180,"wires":[[]]},{"id":"f665d47.2df4f28","type":"ui_button","z":"66e0cde4.b696f4","name":"GET CIRCULATE","group":"194a6329.0b062d","order":2,"width":"1","height":"1","passthru":false,"label":"","tooltip":"","color":"","bgcolor":"","icon":"undo","payload":"any","payloadType":"str","topic":"get","topicType":"str","x":770,"y":800,"wires":[["c790c9ed.3cc7f8"]]},{"id":"bcd4f07b.e4fd1","type":"ui_button","z":"66e0cde4.b696f4","name":"SET CIRCULATE","group":"194a6329.0b062d","order":4,"width":"1","height":"1","passthru":false,"label":"","tooltip":"","color":"--nr-dashboard-widgetColor","bgcolor":"{{msg.background}}","icon":"save","payload":"ok","payloadType":"str","topic":"set","topicType":"str","x":770,"y":900,"wires":[["38e4cc0b.beb5f4"]]},{"id":"fff45c98.8d5c4","type":"ui_slider","z":"66e0cde4.b696f4","name":"","label":"water","tooltip":"max week water (liters)","group":"194a6329.0b062d","order":1,"width":"8","height":"1","passthru":true,"outs":"end","topic":"waterweek","topicType":"str","min":0,"max":"1000","step":"10","x":730,"y":760,"wires":[["221aa24e.28742e","f9fdcebd.a1fda"]]},{"id":"151ed4ad.6794eb","type":"ui_dropdown","z":"66e0cde4.b696f4","name":"","label":"","tooltip":"","place":"Select days","group":"194a6329.0b062d","order":3,"width":"8","height":"1","passthru":false,"multiple":true,"options":[{"label":"Dom.","value":1,"type":"num"},{"label":"Lun.","value":"2","type":"str"},{"label":"Mar.","value":"3","type":"str"},{"label":"Mer.","value":"4","type":"str"},{"label":"Gio.","value":"5","type":"str"},{"label":"Ven.","value":"6","type":"str"},{"label":"Sab.","value":"7","type":"str"}],"payload":"","topic":"days1","topicType":"str","x":740,"y":240,"wires":[["221aa24e.28742e"]]},{"id":"428d4751.8ce6d8","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd main-switch","env":[{"name":"device","value":"watering main","type":"str"},{"name":"property","value":"switch","type":"str"},{"name":"value","value":"@msg.payload.main","type":"str"}],"x":1390,"y":1000,"wires":[["739fba48.a46514"]]},{"id":"739fba48.a46514","type":"link out","z":"66e0cde4.b696f4","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":1555,"y":960,"wires":[]},{"id":"c790c9ed.3cc7f8","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd timer-circulate GET","env":[{"name":"device","value":"watering timer","type":"str"},{"name":"property","value":"circulate","type":"str"},{"name":"value","value":"NULL","type":"str"}],"x":1370,"y":800,"wires":[["8834ba78.eef318"]]},{"id":"8834ba78.eef318","type":"link out","z":"66e0cde4.b696f4","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":1555,"y":800,"wires":[]},{"id":"b5aba5f4.6a3778","type":"link in","z":"66e0cde4.b696f4","name":"from core.fake_cmds","links":["18817677.061b9a"],"x":95,"y":680,"wires":[["e1cc1c52.293fd","11e9733f.2d36bd","6f3ab810.a4d9d8"]]},{"id":"38e4cc0b.beb5f4","type":"function","z":"66e0cde4.b696f4","name":"process data","func":"\nfunction hmTomin(hm) { // local function\n   if (typeof hm === 'string') {\n      pieces = hm.split(':');\n      return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n   }\n   return 0;\n}\n\nfunction minTohm(min) { // local function\n   h = (~~(min / 60));\n   m = min % 60;\n   if (isNaN(m))\n      return \"00:00\";\n   return (h > 9 ? h : '0' + h) + \":\" + (m > 9 ? m : '0' + m);\n}\n\nfunction sumHmHm(t1, t2) { // local function\n   var tot = hmTomin(t1) + hmTomin(t2);\n   return (minTohm(tot));\n}\n\nfunction formatDayArr(dayArr) {\n   var dt = \"-------\";\n   for (var i = 1; i < 8; i++) {\n      if (dayArr.includes(i) || dayArr.includes(i.toString()) )\n         dt = dt.substring(0, i- 1) + i + dt.substring(i);\n   }\n//   node.warn([\"DAY process \", dayArr,dt]);\n   return dt;\n}\n\nvar data = flow.get(\"watering\");\n\nvar tobj = [{\n      active: false,\n      days: \"-------\",\n      start: \"00:00\",\n      end: \"00:00\",\n      on: \"00:00\",\n      off: \"00:00\"\n   }, {\n      active: false,\n      days: \"-------\",\n      start: \"00:00\",\n      end: \"00:00\",\n      on: \"00:00\",\n      off: \"00:00\"\n   }, {\n      active: false,\n      days: \"-------\",\n      start: \"00:00\",\n      end: \"00:00\",\n      on: \"00:00\",\n      off: \"00:00\"\n   }, {\n      active: false,\n      days: \"-------\",\n      start: \"00:00\",\n      end: \"00:00\",\n      on: \"00:00\",\n      off: \"00:00\"\n   }\n];\n\nvar daycount = 0;\nif (data.days1 == undefined) {\n   //    node.warn(\"Noting to save. Do a GET\");\n   return null;\n}\n\nfor (var i = 1; i < 4; i++) {\n   if (data[\"start\" + i] > data[\"end\" + i]) {\n      //     node.warn(\"ERROR on Time \"+i+\": check start, end. Abort.\");\n      return [{\n            topic: \"bad\" + i\n         }\n      ];\n   }\n\n\nif (msg.topic === \"set\") {\n   // restored by hand\n   data.nowatering = false;\n}\n\n//------------------- data to circulate\n\ndaycount = data.days1.length;\nvar totaldaytime = (data.store1 ? (data[\"end1\"] - data[\"start1\"]) / 60000 : 0) +\n                   (data.store2 ? (data[\"end2\"] - data[\"start2\"]) / 60000 : 0) +\n                   (data.store3 ? (data[\"end3\"] - data[\"start3\"]) / 60000 : 0);\n\nif ((daycount === 0) || (totaldaytime === 0)) {\n   //     node.warn(\"WARNING: null day/times, no watering \");\n   node.send([{topic: \"bad0\"}]);\n   node.warn(\" NO watering: daycount: \" + daycount + \" totaldaytime: \" + totaldaytime);\n   data[\"nowatering\"] = true;\n}\n// default values in case of bad values\nvar offtime = 0;\nvar wetdaytime = 0;\n\nif ((daycount > 0) && (totaldaytime > 0)) {\n   let weekwettime = (data.waterweek * data.adjust) / data.litresminute;\n   wetdaytime = weekwettime / daycount;\n   let daycycles = Math.round(wetdaytime / data.ontime);\n   if (daycycles > 0)\n      offtime = Math.round((totaldaytime - wetdaytime) / daycycles);\n   if (offtime < 0)\n      offtime = 0;\n}\n\ndata.wetdaytime = wetdaytime;\ndata.offtime = offtime;\n\n   tobj[i - 1].days   = formatDayArr(data.days1);\n   tobj[i - 1].active = data.nowatering ? false : data[\"store\" + i];\n   tobj[i - 1].start  = minTohm(data[\"start\" + i] / 60000);\n   tobj[i - 1].end    = minTohm(data[\"end\" + i] / 60000);\n   tobj[i - 1].on     = minTohm(data.ontime);\n   tobj[i - 1].off    = minTohm(offtime);\n}\n\ndata.active1 =  tobj[0].active;\ndata.active2 =  tobj[1].active;\ndata.active3 =  tobj[2].active;\n\nif ((msg.topic === \"set\") && (data.nowatering === false)) {\n   // restored by hand\n  data.store1 =  tobj[0].active;\n  data.store2 =  tobj[1].active;\n  data.store3 =  tobj[2].active;\n}\n\n\n// ----  extra storage\nlet dx = data.store3 ? 100 : 0;\ndx *= 2;\ndx += data.store2 ? 100 : 0;\ndx *= 2;\ndx += data.store1 ? 100 : 0;\ndx *= 2;\ndx += data.nowatering ? 100 : 0;\ndx += data.adjust < 1 ? Math.round(data.adjust * 100) : 99;\n//\ntobj[3].on = minTohm(dx);\ntobj[3].off = minTohm(data.waterweek);\n\n//-------------- save\n// node.warn([\" saved ...\", data, tobj])\nflow.set(\"watering\", data)\nmsg.payload = tobj;\nreturn [{ topic: \"set\"}, msg];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1090,"y":900,"wires":[["3de474ea.ca7c1c"],["f1472bd1.d3ee88"]],"inputLabels":["trigger"],"outputLabels":["status","set"]},{"id":"74005ff3.2ae0e","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"end","tooltip":"","group":"8a16e2fd.a07e2","order":1,"width":0,"height":0,"passthru":false,"mode":"time","delay":300,"topic":"end1","topicType":"str","x":730,"y":320,"wires":[["221aa24e.28742e"]]},{"id":"7ef6e664.a5b0f8","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"end","tooltip":"","group":"e04eed03.d3291","order":1,"width":0,"height":0,"passthru":false,"mode":"time","delay":300,"topic":"end2","topicType":"str","x":730,"y":480,"wires":[["221aa24e.28742e"]]},{"id":"f5cf7ffe.7db69","type":"ui_text_input","z":"66e0cde4.b696f4","name":"","label":"end","tooltip":"","group":"31f79248.17674e","order":1,"width":0,"height":0,"passthru":true,"mode":"time","delay":300,"topic":"end3","topicType":"str","x":730,"y":640,"wires":[["221aa24e.28742e"]]},{"id":"6ff96dca.116a74","type":"config","z":"66e0cde4.b696f4","name":"PARAMETERS","properties":[{"p":"watering","pt":"flow","to":"{\"maxwater\":1000,\"litresminute\":1.5,\"ontime\":5,\"OFFtemperature\":4,\"OFFRH\":90,\"nowatering\":false,\"adjust\":0.5,\"waterweek\":100,\"more01\":\"Update time (18:30) is on [*SET TIME] node\"}","tot":"json"},{"p":"fuzzyset","pt":"flow","to":"{\"comment\":\" the result is in the range 12..90 %\",\"crisp_input\":[10,50],\"variables_input\":[{\"name\":\"Temperature\",\"setsName\":[\"Frost\",\"Cold\",\"Medium\",\"Hot\",\"Very hot\"],\"sets\":[[0,0,5,10],[5,10,10,20],[10,20,20,30],[20,30,30,35],[30,35,40,40]]},{\"name\":\"Relative Humidity\",\"setsName\":[\"Poor\",\"Fair\",\"Good\",\"High\",\"Very high\"],\"sets\":[[0,0,20,30],[10,30,30,50],[35,45,60,70],[55,75,75,90],[75,90,100,100]]}],\"variable_output\":{\"name\":\"Watering factor\",\"setsName\":[\"None\",\"Low\",\"Medium\",\"Heavy\"],\"sets\":[[0,0,15,30],[15,30,40,55],[40,55,75,90],[75,90,100,100]]},\"inferences\":[[0,0,1,2,3],[3,2,2,1,0]]}","tot":"json"}],"active":true,"x":220,"y":220,"wires":[],"info":"parameters\n    \"litresminute\": 2.5, // the water output\n    \"ontime\": 6          // the cycle time ON \ndefaults    \n    \"waterweek\": 1000,   // if not user defined   \n    // note: the limit is the MAX value in the 'water' slider.\n    \"adjust\": 0.8,       //  range 0..1\n"},{"id":"466b8db9.753984","type":"ui_switch","z":"66e0cde4.b696f4","name":"","label":"","tooltip":"","group":"8a16e2fd.a07e2","order":4,"width":"1","height":"1","passthru":true,"decouple":"false","topic":"store1","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":730,"y":400,"wires":[["221aa24e.28742e","e83f263e.366d48"]]},{"id":"2353cc16.5f1da4","type":"ui_switch","z":"66e0cde4.b696f4","name":"","label":"","tooltip":"","group":"31f79248.17674e","order":4,"width":"1","height":"1","passthru":true,"decouple":"false","topic":"store3","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":730,"y":720,"wires":[["221aa24e.28742e","6aa907d.0232ef8"]]},{"id":"1bfd2efe.6ebe51","type":"ui_switch","z":"66e0cde4.b696f4","name":"","label":"","tooltip":"","group":"e04eed03.d3291","order":4,"width":"1","height":"1","passthru":true,"decouple":"false","topic":"store2","topicType":"str","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"x":730,"y":560,"wires":[["221aa24e.28742e","f19a9bd9.a8bd48"]]},{"id":"6aa907d.0232ef8","type":"ui_led","z":"66e0cde4.b696f4","order":3,"group":"31f79248.17674e","width":"2","height":"1","label":"active","labelPlacement":"right","labelAlignment":"left","colorForValue":[{"color":"#808080","value":"none","valueType":"str"},{"color":"#008000","value":"true","valueType":"bool"},{"color":"#ff0000","value":"false","valueType":"bool"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"","x":730,"y":680,"wires":[]},{"id":"f19a9bd9.a8bd48","type":"ui_led","z":"66e0cde4.b696f4","order":3,"group":"e04eed03.d3291","width":"2","height":"1","label":"active","labelPlacement":"right","labelAlignment":"left","colorForValue":[{"color":"#ff0000","value":"false","valueType":"bool"},{"color":"#008000","value":"true","valueType":"bool"},{"color":"#808080","value":"none","valueType":"str"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"","x":730,"y":520,"wires":[]},{"id":"e83f263e.366d48","type":"ui_led","z":"66e0cde4.b696f4","order":3,"group":"8a16e2fd.a07e2","width":"2","height":"1","label":"active","labelPlacement":"right","labelAlignment":"left","colorForValue":[{"color":"#ff0000","value":"false","valueType":"bool"},{"color":"#008000","value":"true","valueType":"bool"},{"color":"#808080","value":"none","valueType":"str"}],"allowColorForValueInMessage":false,"shape":"circle","showGlow":true,"name":"","x":730,"y":360,"wires":[]},{"id":"f1472bd1.d3ee88","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd circulate SET","env":[{"name":"device","value":"watering_sys","type":"str"},{"name":"property","value":"circulate","type":"str"},{"name":"value","value":"@msg.payload","type":"str"}],"x":1390,"y":900,"wires":[["925fb316.bd054"]],"inputLabels":["trigger"],"outputLabels":["to (fast) command"]},{"id":"925fb316.bd054","type":"link out","z":"66e0cde4.b696f4","name":"to core.std_cmd","links":["1d0eea8.b33d616"],"x":1555,"y":900,"wires":[]},{"id":"5f502c79.31b9f4","type":"ui_template","z":"66e0cde4.b696f4","group":"194a6329.0b062d","name":"","order":5,"width":"8","height":"1","format":"<div ng-bind-html=\"msg.payload\"></div>","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","x":740,"y":840,"wires":[[]]},{"id":"9c2034a2.c37a78","type":"comment","z":"66e0cde4.b696f4","name":"Level 2 device 'watering_sys'","info":"","x":200,"y":80,"wires":[]},{"id":"b157e6e4.9de758","type":"ui_button","z":"66e0cde4.b696f4","name":"","group":"2e287b5a.1b1814","order":4,"width":"1","height":"1","passthru":false,"label":"clr","tooltip":"clear graphic ","color":"","bgcolor":"","icon":"","payload":"[]","payloadType":"json","topic":"topic","topicType":"msg","x":730,"y":120,"wires":[["c83809c2.5cdc98","8e6204b9.933f58"]]},{"id":"61881e9a.9e2c7","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd timer-relay TOGGLE","env":[{"name":"device","value":"watering timer","type":"str"},{"name":"property","value":"countdown","type":"str"},{"name":"value","value":"1","type":"str"}],"x":1370,"y":960,"wires":[["739fba48.a46514"]]},{"id":"8bead4b6.de9e98","type":"function","z":"66e0cde4.b696f4","name":"timer button","func":"// logic buttons status, color\n// and  storage for suppression of redundant commands\n// output:\n// 1: more buttons\n// 2: toggle\nvar status = flow.get(\"timer\");\n// stored:\n//  timer_lastcolor : ONCOLOR|OFFCOLOR\n//  timer_enabled: true|false|undefined\n//  main_enabled: true|false|undefined\n\n// inputs:\n// {topic = \"Timer\"; newval = ON|OFF}\n// {topic = \"Main\"; newval = ON|OFF}\n// {topic = \"timer\"; enabled = true|false}\n// {topic = \"main\"; enabled = true|false}\nconst ONCOLOR = \"blue\";\nconst OFFCOLOR = \"green\";\n// filter extra CONNECTED messages, because extra 'enabled' can change color\n// in any case, if enabled == true restores lastcolor\nif (msg.topic === \"timer\") {\n    if ((msg.enabled !== undefined) && (msg.enabled !== status.timer_enabled)) {\n        status.timer_enabled = msg.enabled;\n        flow.set(\"timer\", status);\n        if (msg.enabled)\n            return ([{\n                        enabled: true\n                    }, {\n                        enabled: true,\n                        background: status.timer_lastcolor\n                    }\n                ]);\n        else\n            return ([{\n                        enabled: false\n                    }, {\n                        enabled: false\n                    }\n                ]);\n    } else {\n        return [null];\n    }\n}\n\n// if Main OFF, the timer is fast OFF + disabled\nif ((msg.topic === \"Main\") && (msg.newval === \"OFF\")) {\n    status.timer_enabled = false;\n    status.timer_lastcolor = OFFCOLOR;\n    flow.set(\"timer\", status);\n    return [{\n            enabled: false\n        }, {\n            enabled: false,\n            background: OFFCOLOR\n        }\n    ];\n}\n\n// change color ON/OFF\nif (msg.topic === \"Timer\") {\n    // test: is enabled? if not enable it\n    if (!status.timer_enabled) {\n        status.timer_enabled = true;\n        node.send([{\n                    enabled: true\n                }, {\n                    enabled: true\n                }\n            ]);\n    }\n\n    if (msg.newval === \"OFF\") {\n        status.timer_lastcolor = OFFCOLOR;\n        flow.set(\"timer\", status);\n        return [null, {\n                background: OFFCOLOR\n            }\n        ];\n    } else {\n        status.timer_lastcolor = ONCOLOR;\n        flow.set(\"timer\", status);\n        return [null, {\n                background: ONCOLOR\n            }\n        ];\n    }\n}\n\n// reset to set color\nif (msg.payload.reset !== undefined){\n//      status.enabled = true ;\n//      flow.set(\"timer\", status);\n// msg.enabled = true;\n// node.send([msg, null]);\n// msg.background = status.lastcolor;\n     return [null, {\n                background: status.timer_lastcolor }];\n}\n \nreturn ([null]);\n","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"timer\", {\n                   timer_lastcolor : undefined,\n                   timer_enabled: undefined,\n                    main_enabled: undefined });\n","finalize":"","x":570,"y":920,"wires":[["bcd4f07b.e4fd1","f665d47.2df4f28"],["f0e81f37.f91a6"]],"outputLabels":["buttons","toggle"]},{"id":"c30ab453.0d0c18","type":"function","z":"66e0cde4.b696f4","name":"main button","func":"// logic\n// color: MAIN_ON/FF\nif (msg.topic === \"Main\")  {\n    if (msg.newval == \"OFF\")\n        msg.background = \"black\";\n     else\n        msg.background = \"red\";\nreturn msg;\n}\nreturn null;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":1000,"wires":[["52ad810c.bc96a"]]},{"id":"3de474ea.ca7c1c","type":"function","z":"66e0cde4.b696f4","name":"status msg","func":"// generates user messages\n\n var show ={\n           payload: \" tuyaDAEMON Watering system v. 1.0\"\n          }; \n\nvar data = flow.get(\"watering\");\nlet perc = Math.round( data.adjust *100);\n\n// from timer relay\nif  (msg.topic === \"Timer\"){\n    if  (msg.newval === \"OFF\")\n           show.payload = \" Watering OFF  Litres(week) = \" + Math.round(data.waterweek * data.adjust) +\" (\"+perc+\"%)\";\n       else    \n           show.payload = \" Watering ON   \"+data.ontime+\"/\"+data.offtime +\" min. Litres(today): \" + Math.round(data.wetdaytime * data.litresminute);\n}\n\n// from SET button (process data), good\nif  (msg.topic === \"set\"){\n           if (data.nowatering)\n             show.payload = \" No irrigation today\";\n           else\n             show.payload = \" Updated - ON/OFF: \"+data.ontime+\"/\"+data.offtime +\" min. Litres(day): \"+ Math.round(data.wetdaytime * data.litresminute) + \" (\"+perc+\"%)\";\n}\n\n// from SET button (process data), bad\nif  (msg.topic === \"badv\"){\n           show.payload = \"Failed: set more time or less water.\";\n}\nif  (msg.topic === \"bad0\"){\n           show.payload = \"Failed: null day/time, check Time.  \";\n}\nif  (msg.topic === \"bad1\"){\n           show.payload = \"ERROR on 'Time1': check start, end.\";\n}\nif  (msg.topic === \"bad2\"){\n           show.payload = \"ERROR on 'Time2': check start, end.\";\n}\nif  (msg.topic === \"bad3\"){\n           show.payload = \"ERROR on 'Time3': check start, end.\";\n}\n\nreturn show;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":570,"y":840,"wires":[["5f502c79.31b9f4"]]},{"id":"dfb93a42.cf51c8","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd timer-restart  ","env":[{"name":"device","value":"watering timer","type":"str"},{"name":"property","value":"restart status","type":"str"},{"name":"value","value":"off","type":"str"}],"x":1390,"y":440,"wires":[["4242c140.fdbb2"]]},{"id":"4242c140.fdbb2","type":"link out","z":"66e0cde4.b696f4","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":1555,"y":300,"wires":[]},{"id":"3c9f6d43.8d11e2","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd main ON","env":[{"name":"device","value":"watering main","type":"str"},{"name":"property","value":"switch","type":"str"},{"name":"value","value":"ON","type":"str"}],"x":1400,"y":320,"wires":[["4242c140.fdbb2"]]},{"id":"5604c052.5ca1a","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd main-restart","env":[{"name":"device","value":"watering main","type":"str"},{"name":"property","value":"on reset","type":"str"},{"name":"value","value":"ON","type":"str"}],"x":1390,"y":360,"wires":[["4242c140.fdbb2"]]},{"id":"e3071913.55fb98","type":"link in","z":"66e0cde4.b696f4","name":"from system.start_DAEMON","links":["37306de6.0a7f42"],"x":955,"y":320,"wires":[["9dd4cc52.10ca8"]]},{"id":"9dd4cc52.10ca8","type":"delay","z":"66e0cde4.b696f4","name":"","pauseType":"delay","timeout":"300","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1090,"y":320,"wires":[["3c9f6d43.8d11e2","5604c052.5ca1a","4622fe72.9c05f","76616ca5.815b44"]]},{"id":"4622fe72.9c05f","type":"delay","z":"66e0cde4.b696f4","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1100,"y":400,"wires":[["c790c9ed.3cc7f8","dfb93a42.cf51c8","1b640c14.dc81c4"]]},{"id":"6f08696a.8d64d8","type":"function","z":"66e0cde4.b696f4","name":"init chart","func":"// to fix order and colors\nmsg = {\n    topic:\"Main\",\n    payload:10\n}\nnode.send(msg);\nmsg = {\n    topic:\"Timer\",\n    payload:0\n}\nnode.send(msg);\nmsg = {\n    topic:\"Temp\",\n    payload:null\n}\nnode.send(msg);\nmsg = {\n    topic:\"RH/2\",\n    payload:null\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":160,"wires":[["8e6204b9.933f58"]]},{"id":"c83809c2.5cdc98","type":"delay","z":"66e0cde4.b696f4","name":"","pauseType":"delay","timeout":"600","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1090,"y":120,"wires":[["6f08696a.8d64d8"]]},{"id":"f9fdcebd.a1fda","type":"subflow:81d3b584.14c888","z":"66e0cde4.b696f4","name":"","env":[{"name":"deviceID","value":"watering_sys","type":"str"},{"name":"propertyDP","value":"5","type":"str"},{"name":"value","value":"@msg.payload","type":"str"}],"x":1410,"y":660,"wires":[["9a343958.4999a8"]]},{"id":"9a343958.4999a8","type":"link out","z":"66e0cde4.b696f4","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":1555,"y":600,"wires":[]},{"id":"44351050.b577b","type":"link out","z":"66e0cde4.b696f4","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":495,"y":720,"wires":[]},{"id":"a131d6fe.bff008","type":"link out","z":"66e0cde4.b696f4","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":355,"y":380,"wires":[]},{"id":"1547be76.90a842","type":"link out","z":"66e0cde4.b696f4","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":435,"y":380,"wires":[]},{"id":"cc1ae669.a8cba8","type":"inject","z":"66e0cde4.b696f4","name":"chart refresh","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"180","crontab":"","once":true,"onceDelay":"8","topic":"","payload":"","payloadType":"date","x":1080,"y":220,"wires":[["70460352.c6299c","6304fdbf.4d8864"]]},{"id":"70460352.c6299c","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"refresh main","env":[{"name":"device","value":"watering main","type":"str"},{"name":"property","value":"switch","type":"str"},{"name":"value","value":"NULL","type":"str"}],"x":1410,"y":200,"wires":[["4242c140.fdbb2"]]},{"id":"6304fdbf.4d8864","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"refresh timer","env":[{"name":"device","value":"watering timer","type":"str"},{"name":"property","value":"relay","type":"str"},{"name":"value","value":"NULL","type":"str"}],"x":1410,"y":240,"wires":[["4242c140.fdbb2"]]},{"id":"77dbccc9.ba9b64","type":"link in","z":"66e0cde4.b696f4","name":"internal: to timer","links":["76616ca5.815b44"],"x":415,"y":920,"wires":[["8bead4b6.de9e98"]],"icon":"font-awesome/fa-expand"},{"id":"7251becd.aab9d","type":"file","z":"66e0cde4.b696f4","name":"save path","filename":"D:\\xampp\\htdocs\\fuzzytool\\lastset.json","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"utf8","x":420,"y":280,"wires":[[]]},{"id":"1d88ce30.e7f502","type":"inject","z":"66e0cde4.b696f4","name":"SAVE FUZZYSET","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"$flowContext(\"fuzzyset\")\t","payloadType":"jsonata","x":230,"y":280,"wires":[["7251becd.aab9d"]]},{"id":"4e356044.8a194","type":"function","z":"66e0cde4.b696f4","name":"Fuzzy","func":"// Fuzzy process the temp, RH values\n// FuzzyLogic library by Marco Lanaro, see  https://github.com/marcolanaro/JS-Fuzzy\nvar FuzzyLogic=function(){\"use strict\";var a=function(){};return a.prototype={getResult:function(a){var b=this.construct(a.variables_input),c=this.fuzzification(a.crisp_input,b),d=this.output_combination(c,a.inferences,a.variable_output),e=this.takeMaxOfArraySet(d),f=this.defuzzification(e,this.construct_variable(a.variable_output.sets));return f},construct:function(a){var c,b=[];for(c=a.length-1;c>=0;c-=1)b[c]=this.construct_variable(a[c].sets);return b},construct_variable:function(a){var c,b=[];for(c=a.length-1;c>=0;c-=1)b[c]={a:a[c],firstPoint:a[c][0]===a[c][1]?1:0,lastPoint:a[c][2]===a[c][3]?1:0,mUp:1/(a[c][1]-a[c][0]),mDown:1/(a[c][3]-a[c][2])};return b},fuzzification:function(a,b){var d,c=[];for(d=b.length-1;d>=0;d-=1)c[d]=this.fuzzification_variable(a[d],b[d]);return c},fuzzification_variable:function(a,b){var d,c=[];for(d=b.length-1;d>=0;d-=1)c[d]=this.fuzzification_function(a,b[d]);return c},fuzzification_function:function(a,b){var c=0;return b.a[0]>=a?c=b.firstPoint:b.a[1]>a?c=b.mUp*(a-b.a[0]):b.a[2]>=a?c=1:b.a[3]>a?c=1-b.mDown*(a-b.a[2]):a>=b.a[3]&&(c=b.lastPoint),c},output_combination:function(a,b,c){var e,f,d=[];for(e=c.sets.length-1;e>=0;e-=1)d[e]=[];for(e=b.length-1;e>=0;e-=1)for(f=b[e].length-1;f>=0;f-=1)b[e][f]>=0&&d[b[e][f]].push(a[e][f]);return d},defuzzification:function(a,b){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,c=0,d=0;for(e=a.length-1;e>=0;e-=1)f=b[e],g=f.a,h=a[e],i=g[3]-g[0],k=g[0],g[0]!==g[1]&&(k+=h/f.mUp),l=g[3],g[2]!==g[3]&&(l-=h/f.mDown),m=0,g[0]!==k&&(m+=(k-g[0])*a[e]/2),k!==l&&(m+=(l-k)*a[e]),l!==g[3]&&(m+=(g[3]-l)*a[e]/2),j=l-k,n=h/3*(i+2*j)/(j+i),p=k+(l-k)/2,q=g[0]+(g[3]-g[0])/2,r=0,0!==p-q&&(r=h/(p-q)),o=q,0!==r&&(o+=n/r),c+=m*o,d+=m;return 0===d?0:c/d},takeMaxOfArraySet:function(a){var c,b=[];for(c=a.length-1;c>=0;c-=1)b[c]=this.takeMaxOfArray(a[c]);return b},takeMaxOfArray:function(a){var c,b=a[0];for(c=1;a.length>c;c+=1)b=a[c]>b?a[c]:b;return b}},a}();\n//\nfunction fuzzy(crisp){\n    let ai = new FuzzyLogic();\n    let data = flow.get(\"fuzzyset\");\n    data.crisp_input =crisp;\n    let res = ai.getResult(data);\n    // check some bounds:\n    if ((res < 12) || ( msg.payload[0] <5))\n        return  0;\nreturn res/100;    \n}\n\nvar data = flow.get(\"watering\");\nvar weather =  flow.get(\"weather\");\n//\nfunction okFuzzy(){\n    if (weather.minT <= data.OFFtemperature) return false;\n    if (weather.maxRH >= data.OFFRH) return false;\n    return true;\n}\n//\nfunction doAdjust(){\n// adjost extremes, if no data, to 20°, 50%\nlet t =   (weather.maxT < -30)? 20: weather.maxT;\nlet rh =   (weather.minRH > 90)? 50: weather.minRH;\nlet  crisp_data = [\n      t,\n      rh ];   \n        \ndata.nowatering = !(okFuzzy());\ndata.adjust = fuzzy(crisp_data);   \nflow.set(\"watering\", data);\nreturn data.adjust;\n}\n\nif (msg.topic === \"adjust\"){\n msg.payload = doAdjust();\n node.warn([\"In test \", data, msg]);\n return([msg,null]);\n}\n\nif (msg.topic === \"restart\"){\n let weather = {\n    minT: 100,\n    maxT: -40,\n    minRH: 100,\n    maxRH: 0\n    } \n flow.set(\"weather\", weather); \n return ([null,{topic:\"save\"}]);\n}\n\n\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":990,"y":580,"wires":[["221aa24e.28742e","86fc9daa.fb378"],["38e4cc0b.beb5f4"]],"outputLabels":["update","save"]},{"id":"86fc9daa.fb378","type":"subflow:81d3b584.14c888","z":"66e0cde4.b696f4","name":"","env":[{"name":"deviceID","value":"watering_sys","type":"str"},{"name":"propertyDP","value":"4","type":"str"},{"name":"value","value":"@Math.round(msg.payload * 100)","type":"str"}],"x":1410,"y":600,"wires":[["9a343958.4999a8"]]},{"id":"e1cc1c52.293fd","type":"function","z":"66e0cde4.b696f4","name":"dp inheritance & override","func":"// implements some watering_sys dp by inheritace + local override\nconst DEVID = \"watering_sys\";\n// --------------- generic stuff\n\n// get from global.tuyastatus last value\nfunction _getGlobalValue(msx) {\n   // access global.tuyastatus\n   let tuyastatus = global.get(\"tuyastatus\");\n   return (tuyastatus[msx.payload.device][msx.payload.property]);\n}\n\n// test: idDev GET command?\nfunction _isGetCommand(msx) {\n   return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n   return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n\n// ---------------------------- locals\nfunction hmTomin(hm) { // local function\n   let pieces = hm.split(':');\n   return (parseInt(pieces[0]) * 60 + parseInt(pieces[1]));\n}\nfunction string2DayArr(dayStr) {\n   let dt = [];\n   for (let i = 0; i < 7; i++) {\n      if (dayStr.charAt(i) !== '-')\n         dt.push(i + 1);\n   }\n   return dt;\n}\n// -----------------------------------------\n// node outputs:\n//  1 : Fast in\n//  2 : Logging\n//  3 : to chart (ON/OFF)\n//  4 : circulate.days1\n//  5 : circulate.start1\n//  6 : circulate.end1\n//  7 : circulate.active1\n//  8 : circulate.start2\n//  9 : circulate.end2\n//  10 : circulate.active2\n//  11 : circulate.start3\n//  12 : circulate.end3\n//  13 : circulate.active3\n//  14 : data.waterweek\n//\n// the logging message (for 'to logging' IN)\nvar logMsg = {\n   \"payload\": {\n      \"deviceId\": DEVID,\n      \"data\": {\n         \"dps\": {}\n         // [dp = value]\n      }\n   }\n};\n\n//  =================================================\n\nif (_isSetCommand(msg)) { // test: is SET\n   var data = flow.get(\"watering\");\n   switch (msg.infodp) {\n      // from \"watering timer\", dp='relay'\n   case \"1\":\n      // sends to level 1 device\n      return [{\n            payload: {\n               device: \"watering timer\",\n               property: \"relay\",\n               value: msg.payload.value\n            }\n         }\n      ];\n   case \"1ans\":\n      // for logging, as dp 1\n      logMsg.payload.data.dps[\"1\"] = msg.payload.value;\n      // side effect: buttons color control\n      msg.topic = \"Timer\";\n      msg.newval = msg.payload.value;\n      // side effect:  update chart: hchart = water scaled (0..50)\n      let hchart = 33;\n      if (data.waterweek !== undefined) {\n         hchart = Math.round((data.waterweek * data.adjust * 50) / data.maxwater);\n      }\n      msg.payload = (msg.payload.value == \"ON\") ? hchart : 0; // for chart\n      weather = flow.get(\"weather\");\n      if (weather.minT < 100 )   // for refresh title\n          msg.title = \"Tmin \"+weather.minT+\"° Tmax \"+weather.maxT+\"°\";\n      return [null, logMsg, msg];\n      // from \"watering main\", dp='switch'\n   case \"2\":\n      // sends to level 1 device\n      return [{\n            payload: {\n               device: \"watering main\",\n               property: \"switch\",\n               value: msg.payload.value\n            }\n         }\n      ];\n   case \"2ans\":\n      // for logging, as dp 2\n      logMsg.payload.data.dps[\"2\"] = msg.payload.value;\n      // side effect: buttons color control\n      msg.topic = \"Main\";\n      msg.newval = msg.payload.value;\n      // side effect: if Main OFF, also Timer off\n      if (msg.payload.value == \"OFF\") {\n              node.send([null, null,{topic : \"Timer\", payload:0, newval:\"OFF\"}]);\n      }\n      // side effect:  update chart: h fix, 10\n      msg.payload = (msg.payload.value == \"ON\") ? 10 : 0; // for chart\n      weather = flow.get(\"weather\");\n      if (weather.minT < 100 )   // for refresh title\n          msg.title = \"Tmin \"+weather.minT+\"° Tmax \"+weather.maxT+\"°\";\n      return [null, logMsg, msg];\n      // from \"watering timer\", dp='schedule'\n   case \"42\":\n      // sends to level 1 device\n      return [{\n            payload: {\n               device: \"watering timer\",\n               property: \"circulate\",\n               value: msg.payload.value\n            }\n         }\n      ];\n   case \"42ans\":\n      // for logging, as dp 42\n      logMsg.payload.data.dps[\"42\"] = msg.payload.value;\n      // side effect: circulate explode, update var 'data' and UI\n     // time[3] used as permanent storage location: decode\n      let dx =  hmTomin(msg.payload.value[3].on);\n       data.adjust = ((dx%100)/100).toString();\n       dx = Math.floor(dx/100);\n       data.nowatering = (dx % 2  == 0) ? false : true;\n       dx = Math.floor(dx/2);\n       data.store1 = (dx % 2  == 0) ? false : true;\n       dx = Math.floor(dx/2);\n       data.store2 = (dx % 2  == 0) ? false : true;\n       dx = Math.floor(dx/2);\n       data.store3 = (dx == 0) ? false : true;\n       \n      if(isNaN(data.adjust))\n          data.adjust = 0.6; // fallback\n          \n      data.waterweek = hmTomin(msg.payload.value[3].off);\n      if(isNaN(data.waterweek))\n          data.waterweek = 600; // fallback\n         \n     //time[0..2] used as irrigation intervals, used only days[0]\n      for (let i = 0; i < 3; i++) {\n         data[\"days\" + (i + 1)] =  (msg.payload.value[i]) ? string2DayArr(msg.payload.value[1].days) : [];\n         data[\"active\" + (i + 1)]= (msg.payload.value[i]) ? msg.payload.value[i].active : false;\n         data[\"start\" + (i + 1)] = (msg.payload.value[i]) ? hmTomin(msg.payload.value[i].start) * 60000 : 0;\n         data[\"end\" + (i + 1)] =   (msg.payload.value[i]) ? hmTomin(msg.payload.value[i].end) * 60000 : 0;\n         data[\"on\" + (i + 1)] =    (msg.payload.value[i]) ? hmTomin(msg.payload.value[i].on) : 0;\n         data[\"off\" + (i + 1)] =   (msg.payload.value[i]) ? hmTomin(msg.payload.value[i].off) : 0;\n      }\n\n       // time calculations\n      var daycount = 1;\n      if (data.days1 !== undefined)\n         daycount = data.days1.length;\n\n      var totaldaytime = (data[\"store1\"] ? (data[\"end1\"] - data[\"start1\"]) / 60000 : 0) +\n      (data[\"store2\"] ? (data[\"end2\"] - data[\"start2\"]) / 60000 : 0) +\n      (data[\"store3\"] ? (data[\"end3\"] - data[\"start3\"]) / 60000 : 0);\n\n      var offtime = 0;\n      \n      if ((daycount > 0) && (totaldaytime > 0) && (data.nowatering === false)) {\n         var weekwettime = (data.waterweek * data.adjust) / data.litresminute;\n         var wetdaytime = weekwettime / daycount;\n         var daycycles = Math.round(wetdaytime / data.ontime);\n         offtime = Math.round((totaldaytime - wetdaytime) / daycycles);\n         if (offtime < 0)  offtime = 0;\n         data.wetdaytime = wetdaytime;\n         data.offtime = offtime;\n      } else {\n          // case OFF\n         data.wetdaytime = 0;\n         data.offtime =  offtime;\n         data.active1 = false;\n         data.active2 = false;\n         data.active3 = false;\n       }\n      // data update\n      flow.set(\"watering\", data);\n// node.warn([\"Updated data: \", data]) ;     \n      // logging and UI update\n      return [\n         null,\n         logMsg,\n         null, {\n            payload: data.days1\n         }, {\n            payload: data.start1\n         }, {\n            payload: data.end1\n         }, {\n            payload: (data.store1?data.active1:\"none\")\n         }, {\n            payload: data.start2\n         }, {\n            payload: data.end2\n         }, {\n            payload: (data.store2?data.active2:\"none\")\n         }, {\n            payload: data.start3\n         }, {\n            payload: data.end3\n         }, {\n            payload: (data.store3?data.active3:\"none\")\n         }, {\n            payload: data.waterweek\n         }\n      ];\n   }\n}\n\nif (_isGetCommand(msg)) { // test: is GET\n   // returns the value in global.tuyastatus\n   switch (msg.infodp) {\n   case \"1\":\n   case \"2\":\n   case \"42\":\n      logMsg.payload.data.dps[msg.infodp] = _getGlobalValue(msg);\n      return [null, logMsg];\n   }\n}\n\nreturn [null];\n","outputs":14,"noerr":0,"initialize":"","finalize":"","x":290,"y":520,"wires":[["a131d6fe.bff008"],["1547be76.90a842"],["8e6204b9.933f58","8bead4b6.de9e98","c30ab453.0d0c18","3de474ea.ca7c1c"],["151ed4ad.6794eb"],["c3a7162d.b98bf8"],["74005ff3.2ae0e"],["e83f263e.366d48"],["170d5f65.7e9f11"],["7ef6e664.a5b0f8"],["f19a9bd9.a8bd48"],["9f4ad3b6.35136"],["f5cf7ffe.7db69"],["6aa907d.0232ef8"],["fff45c98.8d5c4"]],"inputLabels":["fake msg"],"outputLabels":["to Fast IN","to Logging","chart","days","start1","end1","active1","start2","end2","active2","start3","end3","active3","waterweek"]},{"id":"6f3ab810.a4d9d8","type":"function","z":"66e0cde4.b696f4","name":"dp use & process","func":"// implements some watering_sys dp by 'use' + local processing\nconst DEVID = \"watering_sys\";\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n   return ((msx.to === DEVID) && (msx.infodp!== undefined) && (msx.payload.value !== undefined));\n}\n\n//  =================================================\nif (_isSetCommand(msg)) { // test: is PUSH?\n   switch (msg.infodp) {\n   case \"111\":\n      // for a button\n      return [{\n            topic: \"timer\",\n            enabled: msg.payload.value\n         }\n      ];\n   case \"112\":\n      // for a button\n      return [null, {\n            topic: \"main\",\n            enabled: msg.payload.value\n         }\n      ];\n   case \"201\":\n      // store values\n       weather = flow.get(\"weather\");\n      if (msg.payload.value > weather.maxT )\n           weather.maxT = msg.payload.value;\n      if (msg.payload.value < weather.minT )\n           weather.minT = msg.payload.value;\n      flow.set(\"weather\", weather);\n     // for the graph\n      return [null, null, {\n            title: \"Tmin \"+weather.minT+\"° Tmax \"+weather.maxT+\"°\",\n            topic: \"Temp\",\n            payload: msg.payload.value\n         }\n      ];\n   case \"202\":\n      // store values\n      weather = flow.get(\"weather\");\n      if (msg.payload.value > weather.maxRH )\n           weather.maxRH = msg.payload.value;\n      if (msg.payload.value < weather.minRH )\n           weather.minRH = msg.payload.value;\n      flow.set(\"weather\", weather);\n     // for the graph\n      return [null, null, {\n            title: \"Tmin \"+weather.minT+\"° Tmax \"+weather.maxT+\"°\",\n            topic: \"RH/2\",\n            payload: msg.payload.value / 2\n         }\n      ];\n   }\n}\nreturn [null];\n","outputs":3,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nlet weather = {\n    minT: 100,\n    maxT: -40,\n    minRH: 100,\n    maxRH: 0\n} \n flow.set(\"weather\", weather);","finalize":"","x":270,"y":660,"wires":[["8bead4b6.de9e98"],["8bead4b6.de9e98"],["8e6204b9.933f58"]],"inputLabels":["fake msg"],"outputLabels":["to timer","to main","to chart"]},{"id":"11e9733f.2d36bd","type":"function","z":"66e0cde4.b696f4","name":"custom dp","func":"// implements some watering_sys dp by inheritace + local override\nconst DEVID = \"watering_sys\";\n\n// --------------- generic stuff\n// test: idDev GET command?\nfunction _isGetCommand(msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n// test: idDev SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.to === DEVID) && (msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\nfunction _getGlobalValue(mx){\nvar tuyastatus = global.get(\"tuyastatus\");\nif ((tuyastatus !== undefined) && (tuyastatus[mx.payload.device] !== undefined)) { // ok device field\n   if (msg.infodp === \"schema\") \n          return tuyastatus[mx.payload.device];\n   return tuyastatus[mx.payload.device][mx.payload.property];\n   }\nreturn undefined;\n}\n// -----------------------------------------\n// node outputs:\n//  1 : Logging\n//  2 : Toggle\n//  3 : dataupdated\n//  4 : slider\n//  5 : reset\n//  6 : store\n//  7 : fast cmds\n\n// the logging message (for 'to logging' IN)\nvar logMsg = {\n    \"payload\": {\n        \"deviceId\": DEVID,\n        \"data\": {\n            \"dps\": {}\n            // [dp = value]\n        }\n    }\n};\n//  =================================================\n\nif (_isSetCommand(msg)) { // test: is SET\n    // for RW/PUSH custom dp\n//    node.warn([\"fake SET:\", msg]);\n   switch (msg.infodp) {\n    case \"3\":\n        // trigger: logging + output\n        logMsg.payload.data.dps[\"3\"] = \"done\";\n        return [logMsg, {\n                toggle: true\n            }\n        ];\n    case \"5\":\n        //  send logging msg + update slider + dataupdate\n        logMsg.payload.data.dps[\"5\"] = msg.payload.value;\n        return [logMsg, null, {\n                topic: \"dataupdate\",\n                value: true\n            }, {\n                \"payload\": msg.payload.value\n            }\n        ];\n    case \"6\":\n       logMsg.payload.data.dps[\"6\"] = \"done\";\n       return [logMsg, null, null, null, {\n                \"payload\": msg.payload.value\n            }\n        ];\n    case \"7\":\n       logMsg.payload.data.dps[\"7\"] = \"done\";\n       return [logMsg, null, null, null, null, {\n                \"payload\": msg.payload.value\n            }\n        ];\n   case \"8\":\n       logMsg.payload.data.dps[\"8\"] = \"done\";\n       return [logMsg, null, null, null, null, null, {\n                \"payload\": msg.payload.value\n            }\n        ];\n\n // It is really not necessary to implement \"multiple\" in a fake device. \n // In any case, this is an example of how to do it.    \n    case \"multiple\":       \n     let newmsg = {\n           payload: {\n               device : msg.payload.device,\n               property : null,\n               value: null\n           }\n       }\n     Object.entries(msg.payload.value).forEach(([key, value]) => {\n         \n         newmsg.payload.property = key,\n         newmsg.payload.value = value,\n         node.send([null, null, null, null, null, null, null, newmsg]); });\n          \n    }\n}\nif (_isGetCommand(msg)) { // test: is GET\n    // for RW custom dp: returns the value in global.tuyastatus\n//    node.warn([\"fake GET:\", msg]);\n    switch (msg.infodp) {\n    case \"4\":\n    case \"5\":\n       logMsg.payload.data.dps[msg.infodp] = _getGlobalValue(msg);\n        return [logMsg];\n// Maybe it is not useful to implement \"schema\" in a fake device. \n // In any case, this is an example of how to do it (see _getGlobalValue()).  \n    case \"schema\":\n       logMsg.payload.data.dps = _getGlobalValue(msg);\n        return [logMsg];\n     }\n}\n\nreturn [null];\n","outputs":8,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n//\n// Stuff to save data in tuyastatus\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// ---------------- main\nconst DEVID = \"watering_sys\"; // can have friendly name\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", DEVID, \"fake\");\nvar pmDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[pmDevName] === undefined)\n    tuyastatus[pmDevName] = {};\n// init\ntuyastatus[pmDevName][\"_connected\"] = true;\n// set starting values of all GETable properties\n// 0: \"timer\"\n// 1: \"switch\"\n// 2: \"adjust water\"\n// 3: \"waterweek\"\n// 4: \"circulate\"\ntuyastatus[pmDevName][\"timer\"] = \"none\";\ntuyastatus[pmDevName][\"switch\"] = \"none\";\ntuyastatus[pmDevName][\"adjust water\"] = \"none\";\ntuyastatus[pmDevName][\"waterweek\"] = \"none\";\ntuyastatus[pmDevName][\"circulate\"] = \"none\";\nglobal.set(\"tuyastatus\", tuyastatus);\n","finalize":"","x":250,"y":760,"wires":[["44351050.b577b"],["61881e9a.9e2c7"],[],["fff45c98.8d5c4"],["f457f873.6d4038"],["38e4cc0b.beb5f4"],["c790c9ed.3cc7f8"],["1af71950.31eac7"]],"inputLabels":["fake msg"],"outputLabels":["to logging","toggle","update","slider","reset","","",""]},{"id":"3398909b.63312","type":"inject","z":"66e0cde4.b696f4","name":"TEST OFF CMD","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"switch\",\"value\":\"OFF\"}","payloadType":"json","x":200,"y":920,"wires":[["1782306c.d003c"]]},{"id":"1782306c.d003c","type":"link out","z":"66e0cde4.b696f4","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":395,"y":1020,"wires":[]},{"id":"76616ca5.815b44","type":"link out","z":"66e0cde4.b696f4","name":"internal: to timer","links":["77dbccc9.ba9b64"],"x":1235,"y":280,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"8eca55de.c3a998","type":"timerswitch","z":"66e0cde4.b696f4","name":"*SET TIME","ontopic":"adjust","offtopic":"restart","onpayload":"ON","offpayload":"OFF","disabled":false,"schedules":[{"on_h":"19","on_m":"20","on_s":"00","off_h":"19","off_m":"20","off_s":"05","valid":true}],"x":970,"y":520,"wires":[["4e356044.8a194"]]},{"id":"6586ab3a.f655b4","type":"switch","z":"66e0cde4.b696f4","name":"*triggers selector","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1700","vt":"str"},{"t":"eq","v":"1710","vt":"str"},{"t":"eq","v":"1720","vt":"str"}],"checkall":"false","repair":false,"outputs":3,"x":1090,"y":1100,"wires":[["40426aa2.5deb84"],["9a84034c.73364"],["f39d819a.6494c"]],"info":"for my device\ndp = 102    // countdown"},{"id":"750bdf3d.199ce","type":"link in","z":"66e0cde4.b696f4","name":"from triggers.triggers_OUT","links":["9efb8156.f33d4"],"x":915,"y":1100,"wires":[["6586ab3a.f655b4"]]},{"id":"40426aa2.5deb84","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"1700: main OFF (alarm)","env":[{"name":"device","value":"watering_sys","type":"str"},{"name":"property","value":"switch","type":"str"},{"name":"value","value":"OFF","type":"str"}],"x":1370,"y":1060,"wires":[["881bf4dd.364008"]]},{"id":"9a84034c.73364","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"1710: TOGGLE ","env":[{"name":"device","value":"watering_sys","type":"str"},{"name":"property","value":"toggle timer","type":"str"},{"name":"value","value":"any","type":"str"}],"x":1400,"y":1100,"wires":[["881bf4dd.364008"]]},{"id":"881bf4dd.364008","type":"link out","z":"66e0cde4.b696f4","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":1555,"y":1060,"wires":[]},{"id":"1b640c14.dc81c4","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"cmd timer OFF  ","env":[{"name":"device","value":"watering timer","type":"str"},{"name":"property","value":"relay","type":"str"},{"name":"value","value":"OFF","type":"str"}],"x":1400,"y":400,"wires":[["4242c140.fdbb2"]]},{"id":"548cf190.91f5","type":"inject","z":"66e0cde4.b696f4","name":"TEST TOGGLE CMD","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"toggle timer\",\"value\":\"any\"}","payloadType":"json","x":220,"y":960,"wires":[["1782306c.d003c"]]},{"id":"c9dc690c.9f8a78","type":"inject","z":"66e0cde4.b696f4","name":"TEST RESET CMD","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"reset\",\"value\":\"any\"}","payloadType":"json","x":210,"y":1000,"wires":[["1782306c.d003c"]]},{"id":"f76deed4.8303a","type":"inject","z":"66e0cde4.b696f4","name":"TEST WATER CMD","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"waterweek\",\"value\":\"600\"}","payloadType":"json","x":210,"y":1040,"wires":[["1782306c.d003c"]]},{"id":"f39d819a.6494c","type":"subflow:f30e8140.1bed9","z":"66e0cde4.b696f4","name":"1720: main RESET","env":[{"name":"device","value":"watering_sys","type":"str"},{"name":"property","value":"reset","type":"str"},{"name":"value","value":"OFF","type":"str"}],"x":1390,"y":1140,"wires":[["881bf4dd.364008"]]},{"id":"e05b4c.e495e4b8","type":"comment","z":"d02ad611.d94bc8","name":"Device:   tuya_bridge  (WiFi switch)","info":"To avoid interferences, here is \nused the tuya_bridge switch\n\n","x":230,"y":400,"wires":[]},{"id":"95e6a79a.32bea8","type":"inject","z":"d02ad611.d94bc8","name":"test  SET: tuya_bridge switch  ON [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"ON\"}","payloadType":"json","x":260,"y":500,"wires":[["2abb8b42.fb0014"]]},{"id":"2abb8b42.fb0014","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":495,"y":460,"wires":[]},{"id":"9ecc1854.252ad8","type":"inject","z":"d02ad611.d94bc8","name":"test SET: tuya_bridge 'on reset' [101] HOLD","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\",\"value\":\"memory\"}","payloadType":"json","x":280,"y":580,"wires":[["2abb8b42.fb0014"]]},{"id":"ce964c66.57f1c","type":"inject","z":"d02ad611.d94bc8","name":"test: GET tuya_bridge 'on reset' [101]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\"}","payloadType":"json","x":260,"y":620,"wires":[["2abb8b42.fb0014"]]},{"id":"98d8b5ff.95d078","type":"inject","z":"d02ad611.d94bc8","name":"test  SET: tuya_bridge switch  OFF [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"OFF\"}","payloadType":"json","x":260,"y":540,"wires":[["2abb8b42.fb0014"]]},{"id":"d4e3723.2ce099","type":"inject","z":"d02ad611.d94bc8","name":"test GET: tuya_bridge switch ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\"}","payloadType":"json","x":240,"y":460,"wires":[["2abb8b42.fb0014"]]},{"id":"4fbbb89d.789858","type":"comment","z":"d02ad611.d94bc8","name":"Test CMD - real device","info":"I use for tests the 'power-strip' device because it honors the 'schema' and the 'multiple' commands. ","x":200,"y":700,"wires":[]},{"id":"c2eda0a.64cd86","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":455,"y":740,"wires":[]},{"id":"d0289b27.ab8858","type":"inject","z":"d02ad611.d94bc8","name":"testSET; power strip switch1 ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"1\", \"value\":\"ON\"}","payloadType":"json","x":250,"y":740,"wires":[["c2eda0a.64cd86"]]},{"id":"10e62952.2dfcb7","type":"inject","z":"d02ad611.d94bc8","name":"testGET; power strip switch1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"1\"}","payloadType":"json","x":240,"y":780,"wires":[["c2eda0a.64cd86"]]},{"id":"d9a7f179.dfdb9","type":"inject","z":"d02ad611.d94bc8","name":"testSCHEMA, power strip","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"power strip\"}","payloadType":"json","x":230,"y":820,"wires":[["c2eda0a.64cd86"]]},{"id":"1f6d1794.d89458","type":"inject","z":"d02ad611.d94bc8","name":"testMULTIPLE; power strip","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"multiple\",\"value\":{\"1\":true,\"2\":true}}","payloadType":"json","x":230,"y":860,"wires":[["c2eda0a.64cd86"]]},{"id":"6f08a59b.162f3c","type":"comment","z":"d02ad611.d94bc8","name":"Test fast-cmds real device","info":"I use for tests the 'power-strip' device because it honors the 'schema' and the 'multiple' commands. ","x":610,"y":700,"wires":[]},{"id":"a51db0ff.4ca74","type":"link out","z":"d02ad611.d94bc8","name":"","links":["c084a743.290b28"],"x":855,"y":740,"wires":[]},{"id":"d35bee32.c9e0f","type":"inject","z":"d02ad611.d94bc8","name":"testSET; power strip switch1 OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"1\",\"value\":\"OFF\"}","payloadType":"json","x":650,"y":740,"wires":[["a51db0ff.4ca74"]]},{"id":"dded2f8.238f7d","type":"inject","z":"d02ad611.d94bc8","name":"testGET; power strip switch1 ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"1\"}","payloadType":"json","x":640,"y":780,"wires":[["a51db0ff.4ca74"]]},{"id":"115c41a0.a0c7ee","type":"inject","z":"d02ad611.d94bc8","name":"testSCHEMA, power strip","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"power strip\"}","payloadType":"json","x":630,"y":820,"wires":[["a51db0ff.4ca74"]]},{"id":"bb51bb4f.eafb08","type":"inject","z":"d02ad611.d94bc8","name":"testMULTIPLE; power strip","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"multiple\",\"value\":{\"1\":false,\"2\":false}}","payloadType":"json","x":630,"y":860,"wires":[["a51db0ff.4ca74"]]},{"id":"dec584d8.5afd88","type":"comment","z":"d02ad611.d94bc8","name":"Test CMD - fake device","info":"I use here the 'watering_sys' device.\nYou can use it as model for your custom fake devices","x":200,"y":920,"wires":[]},{"id":"1e5c8c33.f6d8a4","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":455,"y":1000,"wires":[]},{"id":"d8ae2a30.95d6f8","type":"inject","z":"d02ad611.d94bc8","name":"testSET: watering_sys.waterweek","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"waterweek\",\"value\":\"333\"}","payloadType":"json","x":250,"y":960,"wires":[["1e5c8c33.f6d8a4"]]},{"id":"42b24b09.3e6a34","type":"inject","z":"d02ad611.d94bc8","name":"testGET; watering_sys.waterweek","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"waterweek\"}","payloadType":"json","x":250,"y":1000,"wires":[["1e5c8c33.f6d8a4"]]},{"id":"9974e007.38236","type":"inject","z":"d02ad611.d94bc8","name":"testSCHEMA, watering_sys","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"watering_sys\"}","payloadType":"json","x":240,"y":1040,"wires":[["1e5c8c33.f6d8a4"]]},{"id":"e1dc2a74.53fd48","type":"inject","z":"d02ad611.d94bc8","name":"testMULTIPLE; watering_sys","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"multiple\",\"value\":{\"toggle timer\":1,\"waterweek\":290}}","payloadType":"json","x":240,"y":1080,"wires":[["1e5c8c33.f6d8a4"]]},{"id":"1af71950.31eac7","type":"link out","z":"66e0cde4.b696f4","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":375,"y":840,"wires":[]},{"id":"70b31d23.afd7d4","type":"comment","z":"d02ad611.d94bc8","name":"Test fast-cmds - fake device","info":"I use here the 'watering_sys' device.\nYou can use it as model for your custom fake devices","x":620,"y":920,"wires":[]},{"id":"b741480f.454488","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":855,"y":1000,"wires":[]},{"id":"d055262f.7dcc78","type":"inject","z":"d02ad611.d94bc8","name":"testSET: watering_sys.waterweek","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"waterweek\",\"value\":\"333\"}","payloadType":"json","x":650,"y":960,"wires":[["b741480f.454488"]]},{"id":"27458c81.7c5ca4","type":"inject","z":"d02ad611.d94bc8","name":"testGET; watering_sys.waterweek","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"waterweek\"}","payloadType":"json","x":650,"y":1000,"wires":[["b741480f.454488"]]},{"id":"8607eae2.a86fa8","type":"inject","z":"d02ad611.d94bc8","name":"testSCHEMA, watering_sys","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"watering_sys\"}","payloadType":"json","x":640,"y":1040,"wires":[["b741480f.454488"]]},{"id":"5528d9e9.80b538","type":"inject","z":"d02ad611.d94bc8","name":"testMULTIPLE; watering_sys","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"multiple\",\"value\":{\"toggle timer\":1,\"waterweek\":290}}","payloadType":"json","x":640,"y":1080,"wires":[["b741480f.454488"]]},{"id":"481011f1.6ca57","type":"comment","z":"638c6657.ce65c8","name":"test   tuya_bridge  device","info":"Only for test\n\nsee notes on *nodes","x":200,"y":420,"wires":[]},{"id":"e01f44d1.0cc8e8","type":"inject","z":"638c6657.ce65c8","name":"*test  SET: tuya_bridge switch  ON [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"ON\"}","payloadType":"json","x":280,"y":520,"wires":[["fed740ad.b1ac2"]],"info":"NOTE:\nOn the 'tuya_bridge'.switch, in 'global.alldevices', is added a TEST SHARE, fired if switch is \"ON\":\n\nIt is OK if it sends 2 TUYA TRIGGERS:  \n  2 X [\"RX: 'HAL@home'/'_doTrigger' \",5000],\nand the 2 TRIGGER5000 produces ( using tuya-cloud automation):\n  2 x [\" RX: 'switch module #1'/'switch'\", \"ON\"] \n  \nFOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"fed740ad.b1ac2","type":"link out","z":"638c6657.ce65c8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":585,"y":480,"wires":[]},{"id":"8c305f26.6477a","type":"inject","z":"638c6657.ce65c8","name":"test SET: tuya_bridge 'on reset' [101] HOLD","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\",\"value\":\"memory\"}","payloadType":"json","x":310,"y":600,"wires":[["fed740ad.b1ac2"]]},{"id":"2f840ebb.96ccb2","type":"inject","z":"638c6657.ce65c8","name":"test: GET tuya_bridge 'on reset' [101]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"restart status\"}","payloadType":"json","x":290,"y":640,"wires":[["fed740ad.b1ac2"]]},{"id":"850aee4d.f8d11","type":"inject","z":"638c6657.ce65c8","name":"test  SET: tuya_bridge switch  OFF [1]","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\",\"value\":\"OFF\"}","payloadType":"json","x":280,"y":560,"wires":[["fed740ad.b1ac2"]]},{"id":"822eca51.bed0b8","type":"inject","z":"638c6657.ce65c8","name":"test GET: tuya_bridge switch ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"relay\"}","payloadType":"json","x":260,"y":480,"wires":[["fed740ad.b1ac2"]]},{"id":"6355076.43a97f8","type":"inject","z":"638c6657.ce65c8","name":"*test  REDTRG5000","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":740,"wires":[["753b383f.f776b8"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"b76d70b8.6deed","type":"inject","z":"638c6657.ce65c8","name":"*test  REDTRG5020","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":780,"wires":[["dde0250f.b12798"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"dde0250f.b12798","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"*trigger5020","env":[{"name":"TRGnumber","value":"5020","type":"str"}],"x":430,"y":780,"wires":[["28352cf0.53f614"]]},{"id":"753b383f.f776b8","type":"subflow:66ca1554.e4c85c","z":"638c6657.ce65c8","name":"*trigger5000","env":[{"name":"TRGnumber","value":"5000","type":"str"}],"x":430,"y":740,"wires":[["28352cf0.53f614"]]},{"id":"28352cf0.53f614","type":"link out","z":"638c6657.ce65c8","name":"to triggers.tuya_bridge_IN","links":["69321d9a.30b7d4"],"x":595,"y":740,"wires":[]},{"id":"3c0b3b17.e0a324","type":"comment","z":"638c6657.ce65c8","name":"test REDTRIGGER  ( to Tuya-cloud)","info":"only for test\nThe triggers 5000 and 5020 do a simple task\non Tuya-clod: ON/OFF a switch.\nThis is used in many test.\n\nRequired automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`\n\n\n","x":260,"y":700,"wires":[]},{"id":"39e7abb2.3938a4","type":"inject","z":"66e0cde4.b696f4","name":"TEST SAVE","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"store\",\"value\":\"any\"}","payloadType":"json","x":190,"y":1120,"wires":[["1782306c.d003c"]]},{"id":"5ef61d1.48446e4","type":"inject","z":"66e0cde4.b696f4","name":"TEST RESTORE","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\",\"property\":\"circulate\"}","payloadType":"json","x":200,"y":1080,"wires":[["1782306c.d003c"]]},{"id":"fd78763.6bdae88","type":"inject","z":"d02ad611.d94bc8","name":"remote SET ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"ON\"}","payloadType":"json","x":200,"y":1380,"wires":[["6ebd4962.eb72d8"]]},{"id":"59f6cf0a.61c8e","type":"inject","z":"d02ad611.d94bc8","name":"REMOTE LIST","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\"}","payloadType":"json","x":200,"y":1500,"wires":[["6ebd4962.eb72d8"]]},{"id":"c2d4a72a.28b3d8","type":"inject","z":"d02ad611.d94bc8","name":"Remote SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\"}","payloadType":"json","x":210,"y":1460,"wires":[["6ebd4962.eb72d8"]]},{"id":"d9d1ca86.0e0c38","type":"inject","z":"d02ad611.d94bc8","name":"Remote GET","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\"}","payloadType":"json","x":190,"y":1420,"wires":[["6ebd4962.eb72d8"]]},{"id":"641f43b.82e64bc","type":"inject","z":"d02ad611.d94bc8","name":"remote SET OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"OFF\"}","payloadType":"json","x":200,"y":1340,"wires":[["6ebd4962.eb72d8"]]},{"id":"6ebd4962.eb72d8","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":415,"y":1340,"wires":[]},{"id":"dc396369.af9b4","type":"comment","z":"d02ad611.d94bc8","name":"Test CMD: remote","info":"Test, required a remote tuyaDEAMON named 'ANDROID':\nGood response:\n\n19/4/2021, 20:26:10node: info\nmsg.payload : array[2]\n[ \"TX SET: fake 'HAL@home'/'_prox…\", object ]\n\n19/4/2021, 20:26:10 node: info\nmsg.payload : array[2]\narray[2]\n   0: \"RX: 'HAL@home'/'_proxy' \"\n   1: object\n      device: \"switch module #1\"\n      property: \"switch\"\n      from: \"ANDROID\"\n      status: \"sent\"\n      \n// if the device, here the 'switch module #1'\n//  is also in the local tuyaDAEMON, \n//  we get the local response:\n19/4/2021, 20:26:10 node: info\nmsg.payload : array[2]\narray[2]\n  0: \"RX: 'switch module #1'/'switch' \"\n  1: \"OFF\"","x":190,"y":1300,"wires":[]},{"id":"1b7d609e.ee695f","type":"inject","z":"d02ad611.d94bc8","name":"remote SET ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"ON\"}","payloadType":"json","x":600,"y":1380,"wires":[["5e693599.3f435c"]]},{"id":"9e92bdd.4650e4","type":"inject","z":"d02ad611.d94bc8","name":"REMOTE LIST","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\"}","payloadType":"json","x":600,"y":1500,"wires":[["5e693599.3f435c"]]},{"id":"dc8c8b9c.550698","type":"inject","z":"d02ad611.d94bc8","name":"Remote SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\"}","payloadType":"json","x":610,"y":1460,"wires":[["5e693599.3f435c"]]},{"id":"f5b4be41.ad344","type":"inject","z":"d02ad611.d94bc8","name":"Remote GET","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\"}","payloadType":"json","x":590,"y":1420,"wires":[["5e693599.3f435c"]]},{"id":"6793149d.eed8ac","type":"inject","z":"d02ad611.d94bc8","name":"remote SET OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"ANDROID\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"OFF\"}","payloadType":"json","x":600,"y":1340,"wires":[["5e693599.3f435c"]]},{"id":"5e693599.3f435c","type":"link out","z":"d02ad611.d94bc8","name":"","links":["c084a743.290b28"],"x":815,"y":1340,"wires":[]},{"id":"a9d98320.9da41","type":"comment","z":"d02ad611.d94bc8","name":"Test fast cmds: remote","info":"Test: reqires a remote tuyaDAEMON named 'ANDROID':\nGood response:\n\n19/4/2021, 20:26:10node: info\nmsg.payload : array[2]\n[ \"TX SET: fake 'HAL@home'/'_prox…\", object ]\n\n19/4/2021, 20:26:10 node: info\nmsg.payload : array[2]\narray[2]\n   0: \"RX: 'HAL@home'/'_proxy' \"\n   1: object\n      device: \"switch module #1\"\n      property: \"switch\"\n      from: \"ANDROID\"\n      status: \"sent\"\n      \n// if the device, here the 'switch module #1'\n//  is also in the local tuyaDAEMON, \n//  we get the local response:\n19/4/2021, 20:26:10 node: info\nmsg.payload : array[2]\narray[2]\n  0: \"RX: 'switch module #1'/'switch' \"\n  1: \"OFF\"","x":600,"y":1300,"wires":[]},{"id":"2483bb6e.de4c14","type":"inject","z":"89f87d49.41b81","name":"GET _ACpower","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_ACpower\"}","payloadType":"json","x":200,"y":1140,"wires":[["aa325e28.91322"]]},{"id":"aa325e28.91322","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":435,"y":1100,"wires":[]},{"id":"2e16e8b1.73e438","type":"inject","z":"89f87d49.41b81","name":"GET _name","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_name\"}","payloadType":"json","x":190,"y":1300,"wires":[["aa325e28.91322"]]},{"id":"8ac9a7c7.af5e88","type":"inject","z":"89f87d49.41b81","name":"GET _WiFiunconnected","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_WiFiunconnected\"}","payloadType":"json","x":220,"y":1180,"wires":[["aa325e28.91322"]]},{"id":"d662cee5.a544e","type":"inject","z":"89f87d49.41b81","name":"GET _trgPing","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_trgPing\"}","payloadType":"json","x":190,"y":1260,"wires":[["aa325e28.91322"]]},{"id":"4d20304.311d8d","type":"inject","z":"d02ad611.d94bc8","name":"remote SET ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"DEVPC\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"ON\"}","payloadType":"json","x":200,"y":1640,"wires":[["92960929.5eae58"]]},{"id":"240a4fe8.64ec3","type":"inject","z":"d02ad611.d94bc8","name":"REMOTE LIST","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"DEVPC\"}","payloadType":"json","x":200,"y":1760,"wires":[["92960929.5eae58"]]},{"id":"e8b6f990.f49328","type":"inject","z":"d02ad611.d94bc8","name":"Remote SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"DEVPC\",\"device\":\"switch module 1\"}","payloadType":"json","x":210,"y":1720,"wires":[["92960929.5eae58"]]},{"id":"1452d5b2.c7b86a","type":"inject","z":"d02ad611.d94bc8","name":"Remote GET","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"DEVPC\",\"device\":\"switch module 1\",\"property\":\"switch\"}","payloadType":"json","x":190,"y":1680,"wires":[["92960929.5eae58"]]},{"id":"12bc7ddd.9da292","type":"inject","z":"d02ad611.d94bc8","name":"remote SET OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"remote\":\"DEVPC\",\"device\":\"switch module 1\",\"property\":\"switch\",\"value\":\"OFF\"}","payloadType":"json","x":200,"y":1600,"wires":[["92960929.5eae58"]]},{"id":"92960929.5eae58","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":415,"y":1600,"wires":[]},{"id":"11f08924.a38b37","type":"comment","z":"d02ad611.d94bc8","name":"Test CMD: remote, itself","info":"","x":200,"y":1560,"wires":[]},{"id":"2027330b.fa9a8c","type":"inject","z":"89f87d49.41b81","name":"SET _trgPing","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_trgPing\",\"value\":\"any\"}","payloadType":"json","x":190,"y":1220,"wires":[["aa325e28.91322"]]},{"id":"3d54171f.a9e138","type":"link in","z":"173260fb.d021ff","name":"share IN","links":["e6e5a7b3.a53aa8","818feefe.ab666"],"x":780,"y":1300,"wires":[["e6b9ecd2.653e4"]],"l":true,"info":"## ENTRY point to execute a 'share'\n\nmsg Format:\n            \"info\": {\n                  \"\"\n            }\n            \"share\": [{\n                \"test\": [\n                     `condition-string-1`\n                     ... more test strings ... ],\n                \"action\": [{\n                     \"remote\"  : \"NAMEXX\",       // optional\n                     \"device\"  : `device`,\n                     \"property\": `property` |@expression,    \n                     \"value\"   : `set-value`|@expression\n                           } ... more actions...]\n                     } ... more {(test[],) action[]} ...\n                 ]\n\nsee [alldevices](https://github.com/msillano/tuyaDAEMON/wiki/tuyaDAEMOM-global.alldevices#share-actions)"},{"id":"886cdd12.7efdd","type":"jsontimer","z":"89f87d49.41b81","name":"","locale":"it-IT","localeOptions":"{\"weekday\":\"long\",\"month\":\"2-digit\",\"day\":\"2-digit\"}","x":740,"y":720,"wires":[["f1b6a20b.e720e"],["284250cf.ebbeb"]]},{"id":"f1b6a20b.e720e","type":"switch","z":"89f87d49.41b81","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"list","vt":"str"},{"t":"eq","v":"settimer","vt":"str"},{"t":"eq","v":"error","vt":"str"},{"t":"eq","v":"clearedtimer","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":990,"y":700,"wires":[["47c43848.b113c8"],["71166e6c.2329f"],["152e082b.157508"],["e36be163.d8173"]]},{"id":"818feefe.ab666","type":"link out","z":"89f87d49.41b81","name":"to core.share IN","links":["3d54171f.a9e138"],"x":1235,"y":880,"wires":[]},{"id":"152e082b.157508","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_timerON","type":"str"},{"name":"value","value":"@\"ERROR: \"+msg.error","type":"str"}],"x":1230,"y":760,"wires":[["be8e7d4f.d6577"]]},{"id":"71166e6c.2329f","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_timerON","type":"str"},{"name":"value","value":"@msg.datetime","type":"str"}],"x":1230,"y":720,"wires":[["be8e7d4f.d6577"]]},{"id":"47c43848.b113c8","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_timerList","type":"str"},{"name":"value","value":"@msg.timers","type":"str"}],"x":1230,"y":680,"wires":[["be8e7d4f.d6577"]]},{"id":"be8e7d4f.d6577","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":1395,"y":680,"wires":[]},{"id":"2d69ff50.f4e4c","type":"inject","z":"89f87d49.41b81","name":"*timerON 30s ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_timerON\",\"value\":{\"id\":\"test1\",\"timeout\":30000,\"alarmPayload\":{\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":5000}]}]}}}","payloadType":"json","x":250,"y":1360,"wires":[["7c949bb.9267764"]],"info":"NOTE:\nIt is OK if it sends,  30 s later, a TUYA TRIGGER:  \n  [\"RX: 'HAL@home'/'_doTrigger' \",5000],\nand the TRIGGER5000 produces ( using tuya-cloud automation):\n  [\" RX: 'switch module #1'/'switch'\", \"ON\"] \n  \nFOR test - Required automation in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"7c949bb.9267764","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":455,"y":1360,"wires":[]},{"id":"8abf0fbe.23b36","type":"inject","z":"89f87d49.41b81","name":"timerOFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_timerOFF\",\"value\":\"test1\"}","payloadType":"json","x":240,"y":1400,"wires":[["7c949bb.9267764"]]},{"id":"85655caa.46b94","type":"inject","z":"89f87d49.41b81","name":"timer  GET list","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_timerList\"}","payloadType":"json","x":250,"y":1440,"wires":[["7c949bb.9267764"]]},{"id":"e36be163.d8173","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_timerOFF","type":"str"},{"name":"value","value":"@\"Cleared timer id: \"+ msg.id","type":"str"}],"x":1230,"y":800,"wires":[["be8e7d4f.d6577"]]},{"id":"fbc04e05.ea7f6","type":"comment","z":"89f87d49.41b81","name":"Test case for _system","info":"","x":120,"y":1060,"wires":[]},{"id":"851bcf96.8ecb6","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":975,"y":1120,"wires":[]},{"id":"7ac282a8.cb16dc","type":"inject","z":"89f87d49.41b81","name":"*test TRIGGER 5020","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":5020}","payloadType":"json","x":750,"y":1160,"wires":[["851bcf96.8ecb6"]],"info":"FOR test - Required automations in Tuya :\n\n5020: set  switch module #1 OFF:\n\n`if \"tuya_bridge\"countdown:5020, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:off`"},{"id":"dc9e0d22.63077","type":"inject","z":"89f87d49.41b81","name":"*test TRIGGER 5000","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":5000}","payloadType":"json","x":750,"y":1120,"wires":[["851bcf96.8ecb6"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"813245ca.f67af8","type":"comment","z":"89f87d49.41b81","name":"trgPing","info":"","x":990,"y":500,"wires":[]},{"id":"6f547848.10d178","type":"comment","z":"89f87d49.41b81","name":"timer","info":"","x":730,"y":680,"wires":[]},{"id":"21cde6b9.c6121a","type":"comment","z":"89f87d49.41b81","name":"proxy","info":"","x":750,"y":100,"wires":[]},{"id":"678390f9.125df","type":"link out","z":"173260fb.d021ff","name":"to logging","links":["9fe80f7e.f3f7e"],"x":1135,"y":800,"wires":[],"icon":"font-awesome/fa-expand"},{"id":"50c7d930.c7b2a8","type":"comment","z":"89f87d49.41b81","name":"Alarms","info":"","x":180,"y":320,"wires":[]},{"id":"3a1df4f8.435cec","type":"link out","z":"89f87d49.41b81","name":"to core.low_level_IN","links":["b25c688d.705df8"],"x":535,"y":640,"wires":[]},{"id":"e6e5a7b3.a53aa8","type":"link out","z":"89f87d49.41b81","name":"to core.share IN","links":["3d54171f.a9e138"],"x":535,"y":760,"wires":[]},{"id":"a838f77b.9166c8","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":535,"y":720,"wires":[]},{"id":"e8f89f67.1aa7f","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":535,"y":680,"wires":[]},{"id":"cbbbacd7.70e4","type":"function","z":"89f87d49.41b81","name":"tuyastatus","func":"//  GET, SCHEMA: solved from tuyastaus, returns data \n//  SET, MULTIPLE: added to tuyastatus\n// input: payload:{device:<name>,property:<name>,value} note: names, not id/dp\n\n\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nvar tuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined) return null;\n\n// builds a message for log\nvar newMsg = {\n        \"payload\": {\n            \"deviceId\": \"_system\",\n            \"data\": {\n                \"dps\": {}\n            }\n        }\n    };\n// ----------- is LIST\nif ((msg.payload === undefined) || (msg.payload.device === undefined)){  \n         msg[\"payload\"] = {list: Object.keys(tuyastatus)};\n         newMsg.payload.data.dps[\"_tuyastatus\"] = msg.payload;\n         return (newMsg);\n       }\n\n// -----------------------  device normalization\nvar alld = global.get(\"alldevices\");\nvar devObj = _callJSONMethod(alld, \"__getODev\", msg.payload.device);\nif (devObj === undefined) {\n    node.warn([\"ERROR _system.fastdevice: not found in alldevices the device '\" + msg.payload.device + \"'\", msg]);\n    return [null];\n}\nmsg.payload.device = _callJSONMethod(alld, \"__getDevName\", devObj);\nmsg[\"to\"] = (devObj.cid !== undefined)? devObj.cid: devObj.id;\n// ------------------------ property normalization\nmsg[\"infodp\"] = \"schema\";\nif (msg.payload.property !== undefined)  { \n       dpObj = _callJSONMethod(alld, \"__getODps\", devObj, msg.payload.property);\n       if (dpObj !== undefined) {\n            msg[\"infodp\"] =  dpObj.dp.toString();\n            msg.payload.property = (dpObj.name === undefined) ? dpObj.dp : dpObj.name; \n        } else {\n           msg[\"infodp\"] = msg.payload.property.toString(); \n        }\n}\n//  end normalization\n\n// clear old response, if any\nif (tuyastatus[msg.sysname][msg.propname] !== undefined)\n  delete tuyastatus[msg.sysname][msg.propname];\n\n// ------------ is SCHEMA\nif (msg[\"infodp\"] === \"schema\")  { \n         if ( tuyastatus[msg.payload.device] === undefined) {\n             node.warn([\"Not found in tuyastatus \"+ msg.payload.device], tuyastatus, msg);\n             return null;\n         }\n         msg.payload['value'] =  {schema: tuyastatus[msg.payload.device]};\n         newMsg.payload.data.dps[\"_tuyastatus\"] = msg.payload;\n         return (newMsg);\n}\n// ------------ is GET\nif (msg.payload.value === undefined) { \n        if ( tuyastatus[msg.payload.device] === undefined) {\n             node.warn([\"Not found in tuyastatus \"+ msg.payload.device], tuyastatus, msg);\n             return null;\n         }\n        if ( tuyastatus[msg.payload.device][msg.payload.property] === undefined) {\n             node.warn([\"Not found in tuyastatus \"+ msg.payload.device + \".\"+msg.payload.property], tuyastatus, msg);\n             return null;\n         }\n         msg.payload['value'] = tuyastatus[msg.payload.device][msg.payload.property];\n         newMsg.payload.data.dps[\"_tuyastatus\"] = msg.payload;\n         return (newMsg);\n}\n// ------------ is SET\nif  (tuyastatus[msg.payload.device] !== undefined) {\n         if ( tuyastatus[msg.payload.device] === undefined) {\n             node.warn([\"Not found in tuyastatus \"+ msg.payload.device], tuyastatus, msg);\n             return null;\n         }\n         tuyastatus[msg.payload.device][msg.payload.property] = msg.payload.value;\n         newMsg.payload.data.dps[\"_tuyastatus\"] = msg.payload;\n         global.set(\"tuyastatus\", tuyastatus);\n         return (newMsg);\n}\n//-------------- else ERROR\n    node.warn([\"_system._tuyastatus ERROR\",msg]);\n    return null;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":610,"y":920,"wires":[["11023367.4cf45d"]]},{"id":"11023367.4cf45d","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":895,"y":900,"wires":[]},{"id":"aa6116ba.7b69c8","type":"link out","z":"89f87d49.41b81","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":535,"y":840,"wires":[]},{"id":"eff3642f.49bd28","type":"debug","z":"89f87d49.41b81","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":535,"y":800,"wires":[],"l":false},{"id":"13f8eb2a.250805","type":"inject","z":"89f87d49.41b81","name":"test toDebug","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toDebug\",\"value\":\"For test\"}","payloadType":"json","x":770,"y":1200,"wires":[["851bcf96.8ecb6"]]},{"id":"2ce4c555.fb370a","type":"inject","z":"89f87d49.41b81","name":"test toFastIN \"power strip switch1 ON\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toFastIN\",\"value\":{\"device\":\"power strip\",\"property\":\"1\",\"value\":\"ON\"}}","payloadType":"json","x":690,"y":1300,"wires":[["851bcf96.8ecb6"]]},{"id":"78de5a90.0bf884","type":"inject","z":"89f87d49.41b81","name":"test toLogging \"system _toWarn Done\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toLogging\",\"value\":{\"deviceId\":\"_system\",\"data\":{\"dps\":{\"_toWarn\":\"Done\"}}}}","payloadType":"json","x":690,"y":1340,"wires":[["851bcf96.8ecb6"]]},{"id":"b67d210c.66c28","type":"inject","z":"89f87d49.41b81","name":"test _toStdCmd \"power strip switch1 ON\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toStdCmd\",\"value\":{\"device\":\"power strip\",\"property\":\"1\",\"value\":\"ON\"}}","payloadType":"json","x":700,"y":1420,"wires":[["851bcf96.8ecb6"]]},{"id":"4ae227ee.d50958","type":"inject","z":"89f87d49.41b81","name":"test _toLowIN \"power strip switch1 OFF\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toLowIN\",\"value\":{\"toDev\":\"3613666124a1600db127\",\"payload\":{\"dps\":\"1\",\"set\":false}}}","payloadType":"json","x":690,"y":1380,"wires":[["851bcf96.8ecb6"]]},{"id":"fc91fdc1.2b279","type":"inject","z":"89f87d49.41b81","name":"test toWarn","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toWarn\",\"value\":\"OK warn test\"}","payloadType":"json","x":770,"y":1240,"wires":[["851bcf96.8ecb6"]]},{"id":"2c4c87f.8f9c578","type":"inject","z":"89f87d49.41b81","name":"Test tuyastatus LIST","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{}}","payloadType":"json","x":210,"y":1520,"wires":[["b4d2d9e.ab5fb28"]]},{"id":"d0f9c712.9691d8","type":"inject","z":"89f87d49.41b81","name":"Test tuyastatus GET \"_laststart\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"HAL@home\",\"property\":\"_laststart\"}}","payloadType":"json","x":250,"y":1600,"wires":[["b4d2d9e.ab5fb28"]]},{"id":"dce9fb68.20f798","type":"inject","z":"89f87d49.41b81","name":"Test tuyastatus _system.SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"HAL@home\"}}","payloadType":"json","x":260,"y":1560,"wires":[["b4d2d9e.ab5fb28"]]},{"id":"4bdfd324.39f9dc","type":"inject","z":"89f87d49.41b81","name":"Test tuyastatus SET \"_laststart\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"HAL@home\",\"property\":\"_laststart\",\"value\":\"2000-01-01 15:59:40\"}}","payloadType":"json","x":250,"y":1640,"wires":[["b4d2d9e.ab5fb28"]]},{"id":"6830d12a.a0e64","type":"comment","z":"173260fb.d021ff","name":"IN COMMANDS","info":"","x":200,"y":560,"wires":[]},{"id":"2a17d0b8.943bd","type":"comment","z":"173260fb.d021ff","name":"real tuya devices","info":"Add here the 'real tuya-devices' i.e. the devices handled by smart-tuya-device node.\n\nSee in the wiki [how to add a new device](https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON)","x":1200,"y":100,"wires":[]},{"id":"602cabcf.0bd114","type":"inject","z":"89f87d49.41b81","name":"GET _system SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\"}","payloadType":"json","x":220,"y":1100,"wires":[["aa325e28.91322"]]},{"id":"dd5ae54c.7ce6b8","type":"inject","z":"66e0cde4.b696f4","name":"TEST SCHEMA","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"watering_sys\"}","payloadType":"json","x":200,"y":1160,"wires":[["1782306c.d003c"]]},{"id":"9e7acf3.31b0c3","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":555,"y":1220,"wires":[]},{"id":"5643c46b.36ebac","type":"inject","z":"d02ad611.d94bc8","name":"Test std GET  '_laststart'","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"HAL@home\",\"property\":\"_laststart\"}","payloadType":"json","x":220,"y":1220,"wires":[["9e7acf3.31b0c3"]]},{"id":"2c0e5d31.d02b72","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["c084a743.290b28"],"x":555,"y":1180,"wires":[]},{"id":"662b4708.817888","type":"inject","z":"d02ad611.d94bc8","name":"Test fast GET  '_laststart'","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"HAL@home\",\"property\":\"_laststart\"}","payloadType":"json","x":220,"y":1180,"wires":[["2c0e5d31.d02b72"]]},{"id":"4399bd03.cfe4e4","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":575,"y":1920,"wires":[]},{"id":"5b75f4c9.3372ac","type":"inject","z":"d02ad611.d94bc8","name":"Test std GET  \"power strip\". \"Switch1\"'","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"Switch1\"}","payloadType":"json","x":270,"y":1920,"wires":[["4399bd03.cfe4e4"]]},{"id":"e0b5bf10.b95ce","type":"inject","z":"d02ad611.d94bc8","name":"Test std   \"power strip\"  SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"power strip\"}","payloadType":"json","x":250,"y":1960,"wires":[["4399bd03.cfe4e4"]]},{"id":"ad341350.43d4f","type":"link out","z":"d02ad611.d94bc8","name":"to core.fast_cmd","links":["c084a743.290b28"],"x":1155,"y":1920,"wires":[]},{"id":"1e141637.a73b6a","type":"inject","z":"d02ad611.d94bc8","name":"Test fast  GET  \"power strip\". \"Switch1\"'","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"Switch1\"}","payloadType":"json","x":830,"y":1920,"wires":[["ad341350.43d4f"]]},{"id":"d744c6c8.f1ef78","type":"inject","z":"d02ad611.d94bc8","name":"Test fast   \"power strip\"  SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{    \"device\": \"power strip\"}","payloadType":"json","x":810,"y":1960,"wires":[["ad341350.43d4f"]]},{"id":"9b6db06f.ef673","type":"comment","z":"d02ad611.d94bc8","name":"real device: tests in every way  GET  & SCHEMA","info":"Using for test 'power strip' device\nbecause it honors SCHEMA commands\n-----------------------\nNow, the same operation (e.g. GET) can be done in many ways. This tests are here for debug purpose, but are good examples of the request objects and the output data.\n-----------------------\nIn your applications, choose the simplest way. :)\n\nNotes on differences:\n\n**Fast vs Std: **\n  No start \"TX\" message in debug pad\n\n**Fast|Std  SCHEMA:**\n  One \"RX\" message in debug pad for every dp:\n   [\"RX: 'power strip'/'Switch1' \",\"OFF\"]\n   \n**call_cmd|_doCallIN GET ** \n One \"RX\" message in debug pad plus\n in call_return the response is:\n     from: <deviceId>, \n     infodp: <pd>, \n     payload: <value>      (undecoded)\n  \n**call_cmd|_doCallIN SCHEMA **  \n  One \"RX\" message in debug pad for every dp plus\n  in call_return the response is:\n      from: <deviceId>, \n      infodp: schema, \n      payload: \n          schema: \n             1: false,      (dp:undecoded)\n             ......\n\n**_tuyastatus GET returns:**\n One \"RX\" message in debug pad \n   [0: \"RX: 'HAL@home'/'_tuyastatus' \",\n    1: object\n     device: \"power strip\"  (name)\n     property: \"Switch1\"    (name)\n     value: \"OFF\"    ]      (decoded)\n     \n**_tuyastatus SCHEMA returns:**\n One \"RX\" message in debug pad \n   [0: \"RX: 'HAL@home'/'_tuyastatus' \",\n    1: object\n     device: \"power strip\"  (name)\n     value: \n       schema: object\n          Switch1: \"OFF\"    (name:decoded)\n          .......","x":240,"y":1880,"wires":[]},{"id":"f929b96d.4398e8","type":"inject","z":"d02ad611.d94bc8","name":"Test std   _tuyastatus  GET  power strip.Switch1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"power strip\",\"property\":\"Switch1\"}}","payloadType":"json","x":290,"y":2020,"wires":[["4399bd03.cfe4e4"]]},{"id":"8752150d.835c08","type":"inject","z":"d02ad611.d94bc8","name":"Test std  tuyastatus  \"power strip\"  SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"power strip\"}}","payloadType":"json","x":280,"y":2060,"wires":[["4399bd03.cfe4e4"]]},{"id":"e9c70273.b8134","type":"inject","z":"d02ad611.d94bc8","name":"Test fast   _tuyastatus  GET  power strip.Switch1","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"power strip\",\"property\":\"Switch1\"}}","payloadType":"json","x":850,"y":2020,"wires":[["ad341350.43d4f"]]},{"id":"3a14f428.1fab7c","type":"inject","z":"d02ad611.d94bc8","name":"Test fast _tuyastatus   \"power strip\"  SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"power strip\"}}","payloadType":"json","x":850,"y":2060,"wires":[["ad341350.43d4f"]]},{"id":"4b771bf3.b8cef4","type":"function","z":"173260fb.d021ff","name":"pseudo DPs","func":"\n//process for pseudoDP \n//---------------------- some asserts for not fake devices\nif (!msg.toDev) {\n    node.warn([\"ASSERT fail: msg.toDev must exist in real|virtual devices.\", msg]);\n    return [null];\n}\n\n// special output message\nvar newMsg = {\n     toDev : msg.toDev,\n     payload:{operation: \"CONTROL\"}\n };\n\n// processes pseudoDP _standby, _findTimeout doing a format change.\n//  SET/GET case:\n// see also  alldevices.__pseudodp: \"['_T', '_CONNECTED','_REFRESHCYCLE', '_REFRESH','_STANDBY','_FINDTIMEOUT','MULTIPLE','SCHEMA']\",\n// case sensitive\nswitch (msg.payload.dps){\n    case \"_standby\":\n//        node.warn(\"in STANDBY\");\n        if (msg.payload.set !== undefined){          // is SET\n //           newMsg[\"standby\"] = !!(msg.payload.set);\n            newMsg.payload[\"action\"] = !!(msg.payload.set)? \"DISCONNECT\":\"CONNECT\";\n            return newMsg;\n            }\n// GET: ignore            \n        return null;\n    case \"_findTimeout\":\n         if (msg.payload.set !== undefined){      // is SET\n  //        newMsg[\"findTimeout\"] = Number(msg.payload.set);\n            newMsg.payload[\"action\"] = \"SET_FIND_TIMEOUT\";\n            newMsg.payload[\"value\"] = Number(msg.payload.set);\n            return newMsg;\n            }\n  // GET: ignore            \n        return null;\n  case \"_retryTimeout\":\n         if (msg.payload.set !== undefined){      // is SET\n  //        newMsg[\"findTimeout\"] = Number(msg.payload.set);\n            newMsg.payload[\"action\"] = \"SET_RETRY_TIMEOUT\";\n            newMsg.payload[\"value\"] = Number(msg.payload.set);\n            return newMsg;\n            }\n// GET: ignore            \n        return null;\n// not implemented: kills        \n    case \"_T\":\n    case \"_t\":\n    case \"_connected\":\n    case \"SCHEMA\":\n    case \"schema\":\n        return null;\n// implemented:  nothing to do      \n    case \"_refreshCycle\":\n    case \"_refresh\":\n    default:  \n// test for MULTIPLE case +  _standby | _findTimeout: \n// here is case sensitive\n        if ((msg.payload.data !== undefined) && (msg.payload.data._standby !== undefined)) {\n              let aval = msg.payload.data._standby;\n              delete msg.payload.data._standby;\n //             node.send(msg);\n //             newMsg[\"standby\"]=aval;\n              newMsg.payload[\"action\"] = !!(aval)? \"CONNECT\":\"DISCONNECT\";\n              node.send(newMsg);\n        }\n       if ((msg.payload.data !== undefined) && (msg.payload.data._findTimeout !== undefined)) {\n              let aval = msg.payload.data._findTimeout;\n              delete msg.payload.data._findTimeout;\n//              node.send(msg);\n//              newMsg[\"findTimeout\"]=aval;\n               newMsg.payload[\"action\"] = \"SET_FIND_TIMEOUT\";\n               newMsg.payload[\"value\"] = aval;\n               node.send(newMsg);\n       }\n      if ((msg.payload.data !== undefined) && (msg.payload.data._retryTimeout !== undefined)) {\n              let aval = msg.payload.data._retryTimeout;\n              delete msg.payload.data._retryTimeout;\n//              node.send(msg);\n//              newMsg[\"findTimeout\"]=aval;\n               newMsg.payload[\"action\"] = \"SET_RETRY_TIMEOUT\";\n               newMsg.payload[\"value\"] = aval;\n               node.send(newMsg);\n       }\n\n}  // case ends\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":600,"wires":[["5777b120.3dc3e"]]},{"id":"42a9cbac.ae6354","type":"comment","z":"d02ad611.d94bc8","name":"TEST pseudoDP:  _standby, _findTimeout","info":"Used as dp for ALL real DEVICES\n\n_standby = true|false, for unconnected devices SET/MULTIPLE only\n_findTimeout = 1000... xxx000   millisecond,  SET/MULTIPLE only","x":240,"y":2440,"wires":[]},{"id":"5cf9bbfa.6f7c84","type":"inject","z":"d02ad611.d94bc8","name":"meter SET _refreshCycle 10s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refreshCycle\",\"value\":10}","payloadType":"json","x":260,"y":2220,"wires":[["de64614.cd6d8a"]]},{"id":"de64614.cd6d8a","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":475,"y":2220,"wires":[]},{"id":"343bd6cb.13cb7a","type":"inject","z":"d02ad611.d94bc8","name":"meter SET _refreshCycle 5s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refreshCycle\",\"value\":5}","payloadType":"json","x":260,"y":2260,"wires":[["de64614.cd6d8a"]]},{"id":"192ad41a.29897c","type":"comment","z":"d02ad611.d94bc8","name":"test  pseudo-DP  REFRESH","info":"Is required a device accepting refresh()\nHere is 'meter'.","x":210,"y":2160,"wires":[]},{"id":"b96776e1.361af8","type":"inject","z":"d02ad611.d94bc8","name":"test SET  power strip standby ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"_standby\",\"value\":true}","payloadType":"json","x":270,"y":2480,"wires":[["d05feec8.64e4e"]]},{"id":"85bf3a2e.9fbf78","type":"inject","z":"d02ad611.d94bc8","name":"test SET  power strip standby OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"power strip\",\"property\":\"_standby\",\"value\":false}","payloadType":"json","x":280,"y":2520,"wires":[["d05feec8.64e4e"]]},{"id":"d05feec8.64e4e","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":535,"y":2480,"wires":[]},{"id":"19983441.02e7ec","type":"inject","z":"d02ad611.d94bc8","name":"test  SET  tuya_bridge standby ON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"_standby\",\"value\":true}","payloadType":"json","x":270,"y":2580,"wires":[["eea2d98c.558178"]]},{"id":"9b453d7b.d5f6","type":"inject","z":"d02ad611.d94bc8","name":"test  SET tuya_bridge standby OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"tuya_bridge\",\"property\":\"_standby\",\"value\":false}","payloadType":"json","x":280,"y":2620,"wires":[["eea2d98c.558178"]]},{"id":"eea2d98c.558178","type":"link out","z":"d02ad611.d94bc8","name":"to fast_cmds","links":["c084a743.290b28"],"x":535,"y":2580,"wires":[]},{"id":"632e3514.4ce55c","type":"inject","z":"d02ad611.d94bc8","name":"meter SET REFRESH","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refresh\",\"value\":\"now\"}","payloadType":"json","x":660,"y":2260,"wires":[["fc6aa253.9d063"]]},{"id":"fc6aa253.9d063","type":"link out","z":"d02ad611.d94bc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":915,"y":2220,"wires":[]},{"id":"b367c222.5d7b5","type":"inject","z":"d02ad611.d94bc8","name":"meter GET REFRESH","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refresh\"}","payloadType":"json","x":660,"y":2300,"wires":[["fc6aa253.9d063"]]},{"id":"b024f45a.fc6558","type":"inject","z":"d02ad611.d94bc8","name":"meter MULTIPLE  _refreshCycle","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"multiple\",\"value\":{\"1\":true,\"_refreshCycle\":20}}","payloadType":"json","x":270,"y":2380,"wires":[["de64614.cd6d8a"]]},{"id":"9b67396e.1e5768","type":"inject","z":"d02ad611.d94bc8","name":"meter GET _refreshCycle","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refreshCycle\"}","payloadType":"json","x":250,"y":2340,"wires":[["de64614.cd6d8a"]]},{"id":"b7a4b3eb.5bf12","type":"inject","z":"d02ad611.d94bc8","name":"meter MULTIPLE  REFRESH","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"multiple\",\"value\":{\"1\":false,\"_refresh\":true}}","payloadType":"json","x":680,"y":2340,"wires":[["fc6aa253.9d063"]]},{"id":"9c371000.0c634","type":"inject","z":"d02ad611.d94bc8","name":"test: null command (error)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{}","payloadType":"json","x":230,"y":1120,"wires":[["1e5c8c33.f6d8a4"]]},{"id":"3f68b078.67e61","type":"inject","z":"d02ad611.d94bc8","name":"test: null command (error)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{}","payloadType":"json","x":630,"y":1120,"wires":[["b741480f.454488"]]},{"id":"fb4bfc14.6eece","type":"link in","z":"173260fb.d021ff","name":"fake_cmds_IN","links":[],"x":250,"y":780,"wires":[["18817677.061b9a"]],"l":true,"info":"INPUT for direct commands to _local fake devices_, input Messages MUST be `normalizated` to speedup next elaborations:\n\nused to update `global.tuyastatus`:\n-   `msg.payload.device   = usr-dev-name|msg.to`\n-   `msg.payload.property = undef|usr-dp-name|msg.infodp`\n-   `msg.payload.value    = undef|any`  \n\nused as keys:\n-   `msg.to     = cid|deviceId`  (mandatory)\n-   `msg.infodp = dp|pseudoDP` (mandatory)\n-   `msg.toDev  = gatewayId|deviceId` (not in fake devices)\n\nrules:\n- Only for local devices, not handled by 'tya-smart-device'.\n- pseudoDPs are defined in `global.alldevices.__pseuododp` array.\n- The device|dp `capabilities` are not checked.\n- The device _connection status is not checked.\n- SET: `value` = defined\n- GET: `value` = undefined\n- SCHEMA: `infodp` = 'schema', `property`= undefined, `value`= undefined\n\nrare in _fake devices_:\n- MULTIPLE: `infodp` = 'multiple', `property` = 'multiple', `value` = coded, sent 'as is' to device.\n\n"},{"id":"6db5220c.6c9b0c","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":995,"y":1800,"wires":[]},{"id":"bdf69c76.41d49","type":"inject","z":"89f87d49.41b81","name":"test GET last benckmark","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_benchmark\"}","payloadType":"json","x":650,"y":2020,"wires":[["6db5220c.6c9b0c"]]},{"id":"fbffd457.7c0468","type":"inject","z":"89f87d49.41b81","name":"test zeroTASK","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_zeroTask\"}","payloadType":"json","x":630,"y":1800,"wires":[["6db5220c.6c9b0c"]]},{"id":"3ba15d04.5eb9c2","type":"inject","z":"89f87d49.41b81","name":"test zeroLOG","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_zeroLog\",\"value\":\"any\"}","payloadType":"json","x":630,"y":1840,"wires":[["6db5220c.6c9b0c"]]},{"id":"d35496cf.5460c8","type":"inject","z":"89f87d49.41b81","name":"test  SET doBenckmark (START)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_doBenchmark\",\"value\":\"start\"}","payloadType":"json","x":670,"y":2080,"wires":[["6db5220c.6c9b0c"]]},{"id":"15c0e9da.da8da6","type":"inject","z":"89f87d49.41b81","name":"test SET benckmark zeroTask (20s)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_benchmark\",\"value\":{\"device\":\"_system\",\"property\":\"_zeroTask\",\"timeout\":20000}}","payloadType":"json","x":680,"y":1900,"wires":[["6db5220c.6c9b0c"]]},{"id":"ffba941b.5b7c78","type":"inject","z":"89f87d49.41b81","name":"test SET benckmark zeroLog","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_benchmark\",\"value\":{\"device\":\"_system\",\"property\":\"_zeroLog\",\"value\":\"a_string\"}}","payloadType":"json","x":660,"y":1940,"wires":[["6db5220c.6c9b0c"]]},{"id":"aa9acc61.81b7d","type":"inject","z":"89f87d49.41b81","name":"test  GET doBenckmark","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_doBenchmark\"}","payloadType":"json","x":640,"y":2120,"wires":[["6db5220c.6c9b0c"]]},{"id":"bb4ca213.f2782","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR devices: TUYA TRIGGERS examples","info":"","x":240,"y":520,"wires":[]},{"id":"e04a800e.51363","type":"comment","z":"66e0cde4.b696f4","name":"Actions from smartLife app","info":"","x":970,"y":1040,"wires":[]},{"id":"8c7df6be.fba948","type":"comment","z":"66e0cde4.b696f4","name":"local tests","info":"","x":140,"y":880,"wires":[]},{"id":"18f4cd1a.6ed903","type":"comment","z":"66e0cde4.b696f4","name":"UI interface","info":"","x":890,"y":200,"wires":[]},{"id":"82a7c123.f619e","type":"comment","z":"66e0cde4.b696f4","name":"restart","info":"","x":1110,"y":260,"wires":[]},{"id":"8bd00e4b.8b09e","type":"comment","z":"173260fb.d021ff","name":"selector for standard devices","info":"","x":700,"y":220,"wires":[]},{"id":"7bdff43d.ef820c","type":"comment","z":"173260fb.d021ff","name":"connection messages","info":"","x":1480,"y":60,"wires":[]},{"id":"9538139a.19ca1","type":"link in","z":"173260fb.d021ff","name":"sql_BD","links":["87a7bcc7.bedfa"],"x":970,"y":1320,"wires":[["70d88fb4.7fcc2"]],"l":true,"info":"##  Entry point for DB (sql)\n\nFormat for tuyaDAEMON Logging purpose (no log):\n\n       {\n        to|from: `deviceId`|`cid`,  // mandatory\n        infodp:  `property`,\n        topic:   \"INSERT ...\"     // sql\n       }\n   \nFormat to execute user sql (log):\n\n       {\n        to:     \"_system\",     \n        // -- userdefined DBs (see `_system`)\n        infodp: \"_sqlDBlocal\"|\"_sqlDBandroid\"|...,\n        topic:  `sql-string`\n       } \n       \nUpdate the `*DB mux-filter` node.        "},{"id":"87a7bcc7.bedfa","type":"link out","z":"89f87d49.41b81","name":"to core.sql_DB","links":["9538139a.19ca1"],"x":455,"y":920,"wires":[]},{"id":"9ed599c6.5dc328","type":"subflow:81d3b584.14c888","z":"173260fb.d021ff","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_sqlDBlocal","type":"str"},{"name":"value","value":"@msg._event? msg.payload: undefined","type":"str"}],"x":1750,"y":1260,"wires":[["e32fa2db.d0b7c"]]},{"id":"29e8ecd6.79a274","type":"subflow:81d3b584.14c888","z":"173260fb.d021ff","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_sqlDBandroid","type":"str"},{"name":"value","value":"@msg._event? msg.payload: undefined","type":"str"}],"x":1750,"y":1380,"wires":[["e32fa2db.d0b7c"]]},{"id":"e32fa2db.d0b7c","type":"link out","z":"173260fb.d021ff","name":"to log","links":["9fe80f7e.f3f7e"],"x":1935,"y":1260,"wires":[]},{"id":"74205825.bd5e98","type":"mysql","z":"173260fb.d021ff","mydb":"7e3077c8.ff8e88","name":"*append to DB local","x":1540,"y":1200,"wires":[[]],"info":"CUSTOMIZATION:\n\nEdit for DB url and credentials. \nDisable/delete if not used."},{"id":"46a8112c.cdbcf","type":"mysql","z":"173260fb.d021ff","d":true,"mydb":"93f8bfd.d0c854","name":"*append to DB remote","x":1540,"y":1380,"wires":[["29e8ecd6.79a274"]],"info":"CUSTOMIZATION\n\nEdit for DB url and credentials. \nDisable/delete if not used."},{"id":"1ac1311.8bdaecf","type":"function","z":"89f87d49.41b81","name":"*_system custom selector (3)","func":"// selects&executes commands for _system: part 3\n// CUSTOMIZATION for used DB\n//\n// --------------- locals\nconst DEVID = \"_system\";\nconst DBDP =\"_Dbase\";\n\n// local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n        var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nfunction _getGlobalValue(mx){\nvar tuyastatus = global.get(\"tuyastatus\");\nif ((tuyastatus !== undefined) && (tuyastatus[mx.payload.device] !== undefined)) { // ok device field\n   if (mx.infodp === \"schema\") \n          return tuyastatus[mx.payload.device];\n   return tuyastatus[mx.payload.device][mx.payload.property];\n   }\nreturn undefined;\n}\n\n// test: _system GET command?\nfunction _isGetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value === undefined));\n}\n\n// test: _system SET command?\nfunction _isSetCommand(msx) {\n    return ((msx.infodp !== undefined) && (msx.payload.value !== undefined));\n}\n\n//base message to log\nvar newMsg = {\n     payload: {\n         deviceId : DEVID,\n         data : {\n             dps : {}\n        }\n    }\n};\n// --------------------------  main\nif (_isGetCommand(msg)) { // a GET\n    switch (msg.infodp) {\n      case \"_sqlDBlocal\":     \n      case \"_sqlDBandroid\":            // one 'dp' for DB\n// GET implemented reading tuyastatus\n            newMsg.payload.data.dps[msg.infodp] = _getGlobalValue(msg);\n            return([newMsg]);\n    }\n}\n\nif (_isSetCommand(msg)) { // a SET\n    switch (msg.infodp) {\n      case \"_sqlDBlocal\":\n      case \"_sqlDBandroid\":              // one 'dp' for DB: HERE CUSTOM\n//\n// test: are DBs ok? reading tuyastatus._system. _BBase (for all DBs, true|false)\n// ---- get user name\n    var alld = global.get(\"alldevices\");\n    var devObj = _callJSONMethod(alld, \"__getODev\", DEVID, \"fake\");\n    var dpObj  = _callJSONMethod(alld, \"__getODps\", devObj, \"_DBase\");\n    var devName= devObj.name? devObj.name:\"_system\";\n    var dpName = dpObj.name? dpObj.name: \"_DBase\";\n// test\n   let tuyastatus = global.get(\"tuyastatus\");\n   if ( tuyastatus[devName][dpName])\n       return ( [null,  {topic: msg.payload.value,\n                        to: msg.to,\n                        infodp: msg.infodp }]);  \n    node.warn([\"WARNING: sql not performed: Dbase now not connected.\",msg]);\n    return ([null]);\n     }\n}\n\n// last selector: warning if not processed\nnode.warn([\"WARNING [\"+DEVID+\"] The dp '\"+msg.infodp+\"' is NOT impelemented.\", msg])\nreturn ([null]);\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":280,"y":900,"wires":[["11023367.4cf45d"],["87a7bcc7.bedfa"]],"info":"CUSTOMIZATION\n\nAdding/deleting DB: here is the case of 2 DB \n\nTo add/modify DB\n  \n - set 2 nodes for every DB (log, no-log)\n - update '*all DB status' node\n  \n - define a `_system` property for every DB (like `_sqlDBlocal`, `_sqlDBandroid`) \n \n - add properties to alldevices (using `tuyadaemotoolkit` if you like)\n - edit this function: one 'dp' for DB\n  \n- update the core.'*DB mux-filter' node"},{"id":"923c786b.f43428","type":"comment","z":"d02ad611.d94bc8","name":"test for data encoding","info":"The _system._zeroLog show the SET value received.\n\nThis is a test for the default processing (i.e. without 'type' and 'typefield') of a value.","x":680,"y":400,"wires":[]},{"id":"8ecb4f93.c352f","type":"inject","z":"d02ad611.d94bc8","name":"string","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"test string","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":650,"y":460,"wires":[["fb2a9b8.38c9068"]]},{"id":"fb2a9b8.38c9068","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":815,"y":460,"wires":[]},{"id":"90faf976.03c8b8","type":"inject","z":"d02ad611.d94bc8","name":"string  '1234'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"1234","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":670,"y":540,"wires":[["fb2a9b8.38c9068"]]},{"id":"41efb182.afa51","type":"inject","z":"d02ad611.d94bc8","name":"string 'false'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"false","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":670,"y":580,"wires":[["fb2a9b8.38c9068"]]},{"id":"f0c66643.b5c5e8","type":"inject","z":"d02ad611.d94bc8","name":"int  1234","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"1234","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":890,"y":580,"wires":[["2e0b9f99.da3a5"]]},{"id":"1283d548.42307b","type":"inject","z":"d02ad611.d94bc8","name":"string '1.56'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"1.56","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":660,"y":620,"wires":[["fb2a9b8.38c9068"]]},{"id":"f17c2c26.825fd","type":"inject","z":"d02ad611.d94bc8","name":"number   3.14","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"3,14","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":910,"y":540,"wires":[["2e0b9f99.da3a5"]]},{"id":"33da11a1.1757ee","type":"inject","z":"d02ad611.d94bc8","name":"string 'null'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"null","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":660,"y":500,"wires":[["fb2a9b8.38c9068"]]},{"id":"79f13b48.7dd8e4","type":"inject","z":"d02ad611.d94bc8","name":"object","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"{ \"test\":\"a string\", \"more\":2}","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":891.4285888671875,"y":617.7142944335938,"wires":[["2e0b9f99.da3a5"]]},{"id":"2e0b9f99.da3a5","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":1055,"y":520,"wires":[]},{"id":"77b3c9e0.3edf68","type":"inject","z":"d02ad611.d94bc8","name":"string   3,14","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"3,14","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":660,"y":660,"wires":[["fb2a9b8.38c9068"]]},{"id":"340ae2f.78ee41e","type":"inject","z":"d02ad611.d94bc8","name":"number   3.14","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_zeroLog","vt":"str"},{"p":"payload.value","v":"3.14","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":910,"y":500,"wires":[["2e0b9f99.da3a5"]]},{"id":"373a99c1.1f5906","type":"inject","z":"89f87d49.41b81","name":"test SET benckmark GET tuya_bridge.restart status","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_benchmark\",\"value\":{\"device\":\"tuya_bridge\",\"property\":\"restart status\"}}","payloadType":"json","x":730,"y":1980,"wires":[["6db5220c.6c9b0c"]]},{"id":"197e0cd4.7da683","type":"inject","z":"89f87d49.41b81","name":"test DB local: COUNT(*)","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"SELECT COUNT(*) FROM messages","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":2100,"wires":[["3332c2d3.f540ae"]]},{"id":"3332c2d3.f540ae","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":475,"y":2100,"wires":[]},{"id":"8ca64de0.53053","type":"inject","z":"89f87d49.41b81","name":"test DB android: COUNT(*)","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBandroid","vt":"str"},{"p":"payload.value","v":"SELECT COUNT(*) FROM messages","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":230,"y":2140,"wires":[["3332c2d3.f540ae"]]},{"id":"a6cce705.bca568","type":"inject","z":"89f87d49.41b81","name":"test DB local: DELETE '_system'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"DELETE FROM `messages` WHERE `device-id` = '_system'  LIMIT 10000","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":2320,"wires":[["3332c2d3.f540ae"]]},{"id":"31575c49.1ac9c4","type":"inject","z":"89f87d49.41b81","name":"test DB local: DELETE 'tuya_bridge'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"DELETE FROM `messages` WHERE `device-name` = 'tuya_bridge'  LIMIT 100000","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":240,"y":2360,"wires":[["3332c2d3.f540ae"]]},{"id":"73a8d9a7.87b638","type":"inject","z":"89f87d49.41b81","name":"test DB local: DELETE '_connected'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"DELETE FROM `messages` WHERE `dps` = '_connected'  LIMIT 100000","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":240,"y":2400,"wires":[["3332c2d3.f540ae"]]},{"id":"55cf70e6.ee5ef","type":"comment","z":"89f87d49.41b81","name":"DB local  CLEANUP","info":"CUSTOMIZATIN\n\nGood candidate to be filtered...","x":170,"y":2280,"wires":[]},{"id":"531c417f.5b847","type":"inject","z":"89f87d49.41b81","name":"test DBlocal: AVG(voltage)  2021-04-27","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"SELECT AVG(`value`) FROM `messages` WHERE `device-name` = 'AC meter' AND `dp-name` = 'voltage' AND `timestamp` BETWEEN '2021-04-27' AND '2021-04-28'","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":270,"y":2180,"wires":[["3332c2d3.f540ae"]]},{"id":"72f20175.c3719","type":"inject","z":"89f87d49.41b81","name":"test DBlocal: GET last result","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":240,"y":2220,"wires":[["3332c2d3.f540ae"]]},{"id":"7c635dc0.0ca084","type":"comment","z":"89f87d49.41b81","name":"DB sql test","info":"CUSTOMIZATION\n\nused the 'AC meter'.voltage to get AVG\n\n","x":160,"y":2060,"wires":[]},{"id":"a542cc15.ac22a","type":"inject","z":"89f87d49.41b81","name":"test DB local: DELETE before 2021-02","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBlocal","vt":"str"},{"p":"payload.value","v":"DELETE FROM `messages` WHERE `timestamp` <  '2021-02-01'","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":250,"y":2440,"wires":[["3332c2d3.f540ae"]]},{"id":"6b8f84dd.1102dc","type":"comment","z":"89f87d49.41b81","name":"Benchmark","info":"CUSTOMIZATION\n\n\nChoose the task (_zeroTash, _zeroLOG are ready):\n\n- add to chose task (in alldeviced)  the 'share':\n````\n         {\"action\":[{\n            \"device\":\"_system\",\n            \"property\":\"_benchmark_step\"}]}\n````\n- Use SET _system._benchkark to set your task (example: GET tuya_bridge.restart status )\n````\n   {\"device\":\"_system\",\n    \"property\":\"_benchmark\",\n    \"value\":{\"device\":\"tuya_bridge\",\n             \"property\":\"restart status\"}\n\n````\n\n- If you wanna run it to MAX free-run speed, change limits (2 in core, one in trigger) to a hight value (100000).\n\n- run benckmark: _system.doBenchmark.\n","x":610,"y":1740,"wires":[]},{"id":"be16aab6.ed77b8","type":"inject","z":"89f87d49.41b81","name":"Test doSCHEMA for 'power strip'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doSCHEMA","vt":"str"},{"p":"payload.value","v":"power strip","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":1800,"wires":[["37cf409a.4d0b5"]]},{"id":"37cf409a.4d0b5","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["8a1da02d.424ae"],"x":435,"y":1720,"wires":[]},{"id":"641cee4c.5eabf","type":"inject","z":"89f87d49.41b81","name":"Test tuyastatus power strip.SCHEMA","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_tuyastatus\",\"value\":{\"device\":\"power strip\"}}","payloadType":"json","x":240,"y":1760,"wires":[["37cf409a.4d0b5"]]},{"id":"b4d2d9e.ab5fb28","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":455,"y":1520,"wires":[]},{"id":"10937fa1.5a037","type":"inject","z":"89f87d49.41b81","name":"doUPDATE   real only","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doUPDATE","vt":"str"},{"p":"payload.value","v":"real","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":1880,"wires":[["37cf409a.4d0b5"]]},{"id":"454c426.5bc6abc","type":"inject","z":"89f87d49.41b81","name":"Test SCHEMA for 'power strip'","props":[{"p":"payload.device","v":"power strip","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":220,"y":1720,"wires":[["37cf409a.4d0b5"]]},{"id":"1be9cc67.21b2d4","type":"comment","z":"89f87d49.41b81","name":"test SCHEMA","info":"","x":150,"y":1680,"wires":[]},{"id":"49a7f2bb.1591ec","type":"comment","z":"89f87d49.41b81","name":"test tuyastatus","info":"","x":150,"y":1480,"wires":[]},{"id":"95d45364.ef84f","type":"inject","z":"89f87d49.41b81","name":"test DB android: COUNT(*)","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_sqlDBandroid","vt":"str"},{"p":"payload.value","v":"SELECT COUNT(*) FROM messages","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":690,"y":2300,"wires":[["12227f5e.ddb0d1"]]},{"id":"12227f5e.ddb0d1","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":895,"y":2300,"wires":[]},{"id":"a7c39c7.4e2dd6","type":"function","z":"15c9daba.b55285","name":"connected message - dynamic","func":"// to set global.tuyasyatus.xxxx._connected\n\nconst CONN = \"_connected\"; //  pseudoDP\nconst TMT = \"_findTimeout\";\nconst RMT = \"_retryTimeout\";\n\n// local functions\nfunction _sendReal(idevice, value) {\n   // builds a fake OUT message\n   var newMsg = {\n      \"payload\": {\n         \"deviceId\": idevice,\n         \"data\": {\n            \"dps\": {\n               [CONN]: value\n            }\n         }\n      }\n   };\n   return newMsg;\n}\n\nfunction _sendTimeout(idevice, timeout) {\n   var tmtMsg = {\n      \"toDev\": idevice,\n      \"payload\": {\n         \"dps\": TMT,\n         \"set\": timeout\n      }\n   };\n   return tmtMsg;\n}\n\nfunction getRandomArbitrary(min, max) {\n   return Math.random() * (max - min) + min;\n}\n\n// ------------------  main\nconst XfLo = 1.0; // min increment 0%\nconst XfHi = 1.4; // min increment 40%\n// user set parameter device id\nlet deviceId = env.get(\"deviceId\");\nlet Tmin = env.get(\"MinTimeout\") * 1000;\nlet TMAX = env.get(\"MaxTimeout\") * 1000;\n//\nlet cold = flow.get(deviceId + \"_con\");\nlet cnew = cold;\nlet told = flow.get(deviceId + \"_time\");\nlet tnew = told;\ncMsg = null;\ntMsg = null;\n//status.text\nif (msg.payload == undefined) return [null];\nswitch (msg.payload.state) {\n    case \"CONNECTED\":\n      if (told > Tmin) {\n          tnew = Tmin;\n       }\n       cnew = \"connected\";\n       break;\n   case \"DISCONNECTED\":\n       if (told < TMAX) {\n          tnew = Math.floor(told * getRandomArbitrary(XfLo, XfHi));\n       }\n       cnew = \"connecting\";\n        break;\n   case \"CONNECTING\":\n       cnew = \"connecting\";\n       break;\n    }\n\nif (cnew !== cold) {\n   cMsg = _sendReal(deviceId, cnew === \"connected\");\n   flow.set(deviceId + \"_con\", cnew);\n}\n\nif (tnew !== told) {\n   tMsg = _sendTimeout(deviceId, tnew);\n   flow.set(deviceId + \"_time\", tnew);\n}\nreturn ([cMsg, tMsg]);\n","outputs":2,"noerr":0,"initialize":"// Code added here will be run once\n// set the default status _connected to null in tuyastatus\n// creates tuyastatus entry to null.\nvar alldevices = global.get(\"alldevices\");\nif (alldevices === undefined) return null;\nvar deviceId = env.get(\"deviceId\");\n// only for REAL devices\nvar d = alldevices.real.find(device => device.id === deviceId);\nif (d === undefined) return null;\n//\nvar tuyastatus = global.get(\"tuyastatus\");\n    if (tuyastatus === undefined)\n        tuyastatus = {};\n    var dev = (d.name?d.name:d.id);\n    if (tuyastatus[dev] === undefined) {\n        tuyastatus[dev] = {_connected:null};\n        global.set(\"tuyastatus\", tuyastatus);\n    }\n    \nflow.set(deviceId + \"_con\", \"null\");\nlet Tmin = env.get(\"MinTimeout\") * 1000;\nflow.set(deviceId + \"_time\", Tmin);\n","finalize":"","x":230,"y":40,"wires":[[],[]]},{"id":"7171632e.cb997c","type":"subflow:15c9daba.b55285","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"3613666124a1600db127","type":"str"}],"x":1600,"y":620,"wires":[["81103bac.696bc8"],["756a073a.e295b8"]]},{"id":"756a073a.e295b8","type":"link out","z":"173260fb.d021ff","name":"to low_level_IN","links":["b25c688d.705df8"],"x":1895,"y":480,"wires":[]},{"id":"2eabebbc.ba4784","type":"subflow:15c9daba.b55285","z":"173260fb.d021ff","name":"*dynamic retry","env":[{"name":"deviceId","value":"56685573d8bfc0508837","type":"str"}],"x":1600,"y":260,"wires":[["81103bac.696bc8"],["756a073a.e295b8"]],"info":"Use 'dynamic retry' in place of 'static retry' if the device is often disconneted (power strip, power plug, light bulbs etc.)\n\n- duplicate for any new device\n\nset the required parametrs:\n- deviceId: Tuya ID of the device (same value as `tuya-smart-device-node`)\n- MinTimeout: the timeout of fast attempts, in sec.\n- MaxTimeout: the timeout of slow attempts, in sec.\n\nsee: [Howto: add a new device to tuyaDAEMON](https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON)"},{"id":"c306cbee.682538","type":"function","z":"e1c6cc8a.2f92a","name":"*REFRESH control","func":"\nconst FASTDP = \"_refreshCycle\";  // set: 'off'| time [s]\nconst REFDP  = \"_refresh\";        // set: any (trigger)\nconst DEVID  = env.get(\"deviceID\");\n// for tests\nconst REFONLY   = {operation: \"REFRESH\"};\nconst REFONE    = {operation: \"REFRESH\", dps:20};\nconst REFMANY   = {operation:\"REFRESH\",requestedDPS:[1,9,6,17,18,19,20]};\nconst REFSCHEMA = {operation: \"REFRESH\", schema:true};\n\nfunction isNone(value){\n    if(value){\n        if(typeof(value) === \"string\"){\n            if(value.toUpperCase() === 'OFF') return true;\n            if(value.toUpperCase() === 'NO') return true;\n            if(value.toUpperCase() === 'NONE') return true;\n        }\n    return false;\n    }\nreturn true;\n}\n\nif (DEVID === \"\"){\n node.warn(\"ERROR [REFRESH] deviceID not set.\");\n return[null];\n}\n// builds the output message\nvar newMsg = {\n    \"payload\": {\n        \"deviceId\": DEVID,\n        \"deviceName\": \"dummy\", // as device node, not used\n        \"data\": {\n            \"dps\": {}\n        }\n    }\n};\n\n// --------------------------------\n// ignores pseudoDP\nif ((msg.payload === undefined) || (msg.payload.dps === undefined)) return [null, msg];\n//\n// test for REFDP  SET/GET case\nif (msg.payload.dps === REFDP){\n    if (msg.payload.set !== undefined) { // is set\n        newMsg.payload.data.dps[REFDP] = \"sent\";\n        return ([null, {payload:REFONLY}, newMsg]);\n        } else\n    return [null];   // no GET\n }\n\n//  test for  REFDP MULTIPLE case\nif ((msg.payload.data !== undefined) && (msg.payload.data[REFDP] !== undefined) ) {\n    delete msg.payload.data[REFDP];\n    newMsg.payload.data.dps[REFDP] = \"sent\";\n    node.send([null, { payload: REFONLY }, newMsg]);\n    return ([null, msg]);\n}\n\n// ----------------------------------\n// test for FASTDP  SET/GET case\nif (msg.payload.dps === FASTDP) {\n    if (msg.payload.set !== undefined) { // is set\n        context.set(\"fast\", msg.payload.set);\n        newMsg.payload.data.dps[FASTDP] = msg.payload.set;\n        if (isNone(msg.payload.set)) {\n             return ([{ payload: \"stop\" }, null, newMsg]);\n        } else{\n          return ([{ payload:REFONLY, \n                     loop:{duration: msg.payload.set, units:\"Second\", maxtimeout: env.get(\"Max time\"), maxtimeoutunits:\"Second\"}} , null, newMsg]);\n        } \n    } else { // is get, back last value\n        newMsg.payload.data.dps[FASTDP] = context.get(\"fast\");\n        return ([null, null, newMsg]);\n    }\n}\n\n// test for FASTDP  MULTIPLE case\nif ((msg.payload.data !== undefined) && (msg.payload.data[FASTDP] !== undefined)) {\n    let fst = msg.payload.data[FASTDP];\n    delete msg.payload.data[FASTDP];\n    context.set(\"fast\", fst);\n    newMsg.payload.data.dps[FASTDP] = fst;\n    if (isNone(fst)) {\n             return ([{ payload: \"stop\" }, null, newMsg]);\n        } else{\n          return ([{ payload: REFONLY , \n                     loop:{duration: fst, units:\"Second\", maxtimeout: env.get(\"Max time\"), maxtimeoutunits:\"Second\"}} , null, newMsg]);\n        } \n}\n\n// test for ALL,  SCHEMA case\nif (msg.payload.schema) {\n    newMsg.payload.data.dps[FASTDP] = context.get(\"fast\");\n    return ([null, msg, newMsg]);\n}\n// else do nothing\nreturn [null, msg];\n","outputs":3,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\ncontext.set(\"fast\",0);","finalize":"","x":330,"y":120,"wires":[["9eb78521.a29748"],[],[]],"info":"CUSTOMIZATION:\n\n- duplicate this node for any new device\n- update in code the deviceId\n  \nsee: [Howto: add a new device to tuyaDAEMON](https://github.com/msillano/tuyaDAEMON/wiki/Howto:-add-a-new-device-to-tuyaDAEMON)"},{"id":"2b66a27e.d6726e","type":"subflow:e1c6cc8a.2f92a","z":"173260fb.d021ff","name":"*REFRESH","env":[{"name":"deviceID","value":"486441603c6105ca6f51","type":"str"},{"name":"name (same as device node)","value":"meter","type":"str"}],"x":950,"y":660,"wires":[["a0d5012f.b2551"],["678390f9.125df"]]},{"id":"9eb78521.a29748","type":"looptimer-advanced","z":"e1c6cc8a.2f92a","duration":"10","units":"Second","maxloops":"1000000","maxtimeout":"60","maxtimeoutunits":"Second","name":"","x":560,"y":80,"wires":[[],[]]},{"id":"ef7313cc.602af","type":"inject","z":"d02ad611.d94bc8","name":"meter SET _refreshCycle STOP","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"_refreshCycle\",\"value\":\"off\"}","payloadType":"json","x":270,"y":2300,"wires":[["de64614.cd6d8a"]]},{"id":"d599ed54.a51a","type":"inject","z":"d02ad611.d94bc8","name":"SLOW retry umidificatore","props":[{"p":"payload.device","v":"umidificatore","vt":"str"},{"p":"payload.property","v":"_findTimeout","vt":"str"},{"p":"payload.value","v":"20000","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":730,"y":2400,"wires":[["fc6aa253.9d063"]]},{"id":"2e411353.0cbf7c","type":"inject","z":"d02ad611.d94bc8","name":"FAST retry umidificatore","props":[{"p":"payload.device","v":"umidificatore","vt":"str"},{"p":"payload.property","v":"_findTimeout","vt":"str"},{"p":"payload.value","v":"1000","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":720,"y":2440,"wires":[["fc6aa253.9d063"]]},{"id":"d63e805b.f5c8f","type":"inject","z":"d02ad611.d94bc8","name":"STANDBY ON umidificatore","props":[{"p":"payload.device","v":"umidificatore","vt":"str"},{"p":"payload.property","v":"_standby","vt":"str"},{"p":"payload.value","v":"true","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":740,"y":2500,"wires":[["fc6aa253.9d063"]]},{"id":"f4b93c19.98ecf","type":"inject","z":"d02ad611.d94bc8","name":"STANDBY OFF umidificatore","props":[{"p":"payload.device","v":"umidificatore","vt":"str"},{"p":"payload.property","v":"_standby","vt":"str"},{"p":"payload.value","v":"false","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":740,"y":2540,"wires":[["fc6aa253.9d063"]]},{"id":"946d7931.c2a828","type":"debug","z":"173260fb.d021ff","d":true,"name":"*trace: msg IN for Real devices","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1390,"y":920,"wires":[],"info":"CUSTOMIZATION\n\n- Enable to see in the debug pad all msg sended to fake devices.\n- Normal use: disabled"},{"id":"ad716211.9c5f8","type":"inject","z":"89f87d49.41b81","name":"doUPDATE  virtual only","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doUPDATE","vt":"str"},{"p":"payload.value","v":"virtual","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":220,"y":1920,"wires":[["37cf409a.4d0b5"]]},{"id":"f4766f0a.16c99","type":"inject","z":"89f87d49.41b81","name":"doUPDATE  fake only","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doUPDATE","vt":"str"},{"p":"payload.value","v":"fake","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":220,"y":1960,"wires":[["37cf409a.4d0b5"]]},{"id":"b43f73db.dc91","type":"inject","z":"89f87d49.41b81","name":"doUPDATE   ALL","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doUPDATE","vt":"str"},{"p":"payload.value","v":"NULL","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":2000,"wires":[["37cf409a.4d0b5"]]},{"id":"b1371d44.97bf2","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"733710408caab5e79887","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1280,"wires":[["bbd1da58.dba9c8"]]},{"id":"23901296.83a0ae","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1280,"wires":[["b1371d44.97bf2"]]},{"id":"7b7f8ad.12fd374","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1140,"wires":[["7b505949.7ba1e8"]]},{"id":"99db9a3e.c2c4a8","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1140,"wires":[["7b7f8ad.12fd374"]]},{"id":"989058f8.a71f98","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"317080408caab521a5d3","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":580,"wires":[["54d03d6e.945994"]]},{"id":"676a993c.b2a4a8","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":535,"y":580,"wires":[["989058f8.a71f98"]]},{"id":"e914f703.e257b8","type":"link out","z":"ee008879.f5adc8","name":"to core.logging","links":["9fe80f7e.f3f7e"],"x":355,"y":340,"wires":[]},{"id":"b163f8df.fd9278","type":"inject","z":"ee008879.f5adc8","name":"PM detector SET REFRESH","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refresh\",\"value\":\"now\"}","payloadType":"json","x":220,"y":720,"wires":[["78b729bf.554958"]]},{"id":"78b729bf.554958","type":"link out","z":"ee008879.f5adc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":435,"y":720,"wires":[]},{"id":"87fd0e9c.cb79","type":"inject","z":"ee008879.f5adc8","name":"PM detector GET REFRESH","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refresh\"}","payloadType":"json","x":220,"y":760,"wires":[["78b729bf.554958"]]},{"id":"8bf3f614.b791d8","type":"inject","z":"ee008879.f5adc8","name":"PM detector SET _refreshCycle 10s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refreshCycle\",\"value\":10}","payloadType":"json","x":680,"y":760,"wires":[["270607f1.95ddd8"]]},{"id":"270607f1.95ddd8","type":"link out","z":"ee008879.f5adc8","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":935,"y":820,"wires":[]},{"id":"68d77188.dcd4c","type":"inject","z":"ee008879.f5adc8","name":"PM detector SET _refreshCycle 120s","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refreshCycle\",\"value\":120}","payloadType":"json","x":690,"y":720,"wires":[["270607f1.95ddd8"]]},{"id":"1107bea7.312231","type":"inject","z":"ee008879.f5adc8","name":"PM detector GET _refreshCycle","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refreshCycle\"}","payloadType":"json","x":670,"y":860,"wires":[["270607f1.95ddd8"]]},{"id":"ab2b3522.0fae28","type":"inject","z":"ee008879.f5adc8","name":"PM detector SET _refreshCycle STOP","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"_refreshCycle\",\"value\":\"off\"}","payloadType":"json","x":690,"y":820,"wires":[["270607f1.95ddd8"]]},{"id":"8ce5e629.3c5ef8","type":"delay","z":"ee008879.f5adc8","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"20","nbRateUnits":"10","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":600,"y":320,"wires":[["28f4d04b.ed1b7"]]},{"id":"42829377.f058dc","type":"inject","z":"ee008879.f5adc8","name":"PM detector GET RUN","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"PM detector\",\"property\":\"startRT\"}","payloadType":"json","x":240,"y":820,"wires":[["78b729bf.554958"]]},{"id":"d53018ba.5b1448","type":"delay","z":"ee008879.f5adc8","name":"","pauseType":"delay","timeout":"750","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":480,"y":100,"wires":[["1282a87d.494a98"]]},{"id":"5ab57760.0302b8","type":"inject","z":"89f87d49.41b81","name":"","props":[{"p":"paylad","v":"RIFF�.  WAVEfmt \u0010   \u0001 \u0001 D�  �X\u0001 \u0002 \u0010 data�.  \u0001 �\u000f\u0003 �/\u0003@�O\u0001T\u0001D�3\u0003$�\u0013\u0001\u0004 ���\u0001���\u0001���\u0001� ���\u0001���\u0001\b\u0001\u0018�'\u00048�G\u0003X�K < , \u001c \f � � � ���\u0003���\u0003���\u0002���\u0002\u0001�\u0010\u0004!�0\u0004A�P\u0003S�B\u00013\u0001#�\u0012\u0004\u0003��\u0003���\u0002���\u0002���\u0001� � � �\u0001\t�\u0018\u0002)�8\u0002I�X K\u0001;�* \u001b \u000b �\u0001���\u0002���\u0001�\u0001���\u0001� ���\u0002\u0002�\u0011 \" 2 B R R\u0001B�1\u0002\"�\u0011�\u0001\u0002���\u0002���\u0002���\u0004���\u0003���\u0001�   \u001a�)\u0001:�I\u0002Z�I\u0001:�)\u0002\u001a�\t\u0002���\u0003��� ���\u0001���\u0002���\u0001��\u0002\u0003\u0013�\"\u00033�B S\u0001Q A�0\u0004!�\u0010\u0005\u0001��\u0002� ���\u0002���\u0002� ���\u0002���\u0001\u000b \u001b�*\u0001; K Y�H\u00029�(\u0003\u0019�\b\u0001���\u0002���\u0004���\u0002���\u0001� ��� \u0004 \u0014\u0001$�3\u0001D�S\u0002P�?\u00010  �\u000f\u0001 ��\u0001� � � � � � � �\u0001���\u0002\f�\u001b\u0002,�;\u0002L�W\u0002H�7\u0003(�\u0017\u0002\b��\u0001���\u0001� ���\u0001� ���\u0003���\u0002\u0005 \u0015�$\u00015�D\u0001U�N\u0002?�.\u0003\u001f�\u000e\u0003���\u0003���\u0004��� �\u0001���\u0002���\u0001��\f\u0002\u001d�, =\u0001M�V\u0002G�6\u0002&�\u0015 \u0006 � � �\u0001���\u0002��� �\u0001���\u0002��\u0005\u0002\u0016�%�5\u0002F�U\u0004N�=\u0001. \u001e� \u0003���\u0004���\u0001�\u0001���\u0002��� � � � \u000e \u001e .\u0001>�M\u0002V�D\u00015\u0001%�\u0014\u0002\u0005��\u0001� �\u0001���\u0002���\u0002���\u0001���\u0002\u0007�\u0016\u0003'�6\u0002G�V\u0002M�<\u0001-�\u001c\u0002 ��\u0002��� � � ���\u0002���\u0002���\u0001� \u000f�\u001e\u0002/�?\u0001P�S\u0002D�3\u0004$�\u0013 \u0004\u0002���\u0003�����\u0002���\u0001� ���\u0001� \b \u0018�'\u00028�G\u0003X�K\u0001<�+\u0002\u001c�\u000b\u0004���\u0003���\u0001�\u0001���\u0002���\u0002���   \u0010 !\u00011�@�P\u0002S�B\u00033�\"\u0002\u0013�\u0002\u0004���\u0004���\u0001� ���\u0002���\u0002��� \t\u0002\u0019�(\u00029�H�X\u0004K�:\u0004+�\u001a\u0004\u000b��\u0001�\u0001���\u0002���\u0001� � �\u0001���\u0003\u0002�\u0011\u0001\"\u00012�A\u0004R�Q\u0005B�1\u0003\"�\u0011 \u0002\u0001���\u0002���\u0003���\u0003���\u0003���\u0003��\t\u0003\u001a�)\u0003:�I\u0003Z�I\u0003:�)\u0003\u001a�\t\u0001���\u0001���\u0002���\u0003���\u0003���\u0003��\u0002\u0002\u0013�\" 3\u0001C�R Q A 1 ! \u0011 \u0001��\u0002���\u0002���\u0003���\u0001�\u0001���\u0004�� \u0003\u001b�*�:\u0002K�X\u0001I 9 ) \u0019�\b\u0002���\u0001� ���\u0002���\u0003���\u0001� ��\u0003 \u0014\u0002$�3\u0005D�S\u0003P�?\u00010\u0001 �\u000f\u0004 ��\u0006���\u0003� ���\u0002�����\u0003���\u0003\f�\u001b\u0002,�; L\u0002X�G\u00038�'\u0003\u0018�\u0007\u0003���\u0003��� �\u0002���\u0003���\u0001���\u0001\u0005 \u0015�$\u00025�D\u0003U�N\u0003?�.\u0001\u001f \u000f��\u0003���\u0003��� �\u0001���\u0001��� � �\u0001 �\u001c\u0001-�<\u0002M�V\u0001G�6 '\u0001\u0017�\u0006\u0002���\u0002���\u0001� ���\u0001���\u0003���\u0003\u0006�\u0015\u0003&�5\u0003F�U\u0001N >�-\u0002\u001e� \u0001� ���\u0001���\u0001���\u0001��� � �\u0002�� \u0003\u001e�-\u0001>\u0002N�U\u0002F�5 &\u0001\u0016 \u0005��\u0002���\u0003���\u0004���\u0005��� �\u0002��\u0006\u0004\u0017�&\u00037�F\u0001W�L =\u0001-�\u001c\u0001 �� � � � � � � � � � � � \u000f \u001f / ? O U�D\u00024�#\u0002\u0014�\u0003\u0002���\u0004���\u0005���\u0001� ���\u0003���\u0001\b�\u0017\u0001(�7\u0001H�W L\u0001<�+ \u001c\u0001\f��\u0001���\u0001���\u0001���\u0001� ���\u0001��� \u0010\u0001 �/ @\u0001P�R C 3\u0001#�\u0012\u0003\u0003��\u0002���\u0003���\u0003���\u0001�\u0001���\u0001��\b\u0001\u0019�( 9 I\u0001Y�J\u0001;�*\u0001\u001b\u0001\u000b�� � ���\u0002��� � � ���\u0002�� \u0001\u0011 !�0\u0001B�Q\u0001R�A\u00012�!\u0001\u0012�\u0001\u0001� ���\u0001���\u0001� ���\u0001���\u0001��\t\u0001\u001a�)\u0001: J�Y\u0003J�9 *\u0001\u001a�\t �\u0002���\u0003��� �\u0002���\u0003���\u0002��\u0001 \u0013\u0001#�2\u0001C S�P\u0003A�0\u0003!�\u0010� \u0002���\u0002���\u0002���\u0003�����\u0002���\u0002\u000b\u0001\u001b�*\u0003;�J\u0001Y I�8\u0001)�\u0018\u0002\t�� �\u0002���\u0003��� �\u0002���\u0001� ��\u0003\u0001\u0014�#\u00024�C\u0003T�O\u0002@�/  \u0001\u0010��\u0003���\u0001� ���\u0003���\u0002���\u0001�\u0001��\u000b \u001c\u0001,�;\u0002L�W H\u00018�'\u0001\u0018 \b � � ���\u0001� � ���\u0001���\u0001� \u0005�\u0014\u0001% 5�D\u0001U O�>\u0003/�\u001e\u0004\u000f��\u0002��� �\u0001� ���\u0001���\u0001���\u0001��\f\u0001\u001d�,\u0001=�L\u0001W�F\u00017�&\u0001\u0017�\u0006\u0001���\u0001��� �\u0001���\u0001���\u0001���\u0003\u0006�\u0015\u0004&�5\u0002F�U N\u0001>�-\u0003\u001e� \u0003���\u0003���\u0003��� �\u0001��� �\u0002���\u0005\u000e�\u001d\u0005.�=\u0004N�U F\u00016�%\u0001\u0016�\u0005 �\u0001���\u0002���\u0002���\u0001���\u0002���\u0005\u0007�\u0016\u0002' 7�F\u0003W�L\u0003=�,\u0002\u001d�\f\u0001���\u0001���\u0002���\u0001���\u0001���\u0003���\u0004\u000f�\u001e\u0003/�>\u0002O�T E\u00015�$\u0002\u0015�\u0004\u0001���\u0002��� �\u0001���\u0002���\u0001���\u0002\b�\u0017 (\u00018�G X\u0001L�; ,\u0001\u001c�\u000b\u0001���\u0001���\u0003��� �\u0001���\u0001� ���\u0003\u0010�\u001f\u00010 @�O\u0001T�C\u00014 $�\u0012\u0001\u0003��\u0001���\u0001���\u0001� ���\u0001���\u0001��\b\u0001\u0019�(\u00039�H\u0004Y�J\u0001;\u0001+�\u001a\u0002\u000b��\u0002��� � � ���\u0003���\u0004���\u0003\u0001�\u0010� \u00021�@\u0001Q S�A\u00022�!\u0001\u0012�\u0001 �\u0002���\u0001��� �\u0001���\u0001��� �  \u0001\u001a�)\u0003:�I\u0003Z�I : * \u001a�\t\u0002���\u0002���\u0001� � � � � � � \u0002 \u0012�!\u00022�A\u0003S�P\u0003A�0\u0001!\u0001\u0011� \u0002���\u0002���\u0002��� �\u0001���\u0004���\u0002\u000b�\u001a +\u0001;�J\u0002Y�H\u00029�(\u0001\u0019�\b � � � �\u0002���\u0002��� �\u0001��� \u0003\u0001\u0013�\"\u00024�C T P�?\u00020�\u001f\u0002\u0010��\u0002���\u0002���\u0004���\u0002���\u0001� �\u0001��\u000b\u0003\u001c�+\u0003< L�W\u0003H�7\u0003(�\u0017 \b � � � � ���\u0003���\u0002���\u0002��\u0004\u0003\u0015�$\u00025�D\u0002U�N\u0003?�.\u0002\u001f�\u000e � �\u0001���\u0003���\u0003��� �\u0001���\u0001�\u0001 �\u001c\u0003-�<\u0002M�V\u0002G�6\u0003'�\u0016\u0004\u0007��\u0002���\u0002���\u0002���\u0002���\u0002���\u0001\u0006 \u0016 & 6�E\u0002V�M\u0002>�-\u0001\u001e \u000e � � � � � � � �\u0001���\u0002��� \u000e\u0001\u001e�-\u0002>�M V\u0001F�5 &\u0001\u0016�\u0005\u0003���\u0003���\u0003���\u0001���\u0001���\u0002��\u0006\u0003\u0017�&\u00037�F\u0002W�L\u0001= -�\u001c  \u0001���\u0001� ���\u0002��� �\u0002���\u0002��� \u000f�\u001e\u0002/�>\u0003O�T\u0001E 5 %\u0001\u0015�\u0004 �\u0001���\u0002� ���\u0003���\u0004���\u0003��\u0007\u0003\u0018�'\u00048�G\u0002X L�;\u0002,�\u001b�\u000b\u0003���\u0005���\u0006���\u0004���\u0002��� �\u0001 �\u000f\u0002  0�?\u0002P�S\u0001D\u00014�#\u0002\u0014�\u0003\u0001� � � �\u0001���\u0005���\u0006���\u0004��\b\u0003\u0019�(\u00019 I�X K\u0002;�*\u0006\u001b� \u0005��� �\u0001���\u0001��� �\u0001���\u0003�� \u0002\u0011 !�0\u0003A�P\u0002S C�2\u0001#�\u0012 \u0002\u0002���\u0005���\u0004��� � �\u0001���\u0001��\t \u001a\u0001*�9\u0001J�Y\u0003J�9\u0004*�\u0019  \u0001�����\u0003���\u0003���\u0003���\u0003���\u0001\u0002 \u0012 \" 2�A\u0002R�Q\u0004B�1\u0002! \u0011� \u0003���\u0001���\u0001���\u0001� ���\u0001� �� \u0001\u001b�*\u0001; K Y�H\u00019�(\u0002\u0019�\b\u0001� ���\u0002���\u0001� � � � ���\u0002\u0003�\u0012\u0002#�2\u0001C S Q @ 0   \u0010   �\u0001���\u0002���\u0002���\u0002���\u0001�\u0001��\u000b\u0004\u001c�+\u0003<�K\u0002X�G\u00028�'\u0001\u0018\u0001\b��\u0002��� � � �\u0001���\u0001���\u0002��\u0003\u0004\u0014�#\u00044�D\u0002U O�> /\u0001\u001f�\u000e\u0001��� �\u0001���\u0001���\u0001��� �\u0002���\u0003 �\u001c\u0002-�<\u0001M�V G\u00027�&\u0002\u0017 \u0007��\u0004���\u0002� � ���\u0003���\b���\u0006\u0005�\u0014\u0001&\u00016�E V\u0001N�=\u0003.�\u001d\u0001\u000e � � �\u0001���\u0001�\u0001���\u0002��� �\u0001��  \u001e\u0001.�= N\u0002V�E\u00046�%\u0002\u0016 \u0006��\u0002���\u0001� ���\u0002���\u0004���\u0003��\u0006�\u0016\u0002'�6\u0001G\u0001W�L\u0002=�,\u0002\u001d�\f\u0003���\u0002��� �\u0002���\u0003���\u0003���\u0003��\u000e\u0002\u001f /�>\u0003O�T\u0003E 5�$\u0003\u0015�\u0004\u0002���\u0001���\u0001���\u0001� � ���\u0001� \b \u0018�'\u00018�G\u0002X�K\u0003<�+\u0003\u001c�\u000b �\u0001� ���\u0001��� �\u0001��� � �\u0001 �\u000f   0 @ P\u0002T�C\u00034�#�\u0013\u0002\u0004��\u0001� ���\u0001���\u0002���\u0002� ���\u0001\t \u0019�(\u00039�H Y\u0002K�:\u0003+�\u001a\u0001\u000b��\u0001� ���\u0002���\u0004���\u0001� ���\u0003\u0001�\u0010\u0003!�0 A\u0001Q�R\u0002C�2\u0002#�\u0012\u0002\u0003��\u0001��� � � �\u0001���\u0002���\u0002��\t \u001a *�9\u0002J�Y\u0002J�9\u0002*�\u0019\u0002 ��\u0002���\u0002���\u0002���\u0002���\u0002��� \u0002\u0001\u0012�! 2 B\u0001R�Q\u0002B�1\u0002\"�\u0011\u0001\u0002��\u0002���\u0003���\u0002���\u0001��� �\u0001�� \u0002\u001b�*\u0001;�J\u0001Y�H\u00039�(\u0003\u0019�\b\u0002��� � �\u0001���\u0002���\u0001�\u0001���\u0004\u0003�\u0012\u0001# 3 C�R\u0003Q�@\u00041� \u0004\u0011��\u0004���\u0002�����\u0002���\u0002���\u0001� ��\u000b\u0002\u001c�+\u0002<�K\u0001X�G\u00028�' \u0018�\u0007\u0001���\u0002���\u0003���\u0002���\u0001���\u0003��\u0003\u0004\u0014�# 4\u0001D�S\u0003P�?\u0003/�\u001e\u0002\u000f ���\u0001���\u0001� ���\u0001���\u0001� ���\u0002 �\u001c -\u0002=�L\u0003W�F�6\u0002'�\u0016\u0001\u0007��\u0002���\u0002���\u0001���\u0002���\u0003���\u0003\u0005�\u0014\u0002%�4 E\u0001U�M\u0002>�-\u0003\u001e� \u0004���\u0002��� �\u0001���\u0001���\u0002���\u0001��  \u001e . > N V F 6 &�\u0015\u0002\u0006��\u0004���\u0003�����\u0002���\u0002���\u0002��\u0005\u0002\u0016�%\u00017 G W M�<\u0001- \u001d   ���\u0002���\u0001� � ���\u0003���\u0004���\u0003\u000f�\u001e /\u0001?�N\u0002U�D 5 %\u0001\u0015�\u0004\u0002��� �\u0001���\u0002��� � � � � \u0007 \u0018 ( 8 H�W\u0002L�;\u0002,�\u001b\u0003\f��\u0003���\u0003���\u0002��� �\u0001��� �\u0001 �\u000f\u0001 �/ @\u0001P�S\u0001D�3\u0001$�\u0013\u0001\u0004�� �\u0001���\u0001��� �\u0001���\u0003���\u0001\t \u0019�(\u00019�H\u0002Y�J\u0001;�*\u0001\u001b� \u0001���\u0001���\u0002���\u0003���\u0001� ���\u0002\u0001�\u0010\u0001! 1�@\u0002Q�R\u0002C�2\u0004#�\u0012\u0004\u0003��\u0001�\u0001���\u0002�����\u0002���\u0002���\u0001 �\u0019 *\u0001: J�Y\u0003J�9\u0002* \u001a�\t\u0004���\u0003���\u0001� � � � � � ��\u0001\u0002\u0012�!\u00042�A\u0002R�Q\u0001B 2 \"\u0001\u0012�\u0001��\u0002���\u0001�\u0001���\u0003���\u0002� ���\u0003\u000b�\u001a\u0002+ ;�J\u0002Y I�8\u0001)�\u0018 \t\u0001���\u0001���\u0001��� �\u0002���\u0003���\u0002\u0003 \u0013 #�2\u0001C�R\u0001Q A 1� \u0001\u0011� \u0002���\u0003���\u0003���\u0001���\u0001���\u0002��\u000b\u0001\u001c�+\u0001<�K\u0002X�G\u00038�' \u0018\u0001\b��\u0001���\u0001���\u0003���\u0001���\u0003���\u0003\u0004�\u0013 $\u00014�C\u0001T�O @\u00010�\u001f\u0004\u0010��\u0004���\u0002� ���\u0003���\u0004�����\u0003��\f\u0004\u001d�,�<\u0003M�V\u0004G�6�&\u0003\u0017�\u0006\u0003� ���\u0004���\u0003�����\u0002���\u0004��\u0004\u0003\u0015�$ 5\u0002E�T\u0003O�>\u0001/ \u001f� \u0002���\u0001� � ���\u0001� ���\u0002���\u0002� \u000e�\u001d\u0003.�=\u0003N�U\u0003F�5\u0002& \u0016�\u0005\u0002���\u0003���\u0002���\u0001� � � � � \u0006 \u0016 &�5\u0002F�U\u0002N�< - \u001d   �\u0001���\u0001��� � �\u0001���\u0001��� �\u0001\u000f�\u001e\u0001/�>\u0001O�T\u0002E�4\u0003%�\u0014\u0001\u0005 ���\u0002���\u0002���\u0001� ���\u0001���\u0001\u0007�\u0016\u0001'�6\u0002G�W\u0001L�; ,\u0001\u001c�\u000b\u0001���\u0001���\u0001���\u0003���\u0004���\u0004���\u0003\u0010�\u001f\u00010�?\u0001P�S\u0002D�3\u0003$�\u0013\u0003\u0004��\u0001���\u0001� � ���\u0001� � � ��\u0007\u0001\u0018 ) 9�H\u0002Y�J\u0003;�*\u0001\u001b \u000b��\u0001���\u0001���\u0001���\u0002��� �\u0002�� \u0004\u0011� \u00011 A�P\u0002S�B\u00033�\"\u0001\u0013 \u0003��\u0001� � ���\u0001���\u0002���\u0002���  \u0002\u001a�)\u0004:�I\u0003Z�I\u0001: * \u001a   ���\u0002���\u0002���\u0002���\u0002���\u0001�\u0001\u0002�\u0011\u0002\"�1\u0002B�Q\u0002R�A\u00022�!\u0002\u0012�\u0001\u0002���\u0002���\u0002���\u0002��� � � �\u0001\u000b�\u001a +\u0001;�J\u0003Y�H\u00049�(\u0002\u0019�\b��\u0002��� �\u0001���\u0002��� �\u0001���\u0002\u0003�\u0012 #\u00013�B\u0002S�P\u0001A�0 !\u0001\u0011� \u0001� ���\u0003���\u0002� ���\u0001���\u0001��\u000b\u0001\u001c�+\u0001< L�W\u0001H�7\u0001(�\u0017\u0002\b��\u0001� ���\u0003���\u0001� ���\u0002��� \u0004�\u0013\u0001$�3\u0001D T�O\u0001@ 0�\u001f\u0001\u0010   ���\u0001� � � � ���\u0002���\u0001�\u0001 �\u001c\u0002-�<�L\u0003W�F\u00027�& \u0017\u0001\u0007��\u0002���\u0002���\u0002���\u0001� ���\u0002��\u0004\u0001\u0015�$\u00015�D\u0002U�N\u0004?�.\u0002\u001f \u000f��\u0003���\u0001� � �\u0001��� � �\u0001� �� \u0001\u001e�-\u0001>�M\u0001V F�5\u0001&�\u0015\u0001\u0006�� �\u0002���\u0005���\u0004��� � �\u0001� \u0006�\u0015 &\u00016�E\u0002V�M\u0003>�-\u0003\u001e� \u0003���\u0002��� � �\u0001���\u0002�����\u0003��\u000e\u0002\u001f�. ? O\u0001U�D\u00015�$ \u0015 \u0005 �\u0001���\u0001���\u0002���\u0001���\u0002���\u0002\u0007�\u0016 ' 7 G W M = -\u0001\u001c�\u000b\u0002���\u0001�\u0001���\u0002���\u0002��� � �  \u0001\u0010�\u001f\u00010�?\u0003P�S\u0001D�3\u0001$ \u0014�\u0003\u0002���\u0003���\u0001���\u0001���\u0001� ���\u0001\b�\u0017\u0001( 8�G\u0002X�J\u0004;�*\u0005\u001b� \u0006���\u0006���\u0005���\u0004���\u0003��� � \u0001 \u0011� \u00021�@\u0001Q S�B\u00023�\"\u0001\u0013 \u0003 � ���\u0002��� � � � � � � \t\u0001\u0019�(�8\u0003J�Y\u0006J�9\u0003*�\u0019�\t\u0001���\u0002���\u0001� ���\u0002���\u0001� ��\u0001\u0003\u0012�!\u00052�A\u0002R R B�1\u0001\"�\u0011\u0001\u0002 � ���\u0002���\u0003���\u0002���\u0002���\u0004 �\u0019\u0001+ ;�J\u0002Y�H\u00019�(\u0002\u0019�\b\u0001� ���\u0004���\u0003���\u0001���\u0001���\u0001\u0003 \u0013�\"\u00013�B\u0001S�P\u0001A�0 !\u0001\u0011� \u0003���\u0002��� �\u0001���\u0003���\u0003���\u0002\f�\u001b\u0001,�;\u0001L�W H\u00018�'\u0001\u0018�\u0007\u0002���\u0002�����\u0003���\u0004���\u0001�\u0001��\u0003 \u0014\u0001$�3\u0002D T�O\u0003@�/\u0002  \u0010��\u0003���\u0003��� �\u0001���\u0004���\u0003���\u0003 �\u001c\u0001- = M W G 7�&\u0002\u0017�\u0006\u0002���\u0001� � � � ���\u0001� � � \u0005 \u0015�$\u00025�D\u0002U�N\u0002?�.\u0002\u001f�\u000e � � � � � � � � � � � � \u000e \u001e . > N\u0001V�E\u00036�%\u0006\u0016�\u0005\u0004���\u0001�\u0001���\u0003���\u0005���\u0004���\u0002\u0006�\u0015 & 6 F\u0001V�M\u0003>�-\u0004\u001e� \u0004���\u0005���\u0003�����\u0003���\u0002��� �\u0002\u000f�\u001e\u0003/�>\u0002O�T E\u00015�$\u0001\u0015�\u0004\u0002���\u0003��� � � �\u0001���\u0001��� \u0007 \u0017\u0001'�6\u0003G�V M\u0001=�,\u0002\u001d  ��\u0001��� �\u0001��� �\u0002���\u0004���\u0001 \u0001\u0010�\u001f\u00020�?\u0002P�S\u0004D�3\u0001$\u0001\u0014�\u0003\u0003�����\u0002���\u0001� ���\u0002���\u0003��\u0007\u0004\u0018�'\u00058�G\u0005X�K\u0001< ,�\u001b\u0002\u000b��\u0002��� ���\u0001� � � ��� �\u0002\u0001�\u0010\u0003!�0\u0001A Q�R\u0001C 3 # \u0013�\u0002\u0002���\u0005���\u0007���\u0003�����\u0002���\u0002\t�\u0018\u0001)\u00019�H\u0004Y�J\u0003;�)\u0001\u001a�\t\u0002���\u0003���\u0003���\u0003���\u0002���\u0001��\u0001\u0002\u0012�!\u00052�A\u0006R�Q\u0005B�1\u0003\"�\u0011�\u0001\u0002���\u0002��� � � � � � � �   \u001a *�9\u0002J�Y I 9 )\u0001\u0019�\b\u0001���\u0002��� � � � � � ���\u0001\u0003�\u0012\u0002#�2\u0001C S�P\u0004A�0\u0003!�\u0010\u0001\u0001��\u0002���\u0004���\u0002� ���\u0002���\u0001�� \u0002\u001b�*\u0002<�K\u0002X�G\u00028�' \u0018\u0001\b��\u0001���\u0003���\u0005���\u0004���\u0002��� \u0004\u0001\u0014�#\u00014�C\u0002T�O\u0002@ 0�\u001f\u0003\u0010��\u0003��� �\u0001���\u0002���\u0001� ���\u0002��\u000b\u0001\u001d�,\u0002=�L\u0004W�F\u00057�&\u0002\u0017 \u0007��\u0001��� �\u0001���\u0001���\u0001���\u0001��\u0004\u0001\u0015�$\u00015 E�T\u0001O�>\u0001/ \u001f�\u000e\u0002���\u0002���\u0001� � � � � � � � \u000e�\u001d\u0002.�= N V F�5\u0002&�\u0015\u0001\u0006 ���\u0002���\u0004���\u0003���\u0001� � � \u0006�\u0015\u0002&�5\u0003F�U N\u0002>�-\u0004\u001e� \u0005���\u0004���\u0001� ���\u0001���\u0001���\u0002��\u000e\u0003\u001f�.\u0001? O U E�4\u0002%�\u0014\u0002\u0005����\u0002���\u0002���\u0002���\u0002�����\u0002\u0007�\u0016\u0001' 7�F\u0001W�L =\u0001-�\u001c\u0002 �� �\u0001���\u0002��� �\u0001���\u0003���\u0002 �\u000f  \u00010�?\u0001P�S\u0001D�3\u0001$�\u0013\u0001\u0004��\u0001���\u0001���\u0001���\u0001���\u0002���\u0004\b�\u0017\u0005(�7\u0003H�W\u0002L�;\u0001,�\u001b\u0001\f\u0001���\u0002���\u0003���\u0002���\u0001� ���\u0001\u0001�\u0010\u0001!�0\u0001A�P S\u0001C�2 #\u0002\u0013�\u0002\u0002��� �\u0001� ��� �\u0001���\u0001��� \t\u0001\u0019�(\u00039�H\u0004Y�J\u0003;�*\u0002\u001b� \u0002���\u0002���\u0002��� � � � � � \u0002 \u0012�!\u00022�A\u0002R�Q\u0002B�1\u0003\"�\u0011\u0002\u0002��\u0001���\u0001���\u0003���\u0003���\u0004���\u0002 �\u0019\u0001*�9\u0003J�Y\u0004J�9\u0002*�\u0018 \t � � � � ���\u0002���\u0002���\u0003��\u0002\u0001\u0013 #�2\u0001C S Q�@\u00021� \u0001\u0011 \u0001��\u0002���\u0001� ���\u0002���\u0003���\u0003�� \u0003\u001b�*\u0002; K�X\u0003I�7\u0003(�\u0017\u0003\b��\u0001� ���\u0001� ���\u0002���\u0001� ��\u0003\u0001\u0014�#\u00014 D�S\u0001P�?\u00030�\u001f\u0003\u0010�� �\u0002���\u0001� � ���\u0002��� �\u0001��\u000b\u0002\u001c�+\u0002<�K W\u0001G�6\u0001' \u0017 \u0007\u0001���\u0001� � � �\u0001���\u0002���\u0001� \u0005\u0001\u0015�$\u00015�D\u0002U�N ?\u0002/�\u001e\u0003\u000f��\u0002���\u0004���\u0003���\u0002���\u0001��� �\u0002 �\u001c\u0002.�= N\u0002V�E\u00026 &�\u0015\u0002\u0006��\u0002� ���\u0001� ���\u0004���\u0002� ��\u0005\u0003\u0016�%\u00016�E\u0001V�M\u0001>�-\u0001\u001e� \u0001� ���\u0001���\u0001���\u0001� ���\u0003��� \u000f\u0002\u001f�. ?\u0002O�T\u0004E�4\u0002%�\u0014\u0001\u0005\u0001���\u0003���\u0004���\u0002��� � �\u0001��\u0006\u0001\u0017�&\u00037�F\u0001W�L =\u0001- \u001d�\f\u0001���\u0001� ���\u0002���\u0003���\u0001�\u0001���\u0003\u0010�\u001f\u00010 @ P�S\u0001D 4�#\u0002\u0014�\u0003\u0002� ���\u0002���\u0001� � � � � � \b \u0018\u0001(�7\u0002H�W\u0002L�;\u0002,�\u001b \f\u0001���\u0002��� � �\u0001���\u0001���\u0002�� \u0001\u0011�  1\u0001A�P\u0001S�B 3\u0002#�\u0012\u0002\u0003��\u0001� � ���\u0003���\u0003��� �\u0001��\b\u0001\u0019�(\u00019�H\u0001Y�J\u0001;�*\u0001\u001b \u000b��\u0003���\u0005���\u0005���\u0004��� �\u0001��\u0001\u0001\u0012 \"�1\u0001B R R B 2�!\u0001\u0012\u0001\u0002��\u0004���\u0005���\u0003���\u0001� � � �  �\u0019\u0002*�9\u0003J�Y J\u0002:�)\u0005\u001a�\t\u0004��� �\u0001���\u0001� ��� �\u0001���\u0002\u0003�\u0012\u0002#�2\u0001C S�P\u0001A�0\u0001! \u0011 \u0001��\u0002���\u0002���\u0001� � �\u0001���\u0002�� \u0001\u001b +\u0001;�J\u0002Y�H\u00019 ) \u0019�\b\u0002���\u0002���\u0003���\u0002���\u0002���\u0005��\u0003\u0004\u0014�#\u00014\u0001D�S\u0001P�?�/\u0002 �\u000f\u0002 ��\u0002���\u0004���\u0003���\u0001�\u0001���\u0002��\u000b\u0002\u001c�+\u0002<�K\u0003X�G\u00028�' \u0017\u0001\u0007�� �\u0001��� �\u0001��� �\u0001���\u0003��\u0004 \u0015\u0001%�4\u0003E�T\u0003O�>\u0002/�\u001e \u000f\u0001���\u0002���\u0001���\u0001���\u0004���\u0001���   \u001d\u0001-�< M W\u0001F�5 &\u0001\u0016�\u0005\u0003���\u0002� ���\u0003���\u0003���\u0003���\u0002\u0006�\u0015\u0001&�5 F\u0001V�M\u0003>�-\u0002\u001e�  �\u0001���\u0002���\u0002���\u0001� ���\u0003���\u0005\u000e�\u001d\u0003.�=�N\u0002U�D\u00045�$\u0003\u0015�\u0004\u0003���\u0002���\u0001���\u0002���\u0002���\u0002��\u0006\u0002\u0017�&\u00027�F\u0002W�L\u0002=�,\u0002\u001d�\f\u0002���\u0002���\u0002���\u0001� � � � � � \u000f\u0001 �/\u0002@�O\u0001T�C\u00014�#\u0003\u0014�\u0003\u0002��� � � � � � ���\u0003���\u0004\b�\u0017\u0001(\u00028�G\u0003X�K\u0003<�+\u0003\u001c�\u000b\u0003���\u0003��� �\u0001��� �\u0002���\u0005�� \u0005\u0011� \u00041�@\u0001Q S�B\u00013�\"\u0002\u0013�\u0002\u0001� ���\u0002���\u0001� � ���\u0002���\u0004\t�\u0018\u0005)�8\u0003I�X\u0001K ; +�\u001a\u0002\u000b��\u0002�����\u0002��� � � � �\u0001��\u0001 \u0012 \"\u00012�A\u0001R�Q\u0002B�1 \"\u0001\u0012�\u0001\u0004���\u0003��� ���\u0001���\u0002���\u0001�  �\u0019\u0001*�9\u0001J Z�I\u0001:�)\u0001\u001a�\t �\u0001��� �\u0001���\u0003���\u0002��� �\u0001\u0003�\u0012 # 3 C\u0001S�P\u0003A�0\u0003!�\u0010 \u0001\u0001���\u0002���\u0003���\u0002���\u0001���\u0003�� \u0002\u001b +�:\u0003K�X\u0002I 9�(\u0003\u0019�\b\u0002� ���\u0002��� � � � � � � \u0004 \u0014 $ 4 D T\u0001P�?\u00020�\u001f\u0001\u0010\u0001 ��\u0002��� � � � �\u0001���\u0001���\u0002\f�\u001b\u0002,�;\u0002L�W\u0002H�7\u0001(�\u0017\u0002\b��\u0004���\u0002� ���\u0003���\u0001���\u0001��\u0004\u0004\u0015�$\u00035�D\u0001U O ?�.\u0002\u001f�\u000e\u0002���\u0001� � ���\u0002���\u0001�\u0001���\u0006��\f\u0005\u001d�, =\u0002M�V\u0002G�6\u0001' \u0017 \u0006\u0001���\u0001� � � � � � �\u0001���\u0005\u0006�\u0015\u0006&�5\u0004F�U\u0002N�=\u0002.�\u001d\u0001\u000e��\u0002��� �\u0002���\u0003���\u0002� ���\u0001� \u000e�\u001d\u0003.�=\u0003N�U F 6\u0001%�\u0014\u0002\u0005��\u0004���\u0003��� � �\u0001���\u0002���\u0004\u0007�\u0016\u0002'�6 G W\u0001M�< -\u0001\u001d�\f\u0002��� � �\u0001���\u0001�\u0001���\u0004���\u0004��\u000e\u0004\u001f�.\u0003?�N�S\u0001D\u00014�#\u0003\u0014�\u0003\u0001� � ���\u0002���\u0002���\u0001� ���\u0002\b�\u0017\u0003(�7\u0002H�W\u0001L�;\u0003,�\u001b\u0003\f��\u0003���\u0003��� �\u0001��� � � �\u0001 �\u000f  �/\u0001A\u0001Q�R C 3�\"\u0002\u0013�\u0002��\u0002���\u0003���\u0002���\u0001���\u0001� � \t \u0019�(\u00029�H\u0001Y\u0001K�:\u0004+�\u001a\u0003\u000b����\u0002���\u0002���\u0002���\u0003���\u0004�� \u0003\u0011�!�1\u0003B�Q\u0003R�A�1\u0002\"�\u0011 \u0002\u0001���\u0001�\u0001���\u0002�����\u0002���\u0002��\t\u0001\u001a�)\u0002:�I Z\u0002J�9\u0004*�\u0019\u0002  ��� �\u0001���\u0001���\u0001���\u0001��� \u0003 \u0013\u0001#�2\u0003C�R\u0001Q\u0001A�0\u0002!�\u0010 \u0001 �\u0001��� �\u0001���\u0003���\u0003���\u0002� \u000b�\u001a\u0003+�:\u0005K�X\u0004I�8\u0002) \u0019�\b\u0003���\u0003���\u0003���\u0003���\u0002���\u0001��\u0003 \u0014 $\u00014�C\u0001T�O\u0003@�/\u0002  \u0010��\u0003���\u0003���\u0002��� �\u0001���\u0001���\u0003\f�\u001b\u0005,�;\u0004L�W\u0001H�7 ( \u0018\u0001\b�� � � � � ���\u0002���\u0001�\u0001��\u0004\u0002\u0015�$\u00015\u0001E�T O\u0001?�.\u0003\u001f�\u000e �\u0001���\u0001���\u0001���\u0001���\u0001���\u0001��\f\u0002\u001d�,\u0002=�L W\u0002G�6\u0001'�\u0016\u0001\u0007��\u0002���\u0003���\u0001���\u0001���\u0001���\u0001\u0006�\u0015\u0001&�5\u0001F�U\u0002N�=\u0003.�\u001d\u0002\u000e��\u0002���\u0002���\u0003���\u0003�����\u0003���\u0001\u000e \u001e\u0001.�=\u0003N�U\u0004F�5\u0003&�\u0015\u0002\u0006�� �\u0001��� � � �\u0001���\u0002���\u0002\u0007�\u0016\u0001'�6\u0003G�V\u0003M�<\u0003-�\u001c\u0003 �� �\u0001���\u0001� ���\u0003���\u0002� ��� \u000f\u0001\u001f�.\u0002? O�T\u0002E�4�$\u0003\u0014�\u0003\u0002���\u0002���\u0003���\u0004���\u0001� ���\u0003\b�\u0017\u0001(�7\u0002H�W\u0003L�;\u0005,�\u001b\u0002\f��\u0001� � �\u0001���\u0002���\u0002��� �   \u0010  \u00010�?�O\u0002T�C 3\u0002#�\u0012\u0004\u0003��\u0001� ���\u0004���\u0004���\u0003���\u0005��\b\u0005\u0019�( 9\u0002I�X\u0001K ;�*\u0002\u001b� \u0002���\u0002���\u0003���\u0003���\u0002��� �\u0002 �\u000f\u0003 �/\u0002@�P\u0001Q A�0\u0001!�\u0010\u0003\u0001��\u0003��� �\u0001���\u0001���\u0001���\u0002��\b\u0003\u0019�(\u00039�H\u0001Y�H\u00019�(\u0003\u0019�\b\u0002�����\u0003���\u0002�����\u0003���\u0002�� \u0002\u0011� \u00012�A R\u0001P�?\u00010   \u0010  ��\u0002���\u0002�����\u0002���\u0001�\u0001���\u0002 �\u0019\u0002*�9\u0002J�W H 8 ( \u0018 \b � � � � �\u0001���\u0003���\u0004���\u0002\u0002�\u0012 #\u00013�B\u0001S O ? / \u001f�\u000e\u0001 \u0001���\u0003���\u0003���\u0002���\u0003���\u0003�� \u0001\u001b�*\u0001;�J\u0001W�F\u00017�&\u0001\u0017�\u0006\u0001���\u0001���\u0003���\u0001��� �\u0001���\u0001\u0004�\u0013\u0001$�3\u0001D�S\u0002N >�- \u001e \u000e   �\u0002���\u0004���\u0004���\u0002��� �\u0001��\u000b \u001c ,\u0001<�K\u0001V�E 6 & \u0016\u0001\u0006��\u0003���\u0003��� � �\u0001���\u0003���\u0004\u0005�\u0014\u0005%�4\u0001E\u0001U�L\u0003=�,\u0002\u001d�\f\u0001��� �\u0001���\u0003���\u0003���\u0003���\u0003��\f\u0003\u001d�,\u0004=�L\u0002U E�4\u0003%�\u0014\u0001\u0005�� �\u0001���\u0001�����\u0003���\u0002����\u0005\u0003\u0016�%\u00036�E\u0001V\u0001L�;\u0003,�\u001b\u0002\f��\u0002���\u0002���\u0002���\u0001� ���\u0002���\u0001\u000e�\u001d\u0002.�=\u0001N�S D\u00024�#\u0003\u0014�\u0003\u0004��� �\u0001��� �\u0001� ���\u0004���\u0006\u0007�\u0016\u0001'\u00017�F\u0004W�J\u0004;�*\u0005\u001b� \u0003�����\u0001���\u0002���\u0003���\u0002���\u0001 �\u000e\u0001\u001f�. ?\u0001O S�B\u00033�\"\u0003\u0013�\u0002\u0001���\u0002� ���\u0001���\u0001���\u0002���\u0003\b�\u0017\u0001( 8�G\u0002X�I\u0003:�)\u0003\u001a�\t\u0003���\u0002���\u0001���\u0003���\u0004���\u0002���\u0002\u0010�\u001f\u00010\u0001@�O\u0002R�A 2\u0001!�\u0010\u0002\u0001��\u0001���\u0001��� �\u0001��� �\u0001���\u0003\t�\u0018\u0003)�8\u0001I\u0001Y�H\u00019 )�\u0018\u0003\t��\u0002� ���\u0003���\u0002���\u0001���\u0003�� \u0002\u0011 !�0\u0004A�P\u0004Q�?\u00010   \u0010��\u0004���\u0006���\u0005���\u0002� ���\u0001� ��\t\u0003\u001a�)\u0001:�I\u0001X�G\u00018�'\u0001\u0018�\u0007\u0002��� �\u0002���\u0004��� �\u0002���\u0003��\u0001 \u0012\u0001\"�1\u0001B�R\u0001O�>\u0003/�\u001e\u0003\u000f��\u0002� ���\u0001� ���\u0003��� �\u0002���\u0002\u000b \u001b�*\u0002; K�V\u0003G�6\u0001'�\u0016\u0001\u0007��\u0001� ���\u0001� ���\u0001� ���\u0002��\u0002\u0003\u0013�#\u00014�C\u0002T�M\u0004>�-\u0002\u001e \u000e��\u0003���\u0004���\u0002� ���\u0002���\u0002���\u0001\f�\u001b\u0002,�;\u0002L�U F 6 & \u0016 \u0006 � � ���\u0002���\u0002��� �\u0002����\u0004\u0001\u0015�$\u00015 E U�L\u0003=�, \u001d\u0001 �� �\u0002���\u0003���\u0003���\u0003���\u0001� �  �\u001c\u0001-�<\u0001M U�D\u00015�$\u0001\u0015�\u0004\u0001���\u0001���\u0001��� �\u0001���\u0001���\u0002\u0006�\u0015\u0001&�5\u0001F�U\u0001L�;\u0001, \u001c�\u000b\u0002���\u0003��� �\u0002���\u0003��� �\u0001���\u0003\u000e�\u001d\u0001. >�M\u0003T�C\u00014 $�\u0013\u0002\u0004�� �\u0002���\u0003��� �\u0001���\u0001� ��\u0006\u0003\u0017�&\u00037�F W\u0001K�:\u0001+ \u001b� \u0003���\u0003���\u0001���\u0002���\u0003���\u0001�  �\u000e\u0001\u001f�.\u0002?�N\u0001S C�2\u0002#�\u0012\u0001\u0003\u0001���\u0002��� �\u0001��� �\u0001���\u0001��\u0007\u0001\u0018�'\u00048�G\u0007X�I\u0006:�)\u0002\u001a�\t �\u0001���\u0003���\u0002��� �\u0001���\u0001���\u0001\u0010�\u001f\u00010�?\u0001P R�A\u00012�! \u0012\u0002\u0002��\u0003���\u0002���\u0001��� �\u0001���\u0001��\b \u0019\u0002)�8\u0002I�X I\u00029�(\u0003\u0019�\b\u0002���\u0001���\u0002���\u0003��� �\u0002���\u0004\u0001�\u0010\u0004!�0\u0003A�P\u0001Q A 1 ! \u0011  ��\u0001� � � � ���\u0002���\u0001� ��\t\u0002\u001a�)\u0001: J�W\u0002H�7\u0001( \u0018�\u0007\u0001� ���\u0002���\u0004���\u0003���\u0001�\u0001��\u0001\u0001\u0012 \"�1\u0003B�Q\u0005P�?\u00030�\u001e�\u000e\u0002 ��\u0001� ���\u0001� ���\u0002���\u0002� �� \u0002\u001b�*\u0003;�J\u0002W�F\u00047�&\u0005\u0017�\u0006\u0002� ���\u0001���\u0002��� � � � � \u0003 \u0013 # 3 C\u0001S�M\u0003>�-\u0003\u001e�   \u0001���\u0002���\u0002���\u0002��� �\u0001��� \f\u0002\u001c�+\u0005<�K\u0005V�E\u00026�%\u0001\u0016�\u0005\u0001���\u0003���\u0002���\u0002���\u0001� ��� \u0004\u0001\u0014�#\u00014�D U\u0001M =�,\u0003\u001d�\f\u0003��� �\u0001���\u0002���\u0001���\u0002���\u0002��\f\u0001\u001d - = M U E�4\u0002%�\u0014\u0004\u0005��\u0003��� �\u0002���\u0004���\u0002���\u0001��\u0004\u0001\u0016�% 6\u0001F�U L <\u0001,�\u001b\u0002\f��\u0004���\u0003��� �\u0001���\u0001� ���\u0001 �  \u001e\u0002.�=\u0003N�S\u0002D�3\u0001$�\u0013\u0001\u0004��\u0001���\u0002���\u0001� ���\u0002���\u0002��\u0006\u0002\u0017�&\u00017\u0001G�V\u0002K�: + \u001b\u0001\u000b��\u0002��� �\u0001��� � � �\u0001���\u0002 �\u000e\u0002\u001f�.\u0002?�N\u0004S�B\u00023�\"\u0001\u0013 \u0003 �\u0001���\u0002���\u0002���\u0001���\u0001���\u0003\u0007�\u0014\u0003#�0\u0001>\u0001K�>\u00021�\"�\u0015\u0002\b��\u0004���\u0002�����\u0002��� �\u0001���\u0002 �\u000b \u0017\u0001\"�,�6\u00038�,\u0004!�\u0016\u0001\f \u0001 � � � � � �\u0001���\u0001���\u0001� \u0005� \u0001\u0016�\u001d\u0001& .�$\u0002\u001d�\u0013\u0005\f�\u0003\u0005���\u0003���\u0001� � � ���\u0002���\u0003 �\u0005\u0002\f \u0012�\u0016\u0002\u001d�\u001b\u0001\u0016 \u0010� \u0002\u0005��\u0002���\u0002���\u0002���\u0002���\u0002���\u0004��\u0001\u0004\u0005�\u0007\u0003\u000b� \u0001\u0010\u0001\f�\b\u0003\u0006�\u0002\u0002\u0001��\u0003���\u0003��� �\u0002���\u0002���  \u0002 ��\u0002\u0001�  \u0001\u0001\u0001�   ","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"","topic":"","x":1350,"y":3880,"wires":[["83a6a741.b083d8"]]},{"id":"83a6a741.b083d8","type":"play audio","z":"89f87d49.41b81","name":"","voice":"","x":1550,"y":3860,"wires":[]},{"id":"92a1f6ed.d388f8","type":"play audio","z":"89f87d49.41b81","name":"","voice":"14","x":750,"y":860,"wires":[]},{"id":"7e672c85.ba1aa4","type":"base64","z":"89f87d49.41b81","name":"","action":"","property":"payload","x":740,"y":800,"wires":[["92a1f6ed.d388f8"]]},{"id":"c64a50dd.083f1","type":"inject","z":"89f87d49.41b81","name":"test  BEEP","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_beep","vt":"str"},{"p":"payload.value","v":"any","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":700,"y":2400,"wires":[["f302b04b.6478b"]]},{"id":"dd28534e.b1b93","type":"inject","z":"89f87d49.41b81","name":"test  Hello Word","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_play","vt":"str"},{"p":"payload.value","v":"\"Ciao mondo\"","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":720,"y":2440,"wires":[["f302b04b.6478b"]]},{"id":"f302b04b.6478b","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":895,"y":2400,"wires":[]},{"id":"dea078d9.039b68","type":"inject","z":"89f87d49.41b81","name":"test  BEEP LOOP","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_beep_loop","vt":"str"},{"p":"payload.value","v":"{\"count\":3, \"timeout\":1000}","vt":"json"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":720,"y":2480,"wires":[["f302b04b.6478b"]]},{"id":"52445b44.003e34","type":"exec","z":"89f87d49.41b81","command":"","addpay":true,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":210,"y":840,"wires":[["32a4c277.338ace"],["32a4c277.338ace"],[]]},{"id":"32a4c277.338ace","type":"subflow:81d3b584.14c888","z":"89f87d49.41b81","name":"","env":[{"name":"deviceID","value":"_system","type":"str"},{"name":"propertyDP","value":"_exec","type":"str"},{"name":"value","value":"@msg.payload","type":"str"}],"x":390,"y":840,"wires":[["aa6116ba.7b69c8"]]},{"id":"a6e70593.b4a8f8","type":"inject","z":"89f87d49.41b81","name":"test  EXEC: dir","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_exec","vt":"str"},{"p":"payload.value","v":"DIR  /B  /ON  *.json","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":2500,"wires":[["7ab2060b.16fd58"]]},{"id":"7ab2060b.16fd58","type":"link out","z":"89f87d49.41b81","name":"to core.std_cmd","links":["8a1da02d.424ae"],"x":355,"y":2500,"wires":[]},{"id":"6586860d.481bb8","type":"function","z":"89f87d49.41b81","name":"remote log","func":"// only if device is present in alldevices !!\n//-------------------------------- local functions:\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n   // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n   var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n   var func = new Function(wrap(obj[fname])); // ignore the node-red ⚠ warning\n   return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n\n\nvar newMsg = { \n    \"payload\":{\n        \"deviceId\": null, \n        \"data\": {\n            \"t\": Math.floor( Date.now() / 1000 ),    // timestamp (sec), optional, \n            \"dps\":{\n            }}}};\n\n\n// ------  main\n    let paydata = JSON.parse(msg.payload);\n    \n//---------------------- some assert\n    if (!( paydata.remote_from )) {\n        node.warn([\"ASSERT [proxy] fail: msg.payload.remote_from  must exist\", msg]);\n        return [null];\n        }\n    \n    var alld = global.get(\"alldevices\");\n    const PSEUDODP = alld.__pseudodp;\n    var o = _callJSONMethod(alld, \"__getODev\", paydata.device || \"_system\");\n    \n    if (o === undefined){\n        node.warn([\"ERROR [proxy]: not found remote device \"+ paydata.device, msg]);\n        return [null];\n     }\n     //    newMsg.from = o.id;\n    newMsg.payload.deviceId =o.id;\n    newMsg.payload[\"remote_from\"] =  paydata.remote_from;\n\n        \n    if (paydata.list !== undefined){  // is list\n        newMsg.payload.data.dps[\"list\"]= paydata.list.sort();\n        return newMsg;\n    }\n    \n    if (paydata.schema !== undefined){     // is schema: record for any dp - pseudoDP\n       Object.entries(paydata.schema).forEach(([key, value]) =>{\n          if ( ! PSEUDODP.includes(key.toUpperCase())) {\n              newMsg.payload.data.dps[key]=  value;\n              }\n          });\n    return newMsg;\n    }\n//    node.warn([\"IN REST \", paydata])\n    if(paydata.status)  // is SET\n        return null;\n//       newMsg.payload.data.dps[ paydata.property]=  paydata.status;   // extra value 'sent'\n//    else                // is GET\n      newMsg.payload.data.dps[ paydata.property]=  paydata.value; \n //   node.warn([\" OUT msg remote \", newMsg]);\n    return newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1010,"y":140,"wires":[["cd81b742.e8a268"]]},{"id":"cb0e33e6.f0a6b","type":"tuya-smart-device","z":"173260fb.d021ff","deviceName":"WiFi plug","disableAutoStart":false,"deviceId":"bf94066e80ba060a04vmxi","deviceKey":"ddfd532e9962d0a8","deviceIp":"","retryTimeout":"5000","findTimeout":"3000","tuyaVersion":"3.1","eventMode":"event-both","x":1180,"y":700,"wires":[["2ec83963.a7d146"],["572ec9e9.c41048"]],"info":"CUSTOMIZATION\n\n  - duplicate for any new device\n  - set proprties: deviceId (or IP), key, retry timeout (1000 ms), find timeout (5000 ms)."},{"id":"3d5897cf.378f68","type":"subflow:e1c6cc8a.2f92a","z":"173260fb.d021ff","name":"","env":[{"name":"deviceID","value":"bf94066e80ba060a04vmxi","type":"str"}],"x":910,"y":700,"wires":[["cb0e33e6.f0a6b","29e990a5.dd72d"],["678390f9.125df"]]},{"id":"174c716c.f1fbbf","type":"inject","z":"d02ad611.d94bc8","name":"meter SET OFF","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"1\",\"value\":\"off\"}","payloadType":"json","x":640,"y":2220,"wires":[["fc6aa253.9d063"]]},{"id":"c50700c1.759c8","type":"inject","z":"d02ad611.d94bc8","name":"meter SET oON","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"AC meter\",\"property\":\"1\",\"value\":1}","payloadType":"json","x":640,"y":2180,"wires":[["fc6aa253.9d063"]]},{"id":"24e2d22a.b7839e","type":"comment","z":"4bebbdfa.41af64","name":"MIRROR DEVICE 'Leak detector #3'","info":"mirror device 'door sensor' input messages\n\n","x":240,"y":1320,"wires":[]},{"id":"ae8e87ec.c69238","type":"switch","z":"4bebbdfa.41af64","name":"leak alarm","property":"payload.tuyatrigger","propertyType":"msg","rules":[{"t":"eq","v":"1150","vt":"str"},{"t":"eq","v":"1160","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":410,"y":1380,"wires":[["6a31b3f.846784c"],["3768557a.d122ea"]],"info":"for my device\ndp = 102    // countdown"},{"id":"3768557a.d122ea","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1160: inject Leak alarm ON","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1150","type":"str"},{"name":"value","value":"true","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":760,"y":1400,"wires":[["bca73204.e6afc"]]},{"id":"6a31b3f.846784c","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"1150: inject leak OFF","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"1150","type":"str"},{"name":"value","value":"false","type":"bool"},{"name":"fakeDP","value":"1030","type":"num"}],"x":780,"y":1360,"wires":[["bca73204.e6afc"]]},{"id":"b855dd13.84c18","type":"link in","z":"4bebbdfa.41af64","name":"triggers IN","links":["9efb8156.f33d4"],"x":255,"y":1380,"wires":[["ae8e87ec.c69238"]]},{"id":"bca73204.e6afc","type":"link out","z":"4bebbdfa.41af64","name":"to logging","links":["9fe80f7e.f3f7e"],"x":955,"y":1380,"wires":[]},{"id":"a5b2e785.7c0848","type":"subflow:81d3b584.14c888","z":"4bebbdfa.41af64","name":"connected","env":[{"name":"deviceID","value":"04208127d8bfc0dac0e5","type":"str"},{"name":"propertyDP","value":"_connected","type":"str"},{"name":"value","value":"true","type":"bool"}],"x":810,"y":1440,"wires":[["bca73204.e6afc"]]},{"id":"1b76f6cb.66b489","type":"link in","z":"4bebbdfa.41af64","name":"","links":["37306de6.0a7f42"],"x":495,"y":1440,"wires":[["a5b2e785.7c0848"]]},{"id":"572ec9e9.c41048","type":"subflow:15c9daba.b55285","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"bf94066e80ba060a04vmxi","type":"str"},{"name":"MinTimeout","value":"2","type":"num"}],"x":1600,"y":700,"wires":[["81103bac.696bc8"],["756a073a.e295b8"]]},{"id":"1101a53c.b61d6b","type":"comment","z":"173260fb.d021ff","name":"Dbase logging","info":"","x":1210,"y":1360,"wires":[]},{"id":"3947d6a4.4bc86a","type":"inject","z":"89f87d49.41b81","name":"*test toShare \"_system SET doTrigger 5000\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toShare\",\"value\":{\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":5000}]}]}}","payloadType":"json","x":710,"y":1500,"wires":[["6473326d.c244ac"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"6473326d.c244ac","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":955,"y":1500,"wires":[]},{"id":"8ce9000a.a5fc3","type":"inject","z":"89f87d49.41b81","name":"*test toShare \"_system GET doTrigger\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toShare\",\"value\":{\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":null}]}]}}","payloadType":"json","x":690,"y":1580,"wires":[["6473326d.c244ac"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"35280f14.ce8c1","type":"inject","z":"89f87d49.41b81","name":"*test toShare \"_system SET doTrigger 5020\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toShare\",\"value\":{\"share\":[{\"action\":[{\"device\":\"_system\",\"property\":\"_doTrigger\",\"value\":5020}]}]}}","payloadType":"json","x":710,"y":1540,"wires":[["6473326d.c244ac"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"477c45d8.ce4dfc","type":"inject","z":"89f87d49.41b81","name":"*test toShare +info \"_system SET doTrigger 5000\"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"device\":\"_system\",\"property\":\"_toShare\",\"value\":{\"info\":{\"property\":\"_doTrigger\",\"value\":5000},\"share\":[{\"action\":[{\"device\":\"_system\"}]}]}}","payloadType":"json","x":730,"y":1620,"wires":[["6473326d.c244ac"]],"info":"FOR test - Required automations in Tuya :\n5000: set  switch module #1 ON:\n\n`if \"tuya_bridge\"countdown:5000, \"tuya_bridge\"countdown:0 + 'switch module #1'switch:on`\n\n"},{"id":"2ed08207.23ffae","type":"link out","z":"89f87d49.41b81","name":"to core.fast_cmds","links":["c084a743.290b28"],"x":1235,"y":840,"wires":[]},{"id":"284250cf.ebbeb","type":"function","z":"89f87d49.41b81","name":"command/share select","func":"if (msg.share)           // is share\n   return([null, msg]);\nnewMsg = {payload:msg};  // is command\nreturn ([newMsg, null]);","outputs":2,"noerr":0,"initialize":"","finalize":"","x":1040,"y":860,"wires":[["2ed08207.23ffae"],["818feefe.ab666"]],"outputLabels":["to core.fst_cmds","to core.share_IN"]},{"id":"6d16a0c.1e8b16","type":"inject","z":"d02ad611.d94bc8","name":" TEST SET _refreshCycle(2)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"dps\":\"_refreshCycle\",\"set\":2}","payloadType":"json","x":200,"y":60,"wires":[["60f3042.84667fc"]]},{"id":"790d078c.b8faf8","type":"inject","z":"d02ad611.d94bc8","name":" TEST SET _refreshCycle(60)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"dps\":\"_refreshCycle\",\"set\":60}","payloadType":"json","x":200,"y":100,"wires":[["60f3042.84667fc"]]},{"id":"f2f1c51a.683d08","type":"inject","z":"d02ad611.d94bc8","name":"TEST GET  _refreshCycle()","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"operation\":\"GET\",\"dps\":\"_refreshCycle\"}","payloadType":"json","x":190,"y":140,"wires":[["60f3042.84667fc"]]},{"id":"557739bd.c20698","type":"tuya-smart-device","z":"d02ad611.d94bc8","d":true,"deviceName":"tuya device","deviceId":"bf94066e80ba060a04vmxi","deviceKey":"ddfd532e9962d0a8","deviceIp":"","retryTimeout":"2279","findTimeout":"6291","tuyaVersion":"3.3","eventMode":"event-both","x":830,"y":120,"wires":[["31848eb8.4d4002"],[]]},{"id":"d9076dc4.4ee18","type":"inject","z":"d02ad611.d94bc8","name":"TEST SET MULTIPLE  \"1\":ON + _refreshCycle(2)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"multiple\":true,\"data\":{\"1\":true,\"_refreshCycle\":2}}","payloadType":"json","x":260,"y":180,"wires":[["60f3042.84667fc"]]},{"id":"b33cb408.fd42f8","type":"inject","z":"d02ad611.d94bc8","name":"SCHEMA","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"operation\":\"GET\", \"schema\":true}","payloadType":"json","x":140,"y":260,"wires":[["60f3042.84667fc"]]},{"id":"31848eb8.4d4002","type":"debug","z":"d02ad611.d94bc8","name":"TEST","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1030,"y":160,"wires":[]},{"id":"a48f8c4c.cb5fb","type":"inject","z":"d02ad611.d94bc8","name":"TEST SET MULTIPLE  \"1\":ON + _refreshCycle(30)","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"multiple\":true,\"data\":{\"1\":true,\"_refreshCycle\":30}}","payloadType":"json","x":270,"y":220,"wires":[["60f3042.84667fc"]]},{"id":"60f3042.84667fc","type":"subflow:e1c6cc8a.2f92a","z":"d02ad611.d94bc8","name":"","env":[{"name":"deviceID","value":"bf94066e80ba060a04vmxi","type":"str"}],"x":590,"y":160,"wires":[["557739bd.c20698"],["31848eb8.4d4002"]]},{"id":"808a0753.c4e598","type":"mqtt in","z":"3332031a.de38fc","name":"","topic":"/ozone/timerpdm/1/status/info","qos":"0","datatype":"utf8","broker":"2e55898d.e8af66","x":540,"y":300,"wires":[["80d3499e.df2d58"]]},{"id":"c1b5bd9e.0aff1","type":"mqtt out","z":"3332031a.de38fc","name":"MQTT send","topic":"","qos":"","retain":"","broker":"2e55898d.e8af66","x":490,"y":160,"wires":[]},{"id":"505b5823.792928","type":"mqtt in","z":"3332031a.de38fc","name":"","topic":"/ozone/timerpdm/1/status/config","qos":"0","datatype":"utf8","broker":"2e55898d.e8af66","x":550,"y":220,"wires":[["7a13d179.a10ed"]]},{"id":"215fc962.4168a6","type":"mqtt in","z":"3332031a.de38fc","name":"","topic":"/ozone/timerpdm/1/status/output","qos":"2","datatype":"utf8","broker":"2e55898d.e8af66","x":550,"y":260,"wires":[["938228d2.f21868"]]},{"id":"9ae04f2.4bac6b","type":"function","z":"3332031a.de38fc","name":"handle GET operations","func":"// GET: response from tuyastatus.\n//\n// local functions to get tuyastatus from device.msg\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // to use the stored JSON method library in global alldevices\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore the ⚠ node-red warning\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\nfunction _getGlobalValue(Dn, Pn){\nvar tuyastatus = global.get(\"tuyastatus\");\nif ((tuyastatus !== undefined) && (tuyastatus[Dn] !== undefined)) { // ok device field\n   if (Pn === \"schema\") \n          return tuyastatus[Dn];\n   return tuyastatus[Dn][Pn];\n   }\nreturn undefined;\n}\n\n// ===========================  main\n\nlet command = msg.payload.operation || 'SET';\n// node.warn([\"in command\", command, msg]);\nconst PREFIX = \"/ozone/timerpdm/1/\";\n\nif (command === 'GET'){\n      // value from tuyastatus, format as device response\n      var alld = global.get(\"alldevices\");\n      let oD    = _callJSONMethod(alld, \"__getODev\", msg.to);\n      var dName = _callJSONMethod(alld, \"__getDevName\", oD);\n      var pName = _callJSONMethod(alld, \"__getDpsName\", oD, msg.infodp);\n      var value = _getGlobalValue(dName, pName);\n      if (value !== undefined){\n            var newMsg = { \n               \"payload\":{\n                  \"deviceId\": msg.to,\n                  \"deviceName\": dName,\n                  \"data\": {\n                      \"dps\":{\n                          [msg.payload.dps]: value  \n                  }}}};\n          return newMsg;\n          }\nreturn null;          \n}  \n","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\n//\n// Stuff to save data in tuyastatus\n// --------------- locals\nfunction _callJSONMethod(obj, fname, a, b, c, d) {\n    // see: https://stackoverflow.com/questions/49125059/how-to-pass-parameters-to-an-eval-based-function-injavascript\n    var wrap = s => \"{ return \" + obj[fname] + \" };\" //return the block having function expression\n    var func = new Function(wrap(obj[fname])); // ignore ⚠\n    return func.call(null).call(obj, a, b, c, d); //invoke the function using arguments\n}\n\n// ---------------- main\nconst DEVID = \"sonoff001\"; // can have friendly name\n// stuff to access data\nvar alld = global.get(\"alldevices\");\nif (alld === undefined)\n    return null;\n// find object dp\nvar oDev = _callJSONMethod(alld, \"__getODev\", DEVID, \"real\");\nvar pmDevName = _callJSONMethod(alld, \"__getDevName\", oDev);\n//\ntuyastatus = global.get(\"tuyastatus\");\nif (tuyastatus === undefined)\n    tuyastatus = {};\nif (tuyastatus[pmDevName] === undefined)\n    tuyastatus[pmDevName] = {};\n// init\ntuyastatus[pmDevName][\"_connected\"] = true;\n\noDev.dps.forEach(adp => {\n            if (['RW','WW','GW','RO','UNK','PUSH','SKIP',undefined].includes(adp.capability))\n                 tuyastatus[pmDevName][adp.name ? adp.name:adp.dp] = \"none\"; });\n\nglobal.set(\"tuyastatus\", tuyastatus);\n","finalize":"","x":310,"y":120,"wires":[[]]},{"id":"464d6ade.3318f4","type":"status","z":"3332031a.de38fc","name":"MQTT status","scope":["808a0753.c4e598","c1b5bd9e.0aff1","505b5823.792928","215fc962.4168a6"],"x":490,"y":360,"wires":[["8329893d.2679a8"]]},{"id":"80d3499e.df2d58","type":"function","z":"3332031a.de38fc","name":"refresh + JSON split ","func":"let tcount = global.get(\"tcount\");\ntcount = ( ++tcount) % global.get(\"tstart\");\nglobal.set(\"tcount\",tcount);\nif (tcount > 0) return null;\n\nvar newMsg = { \n    \"payload\":{\n        \"deviceId\": \"sonoff001\",\n        \"data\": {\n             \"dps\":{\n            }}}};\nlet odata = JSON.parse(msg.payload);\nnewMsg.payload.data.dps[\"_info\"] = odata[0];\nswitch(odata[1]){\n  case 0:\n     newMsg.payload.data.dps[\"_led\"] = \"gray\";\n     break;\n  case 1:\n     newMsg.payload.data.dps[\"_led\"] = \"green\";\n     break;\n  case 2:\n     newMsg.payload.data.dps[\"_led\"] = \"red\";\n     break;\n}\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node \nglobal.set(\"tstart\", 90);\nglobal.set(\"tcount\", 0);","finalize":"","x":840,"y":300,"wires":[[]]},{"id":"7a13d179.a10ed","type":"function","z":"3332031a.de38fc","name":"JSON split","func":"\nvar newMsg = { \n    \"payload\":{\n        \"deviceId\": \"sonoff001\",\n        \"data\": {\n             \"dps\":{\n            }}}};\nlet odata = JSON.parse(msg.payload);\nnewMsg.payload.data.dps[\"_mode\"] = odata[\"mode\"] ==0?\"OFF\":odata[\"mode\"] ==1?\"AUTO\":\"LOOP\";\nnewMsg.payload.data.dps[\"_ONtime\"] = odata[\"ONtime\"];\nnewMsg.payload.data.dps[\"_OFFtime\"] = odata[\"OFFtime\"];\nnewMsg.payload.data.dps[\"_PDM\"] = odata[\"PDM\"];\nnewMsg.payload.data.dps[\"_timezone\"] = odata[\"timezone\"];\n// change\nnewMsg.payload.data.dps[\"_startTime\"] = odata[\"Ttime\"];\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node \nflow.set(\"tstart\", 5);\nflow.set(\"tcount\", 0);","finalize":"","x":810,"y":220,"wires":[[]]},{"id":"938228d2.f21868","type":"function","z":"3332031a.de38fc","name":"JSON split","func":"var newMsg = { \n    \"payload\":{\n        \"deviceId\": \"sonoff001\",\n        \"data\": {\n             \"dps\":{\n            }}}};\nlet odata = JSON.parse(msg.payload);\nnewMsg.payload.data.dps[\"_mode\"] = odata[\"mode\"] ==0?\"OFF\":odata[\"mode\"] ==1?\"AUTO\":\"LOOP\";\nnewMsg.payload.data.dps[\"_PDM\"] = odata[\"PDM\"];\nnewMsg.payload.data.dps[\"_count\"] = odata[\"count\"];\n// name change\nnewMsg.payload.data.dps[\"_clock\"] = odata[\"Ttime\"];\nnewMsg.payload.data.dps[\"_switch\"] = odata[\"output\"];  //  converted by BOOLEANONOFF\nnewMsg.payload.data.dps[\"_countdown\"] = odata[\"toggle\"];\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node \nflow.set(\"tstart\", 5);\nflow.set(\"tcount\", 0);","finalize":"","x":810,"y":260,"wires":[[]]},{"id":"c4463434.4fd7b8","type":"subflow:3332031a.de38fc","z":"173260fb.d021ff","name":"","env":[],"x":1200,"y":740,"wires":[["2ec83963.a7d146"],["db4cb537.59d698"]]},{"id":"5d8130ef.8552e","type":"inject","z":"d02ad611.d94bc8","name":"test GO","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_go","vt":"str"},{"p":"payload.value","v":"now","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":190,"y":2780,"wires":[["beb91b.bdf6e6e8"]]},{"id":"beb91b.bdf6e6e8","type":"link out","z":"d02ad611.d94bc8","name":"","links":["8a1da02d.424ae"],"x":435,"y":2780,"wires":[]},{"id":"60689a7b.4e1184","type":"inject","z":"d02ad611.d94bc8","name":"test OFF","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_off","vt":"str"},{"p":"payload.value","v":"now","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":200,"y":2820,"wires":[["beb91b.bdf6e6e8"]]},{"id":"cfbfe35f.0420b","type":"inject","z":"d02ad611.d94bc8","name":"test send","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_send","vt":"str"},{"p":"payload.value","v":"now","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":2900,"wires":[["beb91b.bdf6e6e8"]]},{"id":"911ca726.bbce08","type":"comment","z":"d02ad611.d94bc8","name":"TEST MQTT/ozone/1","info":"","x":210,"y":2720,"wires":[]},{"id":"2befa229.08aabe","type":"inject","z":"d02ad611.d94bc8","name":"test MODE LOOP","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_mode","vt":"str"},{"p":"payload.value","v":"LOOP","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":2940,"wires":[["beb91b.bdf6e6e8"]]},{"id":"54bfd6ce.88e758","type":"inject","z":"d02ad611.d94bc8","name":"test refreshCycle 60","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_refreshCycle","vt":"str"},{"p":"payload.value","v":"60","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":2980,"wires":[["beb91b.bdf6e6e8"]]},{"id":"2078edc1.fd6292","type":"inject","z":"d02ad611.d94bc8","name":"test END","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_end","vt":"str"},{"p":"payload.value","v":"now","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":2860,"wires":[["beb91b.bdf6e6e8"]]},{"id":"db4cb537.59d698","type":"subflow:15c9daba.b55285","z":"173260fb.d021ff","name":"","env":[{"name":"deviceId","value":"sonoff001","type":"str"},{"name":"MinTimeout","value":"4","type":"num"},{"name":"MaxTimeout","value":"120","type":"str"}],"x":1600,"y":740,"wires":[["81103bac.696bc8"],["756a073a.e295b8"]]},{"id":"c8e74e64.7eafe","type":"function","z":"3332031a.de38fc","name":"SET to MQTT","func":"// SET: format change, and some name/values changes\n\nlet command = msg.payload.operation || 'SET';\nconst PREFIX = \"/ozone/timerpdm/1/\";\n\nif (command == 'SET'){\n       switch(msg.payload.dps) {\n           case '_go':    // MQTT commands\n           case '_off':\n           case '_end':\n           case '_send':\n               msg.topic=PREFIX + \"command\";\n               msg.payload = msg.payload.dps.substring(1);\n               return msg;\n           case '_refresh': // name change\n               msg.payload =\"send\";\n               msg.topic=PREFIX + \"command\";\n               return msg;\n           case '_refreshCycle':  // implementation in node 'refresh + JSON split'\n               global.set(\"tstart\", msg.payload.set);\n               break;\n           case \"_mode\":     // value conversion\n                if (msg.payload.set === 'OFF')  msg.payload.set = 0;\n                if (msg.payload.set === 'AUTO') msg.payload.set = 1;\n                if (msg.payload.set === 'LOOP') msg.payload.set = 2;\n                msg.payload =\"{\\\"data\\\":\\\"\"+msg.payload.dps.substring(1)+\"\\\",\\\"value\\\":\\\"\"+msg.payload.set +\"\\\"}\";\n                msg.topic=PREFIX + \"set\";\n                return msg;\n             case \"_startTime\":  // name change\n                 msg.payload.dps = \"+Ttime\";\n                 msg.payload =\"{\\\"data\\\":\\\"\"+msg.payload.dps.substring(1)+\"\\\",\\\"value\\\":\\\"\"+msg.payload.set +\"\\\"}\";\n                 msg.topic=PREFIX + \"set\";\n                 return msg;\n             case \"_clock\":  // name change\n                 msg.payload.dps = \"+nowtime\";\n                 msg.payload =\"{\\\"data\\\":\\\"\"+msg.payload.dps.substring(1)+\"\\\",\\\"value\\\":\\\"\"+msg.payload.set +\"\\\"}\";\n                 msg.topic=PREFIX + \"set\";\n                 return msg;\n           default:      // MQTT set, not name change, not value conversions\n                 msg.payload =\"{\\\"data\\\":\\\"\"+msg.payload.dps.substring(1)+\"\\\",\\\"value\\\":\\\"\"+msg.payload.set +\"\\\"}\";\n                 msg.topic=PREFIX + \"set\";\n                 return msg;\n           }\n}\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":280,"y":160,"wires":[["c1b5bd9e.0aff1"]]},{"id":"9deb43d9.2c108","type":"inject","z":"d02ad611.d94bc8","name":"test refreshCycle 6","props":[{"p":"payload.device","v":"sonoff001","vt":"str"},{"p":"payload.property","v":"_refreshCycle","vt":"str"},{"p":"payload.value","v":"5","vt":"num"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":3020,"wires":[["beb91b.bdf6e6e8"]]},{"id":"6c72d7fb.2c6318","type":"debug","z":"64074ca.02860b4","d":true,"name":"MQTT BROKER MSG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":260,"wires":[]},{"id":"5e5a634a.3dd57c","type":"mqtt out","z":"64074ca.02860b4","name":"client MQTT - events","topic":"","qos":"1","retain":"true","broker":"337e95bb.d94d9a","x":600,"y":320,"wires":[]},{"id":"d9a39495.b40668","type":"mqtt in","z":"64074ca.02860b4","name":"client MQTT - commands","topic":"tuyaDAEMON/+/+/command/#","qos":"1","datatype":"auto","broker":"337e95bb.d94d9a","x":610,"y":380,"wires":[["a71345ed.371c68"]]},{"id":"5481379d.427ab8","type":"aedes broker","z":"64074ca.02860b4","name":"tuyaDEAMON broker","mqtt_port":1883,"mqtt_ws_bind":"port","mqtt_ws_port":"8088","mqtt_ws_path":"","cert":"","key":"","certname":"","keyname":"","dburl":"","usetls":false,"x":600,"y":260,"wires":[["6c72d7fb.2c6318"]]},{"id":"a71345ed.371c68","type":"function","z":"64074ca.02860b4","name":"format std command","func":"function yesSpecial(str){\n      let tmp = str.replace('%23','#').replace('%2B','+').trim();\n      return  (tmp)? tmp.replace('%25','%') : undefined;     // the space (' ') becomes undefined\n}\n\n    let inptop = msg.topic + '//////';\n    let pars = inptop.split(\"/\");\n    newmsg = {payload:{}};\n//    node.warn([\"pre in MQTT\",pars, newmsg ]);\n    if ((pars[0]=='tuyaDAEMON') && (pars[3]=='command')) {\n        newmsg.payload['remote']   =  pars[1]; \n        newmsg.payload['device']   =  yesSpecial(pars[2]) ; \n        newmsg.payload['property'] =  yesSpecial(pars[4]) ; \n        newmsg.payload['value']    = (msg.payload)?JSON.parse(msg.payload): undefined ; \n//    node.warn([\"post in MQTT\",pars, newmsg ]);\n        return newmsg;       \n    }\n return null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":880,"y":380,"wires":[["c6eec3b9.38b0b","4ff9cef5.4369b"]]},{"id":"b8e273f8.d51a7","type":"link in","z":"173260fb.d021ff","name":"event in","links":["2e4937fc.2ef1f8"],"x":495,"y":1440,"wires":[["65eb2aa.067dfd4","f1edf094.cfc34"]]},{"id":"39f74e4e.a48f02","type":"link in","z":"64074ca.02860b4","name":"automata_in","links":["9fe75b23.a05408"],"x":195,"y":320,"wires":[["650b8f33.afb81","ec6fabc5.d5f158"]]},{"id":"650b8f33.afb81","type":"function","z":"64074ca.02860b4","name":"format event","func":"//\nfunction noSpecial(str) {\n    let tmp = str.replace('%', '%25').replace('#', '%23');\n    return tmp.replace('+', '%2B');\n}\n\nlet urls = global.get(\"remotemap\");\nlet remote = msg.remote_from || urls.itself;\n\n// Special case list devices (if empty command)\nif ((msg.from === \"_system\") && (msg.infodp === \"list\") && (msg.info.value.length > 0)) {\n    msg.info.value.forEach((device, index) => {\n        lmsg = {\n            topic: 'tuyaDAEMON/' + remote + '/' + noSpecial(device) + '/event',\n            payload: null\n        };\n        node.send(lmsg);\n    });\n    return null;\n}\n\n// Special case list devices   ( from _system/_tuyastatus)\nif ((msg.from === \"_system\") && (msg.infodp === \"_tuyastatus\") && (msg.info.value.list !== undefined)) {\n    msg.info.value.list.forEach((device, index) => {\n        lmsg = {\n            topic: 'tuyaDAEMON/' + remote + '/' + noSpecial(device) + '/event',\n            payload: null\n        };\n        node.send(lmsg);\n    });\n    return null;\n}\n\n// Special case schema devices   ( from _system/_tuyastatus)\nif ((msg.from === \"_system\") && (msg.infodp === \"_tuyastatus\") && (msg.info.value.value.schema !== undefined)) {\n    //         msg.info.value.value.schema.forEach((dps, val) => {\n    for (const[dps, val]of Object.entries(msg.info.value.value.schema)) {\n        lmsg = {\n            topic: 'tuyaDAEMON/' + remote + '/' + noSpecial(msg.info.value.device) + '/event/' + noSpecial(dps),\n            payload: (val === \"\") ? '\"null\"' : JSON.stringify(val)\n        };\n        if (dps !== '_t')\n            node.send(lmsg);\n    }\n    return null;\n}\n\n// general case\nlet xtopic = 'tuyaDAEMON/' + remote + '/' + noSpecial(msg.info.device) + '/event/' + noSpecial(msg.info.property);\nnewmsg = {topic: xtopic};\nnewmsg.payload = (msg.info.value === \"\") ? '\"null\"' : JSON.stringify(msg.info.value);\nif (msg.info.property === '_t')\n    return null;\nreturn newmsg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":320,"wires":[["5e5a634a.3dd57c","84e57447.7a8ff8"]]},{"id":"f1edf094.cfc34","type":"function","z":"173260fb.d021ff","name":"notification","func":"const TIMEOUT = 20000;\n\nvar urls = global.get(\"remotemap\");\n\ncmdlist = flow.get(\"waitcmd\");\n//  node.warn([\"inPUT SET \", msg, cmdlist]);\nif (cmdlist === undefined)\n  cmdlist = [];\n  \ncmdlist = cmdlist.filter(obj => obj._t + TIMEOUT > Date.now()); \n\n// remote SET msg: stores it to send delayed answewr  \nif(msg.payload && msg.payload.remote_from && (msg.infodp !== \"_toLogging\"))\n{\n//  node.warn([\"in SET \", msg, cmdlist])\n  msg['_t'] = Date.now();\n  cmdlist.push(msg); \n  flow.set(\"waitcmd\", cmdlist);\n  return null;\n}\n/*\n{\n    \"remote\": \"DEVPC\",\n    \"device\": \"_system\",\n    \"property\": \"_toLogging\",\n    \"value\": {\n        \"remote_from\": \"ANDROID\",\n        \"deviceId\": \"bfa355aa196ae5975cy6ii\",\n        \"data\": {\n            \"dps\": {\n                \"1\": \"OFF\"\n            }\n        }\n    }\n}\n*/\n// noting to do\nif (cmdlist.length < 1 ) return null;\n// test response\nif(msg.info && msg.info.value && (msg.infodp !== \"_toLogging\")) {\n   cmdlist.forEach(function (oldmsg, index) {\n//    node.warn([\"test GET \", msg, oldmsg]);\n           if (oldmsg.to == msg.from){\n                var cmm ={\n                    payload:{\n                      remote : oldmsg.payload.remote_from,\n                      device:\"_system\",\n                      property: \"_toLogging\",\n                      value:{\n                            remote_from : urls.itself,\n                            deviceId : oldmsg.to,\n                            data:{\n                                dps: {}\n                                }\n                       }\n                     }};\n                cmm.payload.value.data.dps[msg.infodp] = msg.info.value;   \n       node.warn([\"in GET \", msg, cmm]);\n               node.send( cmm );\n            }\n  \n   });\n}\n\nreturn null;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":670,"y":1440,"wires":[["58c718a1.bbd748"]]},{"id":"84e57447.7a8ff8","type":"debug","z":"64074ca.02860b4","d":true,"name":"MQTT TX EVENTS","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":590,"y":440,"wires":[]},{"id":"66c51b24.228eb4","type":"inject","z":"173260fb.d021ff","name":"Plug STANDBY true","props":[{"p":"payload.device","v":"Wifi Plug","vt":"str"},{"p":"payload.property","v":"_standby","vt":"str"},{"p":"payload.value","v":"true","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":1700,"wires":[["7d098f27.1bff7"]]},{"id":"7d098f27.1bff7","type":"link out","z":"173260fb.d021ff","name":"","links":["8a1da02d.424ae"],"x":415,"y":1700,"wires":[]},{"id":"85605f5.2779ca","type":"catch","z":"ee008879.f5adc8","name":"*catch device and LAN errors","scope":["e37f5692.37de78","28f4d04b.ed1b7"],"uncaught":false,"x":880,"y":520,"wires":[[]],"info":"CUSTOMIZATION:\n\n- Adding a new device\n    Select the new tuya-smart-device node."},{"id":"8792104e.e64d4","type":"function","z":"173260fb.d021ff","name":"*Info commands filter","func":"// kills unwanted tuyaDEAMON info messages & MQTT\n// Simple case based only on device ID\n// You can add more tests, based on single data point dp (in msg.infodp)\nif((typeof(msg.to) !== \"string\") && (typeof(msg.from) !== \"string\") )\n         node.warn([\"ASSERT fail: in msg the to/from (string) must exist.\", msg]) ;   \nif(typeof(msg.infodp) !== \"string\")\n         node.warn([\"ASSERT fail: in msg the msg.infodp (string) must exist.\" , msg]) ;   \n\n// ==================== for COMMANDS msg TO devices\nswitch (msg.to){    \n    case \"bfa1bdeb107d379fbckkwv\":                    // watering switch   \n    case \"bfa9c64e128b39eddcgwyt\":                    // watering timer   \n       return null;  // killed\n    case \"bf8c4fd0c03067079cplb4\":                    // tuya bridge trigger\n         if (msg.infodp === \"7\") return(null);\n         break;\n    case \"_system\":\n         if (msg.infodp === \"_zeroTask\") return(null);   // fast benchmarks\n         if (msg.infodp === \"_toLogging\") return(null);   //  internal use: REST remote echo\n         if (msg.infodp === \"_proxy\") return(null);   //  internal use: REMOTE commands \n        break;\n\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1200,"y":1060,"wires":[["d62f5a18.fe10b8","7316efb9.f1d1c"]],"info":"CUSTOMIZATION:\n\nFilter to reduce info messages on Debug pad.\n\n- On installation and test:\n  Best don't filer any message.\n- On production:\n  Better to filter not useful events.\n\n_________________________________\n  \nSee the example filter:\n \nTest can be done on \n       msg.from:            RX info, the deviceId\n       msg.to:              TX info, the deviceId\n       msg.infodp:          the dpId          \n  \n   "},{"id":"9fe75b23.a05408","type":"link out","z":"173260fb.d021ff","name":"events info","links":["39f74e4e.a48f02"],"x":1470,"y":1140,"wires":[],"l":true},{"id":"7316efb9.f1d1c","type":"link out","z":"173260fb.d021ff","name":"commands info","links":[],"x":1460,"y":1060,"wires":[],"l":true},{"id":"c6eec3b9.38b0b","type":"link out","z":"64074ca.02860b4","name":"","links":["8a1da02d.424ae"],"x":1075,"y":380,"wires":[]},{"id":"e7da678.417d298","type":"inject","z":"89f87d49.41b81","name":"doUPDATE   REMOTE","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doUPDATE","vt":"str"},{"p":"payload.value","v":"NULL","vt":"str"},{"p":"payload.remote","v":"ANDROID","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":380,"y":2040,"wires":[["37cf409a.4d0b5"]]},{"id":"337b6aaa.988036","type":"inject","z":"89f87d49.41b81","name":"Test doSCHEMA for 'power strip'","props":[{"p":"payload.device","v":"_system","vt":"str"},{"p":"payload.property","v":"_doSCHEMA","vt":"str"},{"p":"payload.value","v":"power strip","vt":"str"},{"p":"payload.remote","v":"ANDROID","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":310,"y":1840,"wires":[["37cf409a.4d0b5"]]},{"id":"5922e185.46297","type":"comment","z":"173260fb.d021ff","name":"Test version 2.1","info":"","x":160,"y":1640,"wires":[]},{"id":"40ef2712.d53ea8","type":"inject","z":"173260fb.d021ff","name":"Plug STANDBY false","props":[{"p":"payload.device","v":"Wifi Plug","vt":"str"},{"p":"payload.property","v":"_standby","vt":"str"},{"p":"payload.value","v":"false","vt":"bool"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":1740,"wires":[["f260f4ac.978c98"]]},{"id":"f260f4ac.978c98","type":"link out","z":"173260fb.d021ff","name":"","links":["8a1da02d.424ae"],"x":415,"y":1740,"wires":[]},{"id":"8329893d.2679a8","type":"function","z":"3332031a.de38fc","name":"set state","func":"\n\nreturn [{payload:{state : msg.status.fill === \"green\"?\"CONNECTED\":\"DISCONNECTED\"}},\n        msg];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":800,"y":360,"wires":[[],[]]},{"id":"7c4c2941.1c90a8","type":"inject","z":"173260fb.d021ff","name":"Plug ON","props":[{"p":"payload.device","v":"power strip","vt":"str"},{"p":"payload.property","v":"Switch2","vt":"str"},{"p":"payload.value","v":"ON","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":160,"y":1800,"wires":[["dbaa0d27.77ed5"]]},{"id":"dbaa0d27.77ed5","type":"link out","z":"173260fb.d021ff","name":"","links":["8a1da02d.424ae"],"x":415,"y":1800,"wires":[]},{"id":"81fa486f.002308","type":"inject","z":"173260fb.d021ff","name":"Plug OFF","props":[{"p":"payload.device","v":"power strip","vt":"str"},{"p":"payload.property","v":"Switch2","vt":"str"},{"p":"payload.value","v":"OFF","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":160,"y":1840,"wires":[["aa615c60.56ca4"]]},{"id":"aa615c60.56ca4","type":"link out","z":"173260fb.d021ff","name":"","links":["8a1da02d.424ae"],"x":415,"y":1840,"wires":[]},{"id":"4ff9cef5.4369b","type":"debug","z":"64074ca.02860b4","d":true,"name":"MQTT COMMANDS","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1030,"y":440,"wires":[]},{"id":"ec6fabc5.d5f158","type":"debug","z":"64074ca.02860b4","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":320,"y":420,"wires":[]},{"id":"29e990a5.dd72d","type":"debug","z":"173260fb.d021ff","name":"WIFI","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1280,"y":780,"wires":[]}]